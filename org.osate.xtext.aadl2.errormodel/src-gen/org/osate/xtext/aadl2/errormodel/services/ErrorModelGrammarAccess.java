/*
* generated by Xtext
*/

package org.osate.xtext.aadl2.errormodel.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.osate.xtext.aadl2.properties.services.PropertiesGrammarAccess;

@Singleton
public class ErrorModelGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ErrorModelGrammarRootElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ErrorModelGrammarRoot");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cLibraryKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cEmlAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cEmlErrorModelLibraryParserRuleCall_0_1_0 = (RuleCall)cEmlAssignment_0_1.eContents().get(0);
		private final Assignment cEmscAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cEmscErrorModelSubclauseParserRuleCall_1_0 = (RuleCall)cEmscAssignment_1.eContents().get(0);
		
		/// *
		// * Note about symbolic labels as values for occurrence probability:
		// * Use property constant. The core allows it instead of an actual number.
		// * The tools generating stochastic models from such specification can interpret the constant name as the desired label.
		// * /
		//
		//// allow either of the two to be the root. Needed dummy 'library' keyword
		// ErrorModelGrammarRoot:
		//
		//	"library" eml=ErrorModelLibrary | emsc=ErrorModelSubclause;
		public ParserRule getRule() { return rule; }

		//"library" eml=ErrorModelLibrary | emsc=ErrorModelSubclause
		public Alternatives getAlternatives() { return cAlternatives; }

		//"library" eml=ErrorModelLibrary
		public Group getGroup_0() { return cGroup_0; }

		//"library"
		public Keyword getLibraryKeyword_0_0() { return cLibraryKeyword_0_0; }

		//eml=ErrorModelLibrary
		public Assignment getEmlAssignment_0_1() { return cEmlAssignment_0_1; }

		//ErrorModelLibrary
		public RuleCall getEmlErrorModelLibraryParserRuleCall_0_1_0() { return cEmlErrorModelLibraryParserRuleCall_0_1_0; }

		//emsc=ErrorModelSubclause
		public Assignment getEmscAssignment_1() { return cEmscAssignment_1; }

		//ErrorModelSubclause
		public RuleCall getEmscErrorModelSubclauseParserRuleCall_1_0() { return cEmscErrorModelSubclauseParserRuleCall_1_0; }
	}

	public class AnnexLibraryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AnnexLibrary");
		private final RuleCall cErrorModelLibraryParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//AnnexLibrary returns aadl2::AnnexLibrary:
		//
		//	ErrorModelLibrary;
		public ParserRule getRule() { return rule; }

		//ErrorModelLibrary
		public RuleCall getErrorModelLibraryParserRuleCall() { return cErrorModelLibraryParserRuleCall; }
	}

	public class AnnexSubclauseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AnnexSubclause");
		private final RuleCall cErrorModelSubclauseParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//AnnexSubclause returns aadl2::AnnexSubclause:
		//
		//	ErrorModelSubclause;
		public ParserRule getRule() { return rule; }

		//ErrorModelSubclause
		public RuleCall getErrorModelSubclauseParserRuleCall() { return cErrorModelSubclauseParserRuleCall; }
	}

	public class NamedElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NamedElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cErrorModelLibraryParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cErrorTypesParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cErrorBehaviorEventParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cErrorBehaviorStateParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cErrorBehaviorTransitionParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cErrorFlowParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cErrorPropagationParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cPropagationPointConnectionParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cPropagationPointParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cTypeTransformationSetParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cTypeMappingSetParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cErrorBehaviorStateMachineParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cErrorDetectionParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cErrorPropagationsParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cConnectionErrorSourceParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		
		//NamedElement returns aadl2::NamedElement:
		//
		//	ErrorModelLibrary | ErrorTypes | ErrorBehaviorEvent | ErrorBehaviorState | ErrorBehaviorTransition | ErrorFlow |
		//
		//	ErrorPropagation | PropagationPointConnection | PropagationPoint | TypeTransformationSet | TypeMappingSet |
		//
		//	ErrorBehaviorStateMachine | ErrorDetection | ErrorPropagations | ConnectionErrorSource;
		public ParserRule getRule() { return rule; }

		//ErrorModelLibrary | ErrorTypes | ErrorBehaviorEvent | ErrorBehaviorState | ErrorBehaviorTransition | ErrorFlow |
		//
		//ErrorPropagation | PropagationPointConnection | PropagationPoint | TypeTransformationSet | TypeMappingSet |
		//
		//ErrorBehaviorStateMachine | ErrorDetection | ErrorPropagations | ConnectionErrorSource
		public Alternatives getAlternatives() { return cAlternatives; }

		//ErrorModelLibrary
		public RuleCall getErrorModelLibraryParserRuleCall_0() { return cErrorModelLibraryParserRuleCall_0; }

		//ErrorTypes
		public RuleCall getErrorTypesParserRuleCall_1() { return cErrorTypesParserRuleCall_1; }

		//ErrorBehaviorEvent
		public RuleCall getErrorBehaviorEventParserRuleCall_2() { return cErrorBehaviorEventParserRuleCall_2; }

		//ErrorBehaviorState
		public RuleCall getErrorBehaviorStateParserRuleCall_3() { return cErrorBehaviorStateParserRuleCall_3; }

		//ErrorBehaviorTransition
		public RuleCall getErrorBehaviorTransitionParserRuleCall_4() { return cErrorBehaviorTransitionParserRuleCall_4; }

		//ErrorFlow
		public RuleCall getErrorFlowParserRuleCall_5() { return cErrorFlowParserRuleCall_5; }

		//ErrorPropagation
		public RuleCall getErrorPropagationParserRuleCall_6() { return cErrorPropagationParserRuleCall_6; }

		//PropagationPointConnection
		public RuleCall getPropagationPointConnectionParserRuleCall_7() { return cPropagationPointConnectionParserRuleCall_7; }

		//PropagationPoint
		public RuleCall getPropagationPointParserRuleCall_8() { return cPropagationPointParserRuleCall_8; }

		//TypeTransformationSet
		public RuleCall getTypeTransformationSetParserRuleCall_9() { return cTypeTransformationSetParserRuleCall_9; }

		//TypeMappingSet
		public RuleCall getTypeMappingSetParserRuleCall_10() { return cTypeMappingSetParserRuleCall_10; }

		//ErrorBehaviorStateMachine
		public RuleCall getErrorBehaviorStateMachineParserRuleCall_11() { return cErrorBehaviorStateMachineParserRuleCall_11; }

		//ErrorDetection
		public RuleCall getErrorDetectionParserRuleCall_12() { return cErrorDetectionParserRuleCall_12; }

		//ErrorPropagations
		public RuleCall getErrorPropagationsParserRuleCall_13() { return cErrorPropagationsParserRuleCall_13; }

		//ConnectionErrorSource
		public RuleCall getConnectionErrorSourceParserRuleCall_14() { return cConnectionErrorSourceParserRuleCall_14; }
	}

	public class ModalElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ModalElement");
		private final RuleCall cErrorModelSubclauseParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ModalElement returns aadl2::ModalElement:
		//
		//	ErrorModelSubclause;
		public ParserRule getRule() { return rule; }

		//ErrorModelSubclause
		public RuleCall getErrorModelSubclauseParserRuleCall() { return cErrorModelSubclauseParserRuleCall; }
	}

	public class ElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Element");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cElementErrorTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTypeTokenParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cTypeTransformationParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cTypeMappingParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cPropagationPathsParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cQualifiedPropagationPointParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cTransitionBranchParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cConditionElementParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cConnectionErrorBehaviorParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cComponentErrorBehaviorParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cCompositeErrorBehaviorParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cConditionExpressionParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cOrmoreExpressionParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cOrlessExpressionParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cOutgoingPropagationConditionParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		private final RuleCall cCompositeStateParserRuleCall_15 = (RuleCall)cAlternatives.eContents().get(15);
		private final RuleCall cErrorStateToModeMappingParserRuleCall_16 = (RuleCall)cAlternatives.eContents().get(16);
		private final RuleCall cSubcomponentElementParserRuleCall_17 = (RuleCall)cAlternatives.eContents().get(17);
		private final RuleCall cFeatureReferenceParserRuleCall_18 = (RuleCall)cAlternatives.eContents().get(18);
		
		//Element returns aadl2::Element:
		//
		//	ElementErrorType | TypeToken | TypeTransformation | TypeMapping | PropagationPaths | QualifiedPropagationPoint |
		//
		//	TransitionBranch | ConditionElement | ConnectionErrorBehavior | ComponentErrorBehavior | CompositeErrorBehavior |
		//
		//	ConditionExpression | OrmoreExpression | OrlessExpression | OutgoingPropagationCondition | CompositeState |
		//
		//	ErrorStateToModeMapping | SubcomponentElement | FeatureReference;
		public ParserRule getRule() { return rule; }

		//ElementErrorType | TypeToken | TypeTransformation | TypeMapping | PropagationPaths | QualifiedPropagationPoint |
		//
		//TransitionBranch | ConditionElement | ConnectionErrorBehavior | ComponentErrorBehavior | CompositeErrorBehavior |
		//
		//ConditionExpression | OrmoreExpression | OrlessExpression | OutgoingPropagationCondition | CompositeState |
		//
		//ErrorStateToModeMapping | SubcomponentElement | FeatureReference
		public Alternatives getAlternatives() { return cAlternatives; }

		//ElementErrorType
		public RuleCall getElementErrorTypeParserRuleCall_0() { return cElementErrorTypeParserRuleCall_0; }

		//TypeToken
		public RuleCall getTypeTokenParserRuleCall_1() { return cTypeTokenParserRuleCall_1; }

		//TypeTransformation
		public RuleCall getTypeTransformationParserRuleCall_2() { return cTypeTransformationParserRuleCall_2; }

		//TypeMapping
		public RuleCall getTypeMappingParserRuleCall_3() { return cTypeMappingParserRuleCall_3; }

		//PropagationPaths
		public RuleCall getPropagationPathsParserRuleCall_4() { return cPropagationPathsParserRuleCall_4; }

		//QualifiedPropagationPoint
		public RuleCall getQualifiedPropagationPointParserRuleCall_5() { return cQualifiedPropagationPointParserRuleCall_5; }

		//TransitionBranch
		public RuleCall getTransitionBranchParserRuleCall_6() { return cTransitionBranchParserRuleCall_6; }

		//ConditionElement
		public RuleCall getConditionElementParserRuleCall_7() { return cConditionElementParserRuleCall_7; }

		//ConnectionErrorBehavior
		public RuleCall getConnectionErrorBehaviorParserRuleCall_8() { return cConnectionErrorBehaviorParserRuleCall_8; }

		//ComponentErrorBehavior
		public RuleCall getComponentErrorBehaviorParserRuleCall_9() { return cComponentErrorBehaviorParserRuleCall_9; }

		//CompositeErrorBehavior
		public RuleCall getCompositeErrorBehaviorParserRuleCall_10() { return cCompositeErrorBehaviorParserRuleCall_10; }

		//ConditionExpression
		public RuleCall getConditionExpressionParserRuleCall_11() { return cConditionExpressionParserRuleCall_11; }

		//OrmoreExpression
		public RuleCall getOrmoreExpressionParserRuleCall_12() { return cOrmoreExpressionParserRuleCall_12; }

		//OrlessExpression
		public RuleCall getOrlessExpressionParserRuleCall_13() { return cOrlessExpressionParserRuleCall_13; }

		//OutgoingPropagationCondition
		public RuleCall getOutgoingPropagationConditionParserRuleCall_14() { return cOutgoingPropagationConditionParserRuleCall_14; }

		//CompositeState
		public RuleCall getCompositeStateParserRuleCall_15() { return cCompositeStateParserRuleCall_15; }

		//ErrorStateToModeMapping
		public RuleCall getErrorStateToModeMappingParserRuleCall_16() { return cErrorStateToModeMappingParserRuleCall_16; }

		//SubcomponentElement
		public RuleCall getSubcomponentElementParserRuleCall_17() { return cSubcomponentElementParserRuleCall_17; }

		//FeatureReference
		public RuleCall getFeatureReferenceParserRuleCall_18() { return cFeatureReferenceParserRuleCall_18; }
	}

	public class ErrorModelSubclauseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ErrorModelSubclause");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cErrorModelSubclauseAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cUseKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cTypesKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cUseTypesAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final CrossReference cUseTypesErrorModelLibraryCrossReference_1_2_0 = (CrossReference)cUseTypesAssignment_1_2.eContents().get(0);
		private final RuleCall cUseTypesErrorModelLibraryQEMREFParserRuleCall_1_2_0_1 = (RuleCall)cUseTypesErrorModelLibraryCrossReference_1_2_0.eContents().get(1);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Keyword cCommaKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cUseTypesAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final CrossReference cUseTypesErrorModelLibraryCrossReference_1_3_1_0 = (CrossReference)cUseTypesAssignment_1_3_1.eContents().get(0);
		private final RuleCall cUseTypesErrorModelLibraryQEMREFParserRuleCall_1_3_1_0_1 = (RuleCall)cUseTypesErrorModelLibraryCrossReference_1_3_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cUseKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cBehaviorKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cUseBehaviorAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final CrossReference cUseBehaviorErrorBehaviorStateMachineCrossReference_2_2_0 = (CrossReference)cUseBehaviorAssignment_2_2.eContents().get(0);
		private final RuleCall cUseBehaviorErrorBehaviorStateMachineQEMREFParserRuleCall_2_2_0_1 = (RuleCall)cUseBehaviorErrorBehaviorStateMachineCrossReference_2_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Assignment cErrorPropagationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cErrorPropagationsErrorPropagationsParserRuleCall_3_0 = (RuleCall)cErrorPropagationsAssignment_3.eContents().get(0);
		private final Assignment cComponentBehaviorAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cComponentBehaviorComponentErrorBehaviorParserRuleCall_4_0 = (RuleCall)cComponentBehaviorAssignment_4.eContents().get(0);
		private final Assignment cCompositeBehaviorAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cCompositeBehaviorCompositeErrorBehaviorParserRuleCall_5_0 = (RuleCall)cCompositeBehaviorAssignment_5.eContents().get(0);
		private final Assignment cConnectionBehaviorAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cConnectionBehaviorConnectionErrorBehaviorParserRuleCall_6_0 = (RuleCall)cConnectionBehaviorAssignment_6.eContents().get(0);
		private final Assignment cPropagationPathsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cPropagationPathsPropagationPathsParserRuleCall_7_0 = (RuleCall)cPropagationPathsAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cPropertiesKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cPropertiesAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cPropertiesContainedPropertyAssociationParserRuleCall_8_1_0 = (RuleCall)cPropertiesAssignment_8_1.eContents().get(0);
		
		////	'**}'
		// ErrorModelSubclause: //'{**' 
		// {ErrorModelSubclause} ("use" "types" useTypes+=[ErrorModelLibrary|QEMREF] (","
		//
		//	useTypes+=[ErrorModelLibrary|QEMREF])* ";")? ("use" "behavior" useBehavior=[ErrorBehaviorStateMachine|QEMREF] ";")?
		//
		//	errorPropagations=ErrorPropagations? componentBehavior=ComponentErrorBehavior?
		//
		//	compositeBehavior=CompositeErrorBehavior? connectionBehavior=ConnectionErrorBehavior?
		//
		//	propagationPaths=PropagationPaths? ("properties" properties+=ContainedPropertyAssociation+)?;
		public ParserRule getRule() { return rule; }

		////'{**' 
		// {ErrorModelSubclause} ("use" "types" useTypes+=[ErrorModelLibrary|QEMREF] (","
		//
		//useTypes+=[ErrorModelLibrary|QEMREF])* ";")? ("use" "behavior" useBehavior=[ErrorBehaviorStateMachine|QEMREF] ";")?
		//
		//errorPropagations=ErrorPropagations? componentBehavior=ComponentErrorBehavior?
		//
		//compositeBehavior=CompositeErrorBehavior? connectionBehavior=ConnectionErrorBehavior?
		//
		//propagationPaths=PropagationPaths? ("properties" properties+=ContainedPropertyAssociation+)?
		public Group getGroup() { return cGroup; }

		////'{**' 
		// {ErrorModelSubclause}
		public Action getErrorModelSubclauseAction_0() { return cErrorModelSubclauseAction_0; }

		//("use" "types" useTypes+=[ErrorModelLibrary|QEMREF] ("," useTypes+=[ErrorModelLibrary|QEMREF])* ";")?
		public Group getGroup_1() { return cGroup_1; }

		//"use"
		public Keyword getUseKeyword_1_0() { return cUseKeyword_1_0; }

		//"types"
		public Keyword getTypesKeyword_1_1() { return cTypesKeyword_1_1; }

		//useTypes+=[ErrorModelLibrary|QEMREF]
		public Assignment getUseTypesAssignment_1_2() { return cUseTypesAssignment_1_2; }

		//[ErrorModelLibrary|QEMREF]
		public CrossReference getUseTypesErrorModelLibraryCrossReference_1_2_0() { return cUseTypesErrorModelLibraryCrossReference_1_2_0; }

		//QEMREF
		public RuleCall getUseTypesErrorModelLibraryQEMREFParserRuleCall_1_2_0_1() { return cUseTypesErrorModelLibraryQEMREFParserRuleCall_1_2_0_1; }

		//("," useTypes+=[ErrorModelLibrary|QEMREF])*
		public Group getGroup_1_3() { return cGroup_1_3; }

		//","
		public Keyword getCommaKeyword_1_3_0() { return cCommaKeyword_1_3_0; }

		//useTypes+=[ErrorModelLibrary|QEMREF]
		public Assignment getUseTypesAssignment_1_3_1() { return cUseTypesAssignment_1_3_1; }

		//[ErrorModelLibrary|QEMREF]
		public CrossReference getUseTypesErrorModelLibraryCrossReference_1_3_1_0() { return cUseTypesErrorModelLibraryCrossReference_1_3_1_0; }

		//QEMREF
		public RuleCall getUseTypesErrorModelLibraryQEMREFParserRuleCall_1_3_1_0_1() { return cUseTypesErrorModelLibraryQEMREFParserRuleCall_1_3_1_0_1; }

		//";"
		public Keyword getSemicolonKeyword_1_4() { return cSemicolonKeyword_1_4; }

		//("use" "behavior" useBehavior=[ErrorBehaviorStateMachine|QEMREF] ";")?
		public Group getGroup_2() { return cGroup_2; }

		//"use"
		public Keyword getUseKeyword_2_0() { return cUseKeyword_2_0; }

		//"behavior"
		public Keyword getBehaviorKeyword_2_1() { return cBehaviorKeyword_2_1; }

		//useBehavior=[ErrorBehaviorStateMachine|QEMREF]
		public Assignment getUseBehaviorAssignment_2_2() { return cUseBehaviorAssignment_2_2; }

		//[ErrorBehaviorStateMachine|QEMREF]
		public CrossReference getUseBehaviorErrorBehaviorStateMachineCrossReference_2_2_0() { return cUseBehaviorErrorBehaviorStateMachineCrossReference_2_2_0; }

		//QEMREF
		public RuleCall getUseBehaviorErrorBehaviorStateMachineQEMREFParserRuleCall_2_2_0_1() { return cUseBehaviorErrorBehaviorStateMachineQEMREFParserRuleCall_2_2_0_1; }

		//";"
		public Keyword getSemicolonKeyword_2_3() { return cSemicolonKeyword_2_3; }

		//errorPropagations=ErrorPropagations?
		public Assignment getErrorPropagationsAssignment_3() { return cErrorPropagationsAssignment_3; }

		//ErrorPropagations
		public RuleCall getErrorPropagationsErrorPropagationsParserRuleCall_3_0() { return cErrorPropagationsErrorPropagationsParserRuleCall_3_0; }

		//componentBehavior=ComponentErrorBehavior?
		public Assignment getComponentBehaviorAssignment_4() { return cComponentBehaviorAssignment_4; }

		//ComponentErrorBehavior
		public RuleCall getComponentBehaviorComponentErrorBehaviorParserRuleCall_4_0() { return cComponentBehaviorComponentErrorBehaviorParserRuleCall_4_0; }

		//compositeBehavior=CompositeErrorBehavior?
		public Assignment getCompositeBehaviorAssignment_5() { return cCompositeBehaviorAssignment_5; }

		//CompositeErrorBehavior
		public RuleCall getCompositeBehaviorCompositeErrorBehaviorParserRuleCall_5_0() { return cCompositeBehaviorCompositeErrorBehaviorParserRuleCall_5_0; }

		//connectionBehavior=ConnectionErrorBehavior?
		public Assignment getConnectionBehaviorAssignment_6() { return cConnectionBehaviorAssignment_6; }

		//ConnectionErrorBehavior
		public RuleCall getConnectionBehaviorConnectionErrorBehaviorParserRuleCall_6_0() { return cConnectionBehaviorConnectionErrorBehaviorParserRuleCall_6_0; }

		//propagationPaths=PropagationPaths?
		public Assignment getPropagationPathsAssignment_7() { return cPropagationPathsAssignment_7; }

		//PropagationPaths
		public RuleCall getPropagationPathsPropagationPathsParserRuleCall_7_0() { return cPropagationPathsPropagationPathsParserRuleCall_7_0; }

		//("properties" properties+=ContainedPropertyAssociation+)?
		public Group getGroup_8() { return cGroup_8; }

		//"properties"
		public Keyword getPropertiesKeyword_8_0() { return cPropertiesKeyword_8_0; }

		//properties+=ContainedPropertyAssociation+
		public Assignment getPropertiesAssignment_8_1() { return cPropertiesAssignment_8_1; }

		//ContainedPropertyAssociation
		public RuleCall getPropertiesContainedPropertyAssociationParserRuleCall_8_1_0() { return cPropertiesContainedPropertyAssociationParserRuleCall_8_1_0; }
	}

	public class ErrorModelLibraryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ErrorModelLibrary");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cErrorModelLibraryAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cErrorKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cTypesKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cExtendsKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cExtendsAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final CrossReference cExtendsErrorModelLibraryCrossReference_1_2_1_0 = (CrossReference)cExtendsAssignment_1_2_1.eContents().get(0);
		private final RuleCall cExtendsErrorModelLibraryQEMREFParserRuleCall_1_2_1_0_1 = (RuleCall)cExtendsErrorModelLibraryCrossReference_1_2_1_0.eContents().get(1);
		private final Group cGroup_1_2_2 = (Group)cGroup_1_2.eContents().get(2);
		private final Keyword cCommaKeyword_1_2_2_0 = (Keyword)cGroup_1_2_2.eContents().get(0);
		private final Assignment cExtendsAssignment_1_2_2_1 = (Assignment)cGroup_1_2_2.eContents().get(1);
		private final CrossReference cExtendsErrorModelLibraryCrossReference_1_2_2_1_0 = (CrossReference)cExtendsAssignment_1_2_2_1.eContents().get(0);
		private final RuleCall cExtendsErrorModelLibraryQEMREFParserRuleCall_1_2_2_1_0_1 = (RuleCall)cExtendsErrorModelLibraryCrossReference_1_2_2_1_0.eContents().get(1);
		private final Keyword cWithKeyword_1_2_3 = (Keyword)cGroup_1_2.eContents().get(3);
		private final Assignment cTypesAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cTypesErrorTypesParserRuleCall_1_3_0 = (RuleCall)cTypesAssignment_1_3.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cGroup_1.eContents().get(4);
		private final Keyword cPropertiesKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Assignment cPropertiesAssignment_1_4_1 = (Assignment)cGroup_1_4.eContents().get(1);
		private final RuleCall cPropertiesContainedPropertyAssociationParserRuleCall_1_4_1_0 = (RuleCall)cPropertiesAssignment_1_4_1.eContents().get(0);
		private final Keyword cEndKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		private final Keyword cTypesKeyword_1_6 = (Keyword)cGroup_1.eContents().get(6);
		private final Keyword cSemicolonKeyword_1_7 = (Keyword)cGroup_1.eContents().get(7);
		private final Assignment cBehaviorsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cBehaviorsErrorBehaviorStateMachineParserRuleCall_2_0 = (RuleCall)cBehaviorsAssignment_2.eContents().get(0);
		private final Assignment cMappingsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMappingsTypeMappingSetParserRuleCall_3_0 = (RuleCall)cMappingsAssignment_3.eContents().get(0);
		private final Assignment cTransformationsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTransformationsTypeTransformationSetParserRuleCall_4_0 = (RuleCall)cTransformationsAssignment_4.eContents().get(0);
		
		////	'**}'
		// ErrorModelLibrary:
		//
		//	{ErrorModelLibrary} //    '{**' 
		// ("error" "types" ("extends" extends+=[ErrorModelLibrary|QEMREF] (","
		//
		//	extends+=[ErrorModelLibrary|QEMREF])* "with")? types+=ErrorTypes* ("properties"
		//
		//	properties+=ContainedPropertyAssociation+)? "end" "types" ";")? behaviors+=ErrorBehaviorStateMachine*
		//
		//	mappings+=TypeMappingSet* transformations+=TypeTransformationSet*;
		public ParserRule getRule() { return rule; }

		//{ErrorModelLibrary} //    '{**' 
		// ("error" "types" ("extends" extends+=[ErrorModelLibrary|QEMREF] (","
		//
		//extends+=[ErrorModelLibrary|QEMREF])* "with")? types+=ErrorTypes* ("properties"
		//
		//properties+=ContainedPropertyAssociation+)? "end" "types" ";")? behaviors+=ErrorBehaviorStateMachine*
		//
		//mappings+=TypeMappingSet* transformations+=TypeTransformationSet*
		public Group getGroup() { return cGroup; }

		//{ErrorModelLibrary}
		public Action getErrorModelLibraryAction_0() { return cErrorModelLibraryAction_0; }

		//("error" "types" ("extends" extends+=[ErrorModelLibrary|QEMREF] ("," extends+=[ErrorModelLibrary|QEMREF])* "with")?
		//
		//types+=ErrorTypes* ("properties" properties+=ContainedPropertyAssociation+)? "end" "types" ";")?
		public Group getGroup_1() { return cGroup_1; }

		//"error"
		public Keyword getErrorKeyword_1_0() { return cErrorKeyword_1_0; }

		//"types"
		public Keyword getTypesKeyword_1_1() { return cTypesKeyword_1_1; }

		//("extends" extends+=[ErrorModelLibrary|QEMREF] ("," extends+=[ErrorModelLibrary|QEMREF])* "with")?
		public Group getGroup_1_2() { return cGroup_1_2; }

		//"extends"
		public Keyword getExtendsKeyword_1_2_0() { return cExtendsKeyword_1_2_0; }

		//extends+=[ErrorModelLibrary|QEMREF]
		public Assignment getExtendsAssignment_1_2_1() { return cExtendsAssignment_1_2_1; }

		//[ErrorModelLibrary|QEMREF]
		public CrossReference getExtendsErrorModelLibraryCrossReference_1_2_1_0() { return cExtendsErrorModelLibraryCrossReference_1_2_1_0; }

		//QEMREF
		public RuleCall getExtendsErrorModelLibraryQEMREFParserRuleCall_1_2_1_0_1() { return cExtendsErrorModelLibraryQEMREFParserRuleCall_1_2_1_0_1; }

		//("," extends+=[ErrorModelLibrary|QEMREF])*
		public Group getGroup_1_2_2() { return cGroup_1_2_2; }

		//","
		public Keyword getCommaKeyword_1_2_2_0() { return cCommaKeyword_1_2_2_0; }

		//extends+=[ErrorModelLibrary|QEMREF]
		public Assignment getExtendsAssignment_1_2_2_1() { return cExtendsAssignment_1_2_2_1; }

		//[ErrorModelLibrary|QEMREF]
		public CrossReference getExtendsErrorModelLibraryCrossReference_1_2_2_1_0() { return cExtendsErrorModelLibraryCrossReference_1_2_2_1_0; }

		//QEMREF
		public RuleCall getExtendsErrorModelLibraryQEMREFParserRuleCall_1_2_2_1_0_1() { return cExtendsErrorModelLibraryQEMREFParserRuleCall_1_2_2_1_0_1; }

		//"with"
		public Keyword getWithKeyword_1_2_3() { return cWithKeyword_1_2_3; }

		//types+=ErrorTypes*
		public Assignment getTypesAssignment_1_3() { return cTypesAssignment_1_3; }

		//ErrorTypes
		public RuleCall getTypesErrorTypesParserRuleCall_1_3_0() { return cTypesErrorTypesParserRuleCall_1_3_0; }

		//("properties" properties+=ContainedPropertyAssociation+)?
		public Group getGroup_1_4() { return cGroup_1_4; }

		//"properties"
		public Keyword getPropertiesKeyword_1_4_0() { return cPropertiesKeyword_1_4_0; }

		//properties+=ContainedPropertyAssociation+
		public Assignment getPropertiesAssignment_1_4_1() { return cPropertiesAssignment_1_4_1; }

		//ContainedPropertyAssociation
		public RuleCall getPropertiesContainedPropertyAssociationParserRuleCall_1_4_1_0() { return cPropertiesContainedPropertyAssociationParserRuleCall_1_4_1_0; }

		//"end"
		public Keyword getEndKeyword_1_5() { return cEndKeyword_1_5; }

		//"types"
		public Keyword getTypesKeyword_1_6() { return cTypesKeyword_1_6; }

		//";"
		public Keyword getSemicolonKeyword_1_7() { return cSemicolonKeyword_1_7; }

		//behaviors+=ErrorBehaviorStateMachine*
		public Assignment getBehaviorsAssignment_2() { return cBehaviorsAssignment_2; }

		//ErrorBehaviorStateMachine
		public RuleCall getBehaviorsErrorBehaviorStateMachineParserRuleCall_2_0() { return cBehaviorsErrorBehaviorStateMachineParserRuleCall_2_0; }

		//mappings+=TypeMappingSet*
		public Assignment getMappingsAssignment_3() { return cMappingsAssignment_3; }

		//TypeMappingSet
		public RuleCall getMappingsTypeMappingSetParserRuleCall_3_0() { return cMappingsTypeMappingSetParserRuleCall_3_0; }

		//transformations+=TypeTransformationSet*
		public Assignment getTransformationsAssignment_4() { return cTransformationsAssignment_4; }

		//TypeTransformationSet
		public RuleCall getTransformationsTypeTransformationSetParserRuleCall_4_0() { return cTransformationsTypeTransformationSetParserRuleCall_4_0; }
	}

	public class ErrorTypesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ErrorTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTypeDefinitionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTypeSetDefinitionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cTypeAliasParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cTypeSetAliasParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//ErrorTypes:
		//
		//	TypeDefinition | TypeSetDefinition | TypeAlias | TypeSetAlias;
		public ParserRule getRule() { return rule; }

		//TypeDefinition | TypeSetDefinition | TypeAlias | TypeSetAlias
		public Alternatives getAlternatives() { return cAlternatives; }

		//TypeDefinition
		public RuleCall getTypeDefinitionParserRuleCall_0() { return cTypeDefinitionParserRuleCall_0; }

		//TypeSetDefinition
		public RuleCall getTypeSetDefinitionParserRuleCall_1() { return cTypeSetDefinitionParserRuleCall_1; }

		//TypeAlias
		public RuleCall getTypeAliasParserRuleCall_2() { return cTypeAliasParserRuleCall_2; }

		//TypeSetAlias
		public RuleCall getTypeSetAliasParserRuleCall_3() { return cTypeSetAliasParserRuleCall_3; }
	}

	public class TypeDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cExtendsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSuperTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cSuperTypeErrorTypeCrossReference_3_1_0 = (CrossReference)cSuperTypeAssignment_3_1.eContents().get(0);
		private final RuleCall cSuperTypeErrorTypeQEMREFParserRuleCall_3_1_0_1 = (RuleCall)cSuperTypeErrorTypeCrossReference_3_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//TypeDefinition returns ErrorType:
		//
		//	name=ID ":" "type" ("extends" superType=[ErrorType|QEMREF])? ";";
		public ParserRule getRule() { return rule; }

		//name=ID ":" "type" ("extends" superType=[ErrorType|QEMREF])? ";"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"type"
		public Keyword getTypeKeyword_2() { return cTypeKeyword_2; }

		//("extends" superType=[ErrorType|QEMREF])?
		public Group getGroup_3() { return cGroup_3; }

		//"extends"
		public Keyword getExtendsKeyword_3_0() { return cExtendsKeyword_3_0; }

		//superType=[ErrorType|QEMREF]
		public Assignment getSuperTypeAssignment_3_1() { return cSuperTypeAssignment_3_1; }

		//[ErrorType|QEMREF]
		public CrossReference getSuperTypeErrorTypeCrossReference_3_1_0() { return cSuperTypeErrorTypeCrossReference_3_1_0; }

		//QEMREF
		public RuleCall getSuperTypeErrorTypeQEMREFParserRuleCall_3_1_0_1() { return cSuperTypeErrorTypeQEMREFParserRuleCall_3_1_0_1; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class TypeAliasElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeAlias");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cRenamesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAliasedTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cAliasedTypeErrorTypeCrossReference_3_0 = (CrossReference)cAliasedTypeAssignment_3.eContents().get(0);
		private final RuleCall cAliasedTypeErrorTypeQEMREFParserRuleCall_3_0_1 = (RuleCall)cAliasedTypeErrorTypeCrossReference_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//TypeAlias returns ErrorType:
		//
		//	name=ID "renames" "type" aliasedType=[ErrorType|QEMREF] ";";
		public ParserRule getRule() { return rule; }

		//name=ID "renames" "type" aliasedType=[ErrorType|QEMREF] ";"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//"renames"
		public Keyword getRenamesKeyword_1() { return cRenamesKeyword_1; }

		//"type"
		public Keyword getTypeKeyword_2() { return cTypeKeyword_2; }

		//aliasedType=[ErrorType|QEMREF]
		public Assignment getAliasedTypeAssignment_3() { return cAliasedTypeAssignment_3; }

		//[ErrorType|QEMREF]
		public CrossReference getAliasedTypeErrorTypeCrossReference_3_0() { return cAliasedTypeErrorTypeCrossReference_3_0; }

		//QEMREF
		public RuleCall getAliasedTypeErrorTypeQEMREFParserRuleCall_3_0_1() { return cAliasedTypeErrorTypeQEMREFParserRuleCall_3_0_1; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class TypeSetDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeSetDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cSetKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cElementTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cElementTypeElementErrorTypeParserRuleCall_5_0 = (RuleCall)cElementTypeAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cElementTypeAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cElementTypeElementErrorTypeParserRuleCall_6_1_0 = (RuleCall)cElementTypeAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//TypeSetDefinition returns TypeSet:
		//
		//	name=ID ":" "type" "set" "{" elementType+=ElementErrorType ("," elementType+=ElementErrorType)* "}" ";";
		public ParserRule getRule() { return rule; }

		//name=ID ":" "type" "set" "{" elementType+=ElementErrorType ("," elementType+=ElementErrorType)* "}" ";"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"type"
		public Keyword getTypeKeyword_2() { return cTypeKeyword_2; }

		//"set"
		public Keyword getSetKeyword_3() { return cSetKeyword_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//elementType+=ElementErrorType
		public Assignment getElementTypeAssignment_5() { return cElementTypeAssignment_5; }

		//ElementErrorType
		public RuleCall getElementTypeElementErrorTypeParserRuleCall_5_0() { return cElementTypeElementErrorTypeParserRuleCall_5_0; }

		//("," elementType+=ElementErrorType)*
		public Group getGroup_6() { return cGroup_6; }

		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }

		//elementType+=ElementErrorType
		public Assignment getElementTypeAssignment_6_1() { return cElementTypeAssignment_6_1; }

		//ElementErrorType
		public RuleCall getElementTypeElementErrorTypeParserRuleCall_6_1_0() { return cElementTypeElementErrorTypeParserRuleCall_6_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }

		//";"
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
	}

	public class TypeSetConstructorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeSetConstructor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cElementTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cElementTypeElementErrorTypeParserRuleCall_1_0 = (RuleCall)cElementTypeAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cElementTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cElementTypeElementErrorTypeParserRuleCall_2_1_0 = (RuleCall)cElementTypeAssignment_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//TypeSetConstructor returns TypeSet:
		//
		//	"{" elementType+=ElementErrorType ("," elementType+=ElementErrorType)* "}";
		public ParserRule getRule() { return rule; }

		//"{" elementType+=ElementErrorType ("," elementType+=ElementErrorType)* "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//elementType+=ElementErrorType
		public Assignment getElementTypeAssignment_1() { return cElementTypeAssignment_1; }

		//ElementErrorType
		public RuleCall getElementTypeElementErrorTypeParserRuleCall_1_0() { return cElementTypeElementErrorTypeParserRuleCall_1_0; }

		//("," elementType+=ElementErrorType)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//elementType+=ElementErrorType
		public Assignment getElementTypeAssignment_2_1() { return cElementTypeAssignment_2_1; }

		//ElementErrorType
		public RuleCall getElementTypeElementErrorTypeParserRuleCall_2_1_0() { return cElementTypeElementErrorTypeParserRuleCall_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class TypeSetReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeSetReference");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cReferenceAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final CrossReference cReferenceTypeSetCrossReference_0_0 = (CrossReference)cReferenceAssignment_0.eContents().get(0);
		private final RuleCall cReferenceTypeSetQEMREFParserRuleCall_0_0_1 = (RuleCall)cReferenceTypeSetCrossReference_0_0.eContents().get(1);
		private final RuleCall cTypeSetConstructorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//TypeSetReference returns TypeSet:
		//
		//	reference=[TypeSet|QEMREF] | TypeSetConstructor;
		public ParserRule getRule() { return rule; }

		//reference=[TypeSet|QEMREF] | TypeSetConstructor
		public Alternatives getAlternatives() { return cAlternatives; }

		//reference=[TypeSet|QEMREF]
		public Assignment getReferenceAssignment_0() { return cReferenceAssignment_0; }

		//[TypeSet|QEMREF]
		public CrossReference getReferenceTypeSetCrossReference_0_0() { return cReferenceTypeSetCrossReference_0_0; }

		//QEMREF
		public RuleCall getReferenceTypeSetQEMREFParserRuleCall_0_0_1() { return cReferenceTypeSetQEMREFParserRuleCall_0_0_1; }

		//TypeSetConstructor
		public RuleCall getTypeSetConstructorParserRuleCall_1() { return cTypeSetConstructorParserRuleCall_1; }
	}

	public class TypeSetAliasElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeSetAlias");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cRenamesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cSetKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAliasedTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cAliasedTypeTypeSetCrossReference_4_0 = (CrossReference)cAliasedTypeAssignment_4.eContents().get(0);
		private final RuleCall cAliasedTypeTypeSetQEMREFParserRuleCall_4_0_1 = (RuleCall)cAliasedTypeTypeSetCrossReference_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//TypeSetAlias returns TypeSet:
		//
		//	name=ID "renames" "type" "set" aliasedType=[TypeSet|QEMREF] ";";
		public ParserRule getRule() { return rule; }

		//name=ID "renames" "type" "set" aliasedType=[TypeSet|QEMREF] ";"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//"renames"
		public Keyword getRenamesKeyword_1() { return cRenamesKeyword_1; }

		//"type"
		public Keyword getTypeKeyword_2() { return cTypeKeyword_2; }

		//"set"
		public Keyword getSetKeyword_3() { return cSetKeyword_3; }

		//aliasedType=[TypeSet|QEMREF]
		public Assignment getAliasedTypeAssignment_4() { return cAliasedTypeAssignment_4; }

		//[TypeSet|QEMREF]
		public CrossReference getAliasedTypeTypeSetCrossReference_4_0() { return cAliasedTypeTypeSetCrossReference_4_0; }

		//QEMREF
		public RuleCall getAliasedTypeTypeSetQEMREFParserRuleCall_4_0_1() { return cAliasedTypeTypeSetQEMREFParserRuleCall_4_0_1; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class ElementErrorTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ElementErrorType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cTypeErrorTypeCrossReference_0_0 = (CrossReference)cTypeAssignment_0.eContents().get(0);
		private final RuleCall cTypeErrorTypeQEMREFParserRuleCall_0_0_1 = (RuleCall)cTypeErrorTypeCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cAsteriskKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cTypeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cTypeErrorTypeCrossReference_1_1_0 = (CrossReference)cTypeAssignment_1_1.eContents().get(0);
		private final RuleCall cTypeErrorTypeQEMREFParserRuleCall_1_1_0_1 = (RuleCall)cTypeErrorTypeCrossReference_1_1_0.eContents().get(1);
		
		//ElementErrorType returns TypeToken:
		//
		//	type+=[ErrorType|QEMREF] ("*" type+=[ErrorType|QEMREF])*;
		public ParserRule getRule() { return rule; }

		//type+=[ErrorType|QEMREF] ("*" type+=[ErrorType|QEMREF])*
		public Group getGroup() { return cGroup; }

		//type+=[ErrorType|QEMREF]
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//[ErrorType|QEMREF]
		public CrossReference getTypeErrorTypeCrossReference_0_0() { return cTypeErrorTypeCrossReference_0_0; }

		//QEMREF
		public RuleCall getTypeErrorTypeQEMREFParserRuleCall_0_0_1() { return cTypeErrorTypeQEMREFParserRuleCall_0_0_1; }

		//("*" type+=[ErrorType|QEMREF])*
		public Group getGroup_1() { return cGroup_1; }

		//"*"
		public Keyword getAsteriskKeyword_1_0() { return cAsteriskKeyword_1_0; }

		//type+=[ErrorType|QEMREF]
		public Assignment getTypeAssignment_1_1() { return cTypeAssignment_1_1; }

		//[ErrorType|QEMREF]
		public CrossReference getTypeErrorTypeCrossReference_1_1_0() { return cTypeErrorTypeCrossReference_1_1_0; }

		//QEMREF
		public RuleCall getTypeErrorTypeQEMREFParserRuleCall_1_1_0_1() { return cTypeErrorTypeQEMREFParserRuleCall_1_1_0_1; }
	}

	public class NoErrorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NoError");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTypeSetAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cNoerrorKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//NoError returns TypeSet:
		//
		//	{TypeSet} "{" "noerror" "}";
		public ParserRule getRule() { return rule; }

		//{TypeSet} "{" "noerror" "}"
		public Group getGroup() { return cGroup; }

		//{TypeSet}
		public Action getTypeSetAction_0() { return cTypeSetAction_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"noerror"
		public Keyword getNoerrorKeyword_2() { return cNoerrorKeyword_2; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class TypeTokenElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeToken");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTypeTokenAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTypeErrorTypeCrossReference_2_0 = (CrossReference)cTypeAssignment_2.eContents().get(0);
		private final RuleCall cTypeErrorTypeQEMREFParserRuleCall_2_0_1 = (RuleCall)cTypeErrorTypeCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cAsteriskKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cTypeErrorTypeCrossReference_3_1_0 = (CrossReference)cTypeAssignment_3_1.eContents().get(0);
		private final RuleCall cTypeErrorTypeQEMREFParserRuleCall_3_1_0_1 = (RuleCall)cTypeErrorTypeCrossReference_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//TypeToken:
		//
		//	{TypeToken} "(" type+=[ErrorType|QEMREF] ("*" type+=[ErrorType|QEMREF])* ")";
		public ParserRule getRule() { return rule; }

		//{TypeToken} "(" type+=[ErrorType|QEMREF] ("*" type+=[ErrorType|QEMREF])* ")"
		public Group getGroup() { return cGroup; }

		//{TypeToken}
		public Action getTypeTokenAction_0() { return cTypeTokenAction_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//type+=[ErrorType|QEMREF]
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }

		//[ErrorType|QEMREF]
		public CrossReference getTypeErrorTypeCrossReference_2_0() { return cTypeErrorTypeCrossReference_2_0; }

		//QEMREF
		public RuleCall getTypeErrorTypeQEMREFParserRuleCall_2_0_1() { return cTypeErrorTypeQEMREFParserRuleCall_2_0_1; }

		//("*" type+=[ErrorType|QEMREF])*
		public Group getGroup_3() { return cGroup_3; }

		//"*"
		public Keyword getAsteriskKeyword_3_0() { return cAsteriskKeyword_3_0; }

		//type+=[ErrorType|QEMREF]
		public Assignment getTypeAssignment_3_1() { return cTypeAssignment_3_1; }

		//[ErrorType|QEMREF]
		public CrossReference getTypeErrorTypeCrossReference_3_1_0() { return cTypeErrorTypeCrossReference_3_1_0; }

		//QEMREF
		public RuleCall getTypeErrorTypeQEMREFParserRuleCall_3_1_0_1() { return cTypeErrorTypeQEMREFParserRuleCall_3_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}

	public class TypeTokenConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeTokenConstraint");
		private final RuleCall cTypeSetReferenceParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//TypeTokenConstraint returns TypeSet:
		//
		//	TypeSetReference;
		public ParserRule getRule() { return rule; }

		//TypeSetReference
		public RuleCall getTypeSetReferenceParserRuleCall() { return cTypeSetReferenceParserRuleCall; }
	}

	public class TypeTokenConstraintNoErrorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeTokenConstraintNoError");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTypeSetReferenceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNoErrorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//TypeTokenConstraintNoError returns TypeSet:
		//
		//	TypeSetReference | NoError;
		public ParserRule getRule() { return rule; }

		//TypeSetReference | NoError
		public Alternatives getAlternatives() { return cAlternatives; }

		//TypeSetReference
		public RuleCall getTypeSetReferenceParserRuleCall_0() { return cTypeSetReferenceParserRuleCall_0; }

		//NoError
		public RuleCall getNoErrorParserRuleCall_1() { return cNoErrorParserRuleCall_1; }
	}

	public class TypeTransformationSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeTransformationSet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cTransformationsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cUseKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cTypesKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cUseTypesAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final CrossReference cUseTypesErrorModelLibraryCrossReference_3_2_0 = (CrossReference)cUseTypesAssignment_3_2.eContents().get(0);
		private final RuleCall cUseTypesErrorModelLibraryQEMREFParserRuleCall_3_2_0_1 = (RuleCall)cUseTypesErrorModelLibraryCrossReference_3_2_0.eContents().get(1);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cUseTypesAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final CrossReference cUseTypesErrorModelLibraryCrossReference_3_3_1_0 = (CrossReference)cUseTypesAssignment_3_3_1.eContents().get(0);
		private final RuleCall cUseTypesErrorModelLibraryQEMREFParserRuleCall_3_3_1_0_1 = (RuleCall)cUseTypesErrorModelLibraryCrossReference_3_3_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Assignment cTransformationAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTransformationTypeTransformationParserRuleCall_4_0 = (RuleCall)cTransformationAssignment_4.eContents().get(0);
		private final Keyword cEndKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cTransformationsKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//TypeTransformationSet:
		//
		//	"type" "transformations" name=ID ("use" "types" useTypes+=[ErrorModelLibrary|QEMREF] (","
		//
		//	useTypes+=[ErrorModelLibrary|QEMREF])* ";")? transformation+=TypeTransformation+ "end" "transformations" ";";
		public ParserRule getRule() { return rule; }

		//"type" "transformations" name=ID ("use" "types" useTypes+=[ErrorModelLibrary|QEMREF] (","
		//
		//useTypes+=[ErrorModelLibrary|QEMREF])* ";")? transformation+=TypeTransformation+ "end" "transformations" ";"
		public Group getGroup() { return cGroup; }

		//"type"
		public Keyword getTypeKeyword_0() { return cTypeKeyword_0; }

		//"transformations"
		public Keyword getTransformationsKeyword_1() { return cTransformationsKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("use" "types" useTypes+=[ErrorModelLibrary|QEMREF] ("," useTypes+=[ErrorModelLibrary|QEMREF])* ";")?
		public Group getGroup_3() { return cGroup_3; }

		//"use"
		public Keyword getUseKeyword_3_0() { return cUseKeyword_3_0; }

		//"types"
		public Keyword getTypesKeyword_3_1() { return cTypesKeyword_3_1; }

		//useTypes+=[ErrorModelLibrary|QEMREF]
		public Assignment getUseTypesAssignment_3_2() { return cUseTypesAssignment_3_2; }

		//[ErrorModelLibrary|QEMREF]
		public CrossReference getUseTypesErrorModelLibraryCrossReference_3_2_0() { return cUseTypesErrorModelLibraryCrossReference_3_2_0; }

		//QEMREF
		public RuleCall getUseTypesErrorModelLibraryQEMREFParserRuleCall_3_2_0_1() { return cUseTypesErrorModelLibraryQEMREFParserRuleCall_3_2_0_1; }

		//("," useTypes+=[ErrorModelLibrary|QEMREF])*
		public Group getGroup_3_3() { return cGroup_3_3; }

		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }

		//useTypes+=[ErrorModelLibrary|QEMREF]
		public Assignment getUseTypesAssignment_3_3_1() { return cUseTypesAssignment_3_3_1; }

		//[ErrorModelLibrary|QEMREF]
		public CrossReference getUseTypesErrorModelLibraryCrossReference_3_3_1_0() { return cUseTypesErrorModelLibraryCrossReference_3_3_1_0; }

		//QEMREF
		public RuleCall getUseTypesErrorModelLibraryQEMREFParserRuleCall_3_3_1_0_1() { return cUseTypesErrorModelLibraryQEMREFParserRuleCall_3_3_1_0_1; }

		//";"
		public Keyword getSemicolonKeyword_3_4() { return cSemicolonKeyword_3_4; }

		//transformation+=TypeTransformation+
		public Assignment getTransformationAssignment_4() { return cTransformationAssignment_4; }

		//TypeTransformation
		public RuleCall getTransformationTypeTransformationParserRuleCall_4_0() { return cTransformationTypeTransformationParserRuleCall_4_0; }

		//"end"
		public Keyword getEndKeyword_5() { return cEndKeyword_5; }

		//"transformations"
		public Keyword getTransformationsKeyword_6() { return cTransformationsKeyword_6; }

		//";"
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}

	public class TypeTransformationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeTransformation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSourceAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cSourceTypeTokenConstraintNoErrorParserRuleCall_0_0 = (RuleCall)cSourceAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cContributorAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cContributorTypeTokenConstraintNoErrorParserRuleCall_2_0 = (RuleCall)cContributorAssignment_2.eContents().get(0);
		private final Keyword cRightSquareBracketHyphenMinusGreaterThanSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTargetAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTargetTypeTokenParserRuleCall_4_0 = (RuleCall)cTargetAssignment_4.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//TypeTransformation:
		//
		//	source=TypeTokenConstraintNoError "-[" contributor=TypeTokenConstraintNoError "]->" target=TypeToken ";";
		public ParserRule getRule() { return rule; }

		//source=TypeTokenConstraintNoError "-[" contributor=TypeTokenConstraintNoError "]->" target=TypeToken ";"
		public Group getGroup() { return cGroup; }

		//source=TypeTokenConstraintNoError
		public Assignment getSourceAssignment_0() { return cSourceAssignment_0; }

		//TypeTokenConstraintNoError
		public RuleCall getSourceTypeTokenConstraintNoErrorParserRuleCall_0_0() { return cSourceTypeTokenConstraintNoErrorParserRuleCall_0_0; }

		//"-["
		public Keyword getHyphenMinusLeftSquareBracketKeyword_1() { return cHyphenMinusLeftSquareBracketKeyword_1; }

		//contributor=TypeTokenConstraintNoError
		public Assignment getContributorAssignment_2() { return cContributorAssignment_2; }

		//TypeTokenConstraintNoError
		public RuleCall getContributorTypeTokenConstraintNoErrorParserRuleCall_2_0() { return cContributorTypeTokenConstraintNoErrorParserRuleCall_2_0; }

		//"]->"
		public Keyword getRightSquareBracketHyphenMinusGreaterThanSignKeyword_3() { return cRightSquareBracketHyphenMinusGreaterThanSignKeyword_3; }

		//target=TypeToken
		public Assignment getTargetAssignment_4() { return cTargetAssignment_4; }

		//TypeToken
		public RuleCall getTargetTypeTokenParserRuleCall_4_0() { return cTargetTypeTokenParserRuleCall_4_0; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class TypeMappingSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeMappingSet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cMappingsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cUseKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cTypesKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cUseTypesAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final CrossReference cUseTypesErrorModelLibraryCrossReference_3_2_0 = (CrossReference)cUseTypesAssignment_3_2.eContents().get(0);
		private final RuleCall cUseTypesErrorModelLibraryQEMREFParserRuleCall_3_2_0_1 = (RuleCall)cUseTypesErrorModelLibraryCrossReference_3_2_0.eContents().get(1);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cUseTypesAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final CrossReference cUseTypesErrorModelLibraryCrossReference_3_3_1_0 = (CrossReference)cUseTypesAssignment_3_3_1.eContents().get(0);
		private final RuleCall cUseTypesErrorModelLibraryQEMREFParserRuleCall_3_3_1_0_1 = (RuleCall)cUseTypesErrorModelLibraryCrossReference_3_3_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Assignment cMappingAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMappingTypeMappingParserRuleCall_4_0 = (RuleCall)cMappingAssignment_4.eContents().get(0);
		private final Keyword cEndKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cMappingsKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//TypeMappingSet:
		//
		//	"type" "mappings" name=ID ("use" "types" useTypes+=[ErrorModelLibrary|QEMREF] (","
		//
		//	useTypes+=[ErrorModelLibrary|QEMREF])* ";")? mapping+=TypeMapping+ "end" "mappings" ";";
		public ParserRule getRule() { return rule; }

		//"type" "mappings" name=ID ("use" "types" useTypes+=[ErrorModelLibrary|QEMREF] (","
		//
		//useTypes+=[ErrorModelLibrary|QEMREF])* ";")? mapping+=TypeMapping+ "end" "mappings" ";"
		public Group getGroup() { return cGroup; }

		//"type"
		public Keyword getTypeKeyword_0() { return cTypeKeyword_0; }

		//"mappings"
		public Keyword getMappingsKeyword_1() { return cMappingsKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("use" "types" useTypes+=[ErrorModelLibrary|QEMREF] ("," useTypes+=[ErrorModelLibrary|QEMREF])* ";")?
		public Group getGroup_3() { return cGroup_3; }

		//"use"
		public Keyword getUseKeyword_3_0() { return cUseKeyword_3_0; }

		//"types"
		public Keyword getTypesKeyword_3_1() { return cTypesKeyword_3_1; }

		//useTypes+=[ErrorModelLibrary|QEMREF]
		public Assignment getUseTypesAssignment_3_2() { return cUseTypesAssignment_3_2; }

		//[ErrorModelLibrary|QEMREF]
		public CrossReference getUseTypesErrorModelLibraryCrossReference_3_2_0() { return cUseTypesErrorModelLibraryCrossReference_3_2_0; }

		//QEMREF
		public RuleCall getUseTypesErrorModelLibraryQEMREFParserRuleCall_3_2_0_1() { return cUseTypesErrorModelLibraryQEMREFParserRuleCall_3_2_0_1; }

		//("," useTypes+=[ErrorModelLibrary|QEMREF])*
		public Group getGroup_3_3() { return cGroup_3_3; }

		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }

		//useTypes+=[ErrorModelLibrary|QEMREF]
		public Assignment getUseTypesAssignment_3_3_1() { return cUseTypesAssignment_3_3_1; }

		//[ErrorModelLibrary|QEMREF]
		public CrossReference getUseTypesErrorModelLibraryCrossReference_3_3_1_0() { return cUseTypesErrorModelLibraryCrossReference_3_3_1_0; }

		//QEMREF
		public RuleCall getUseTypesErrorModelLibraryQEMREFParserRuleCall_3_3_1_0_1() { return cUseTypesErrorModelLibraryQEMREFParserRuleCall_3_3_1_0_1; }

		//";"
		public Keyword getSemicolonKeyword_3_4() { return cSemicolonKeyword_3_4; }

		//mapping+=TypeMapping+
		public Assignment getMappingAssignment_4() { return cMappingAssignment_4; }

		//TypeMapping
		public RuleCall getMappingTypeMappingParserRuleCall_4_0() { return cMappingTypeMappingParserRuleCall_4_0; }

		//"end"
		public Keyword getEndKeyword_5() { return cEndKeyword_5; }

		//"mappings"
		public Keyword getMappingsKeyword_6() { return cMappingsKeyword_6; }

		//";"
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}

	public class TypeMappingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeMapping");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSourceAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cSourceTypeTokenConstraintParserRuleCall_0_0 = (RuleCall)cSourceAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTargetAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTargetTypeTokenParserRuleCall_2_0 = (RuleCall)cTargetAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//TypeMapping:
		//
		//	source=TypeTokenConstraint "->" target=TypeToken ";";
		public ParserRule getRule() { return rule; }

		//source=TypeTokenConstraint "->" target=TypeToken ";"
		public Group getGroup() { return cGroup; }

		//source=TypeTokenConstraint
		public Assignment getSourceAssignment_0() { return cSourceAssignment_0; }

		//TypeTokenConstraint
		public RuleCall getSourceTypeTokenConstraintParserRuleCall_0_0() { return cSourceTypeTokenConstraintParserRuleCall_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }

		//target=TypeToken
		public Assignment getTargetAssignment_2() { return cTargetAssignment_2; }

		//TypeToken
		public RuleCall getTargetTypeTokenParserRuleCall_2_0() { return cTargetTypeTokenParserRuleCall_2_0; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class ErrorPropagationsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ErrorPropagations");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cErrorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cPropagationsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Action cErrorPropagationsAction_2 = (Action)cGroup.eContents().get(2);
		private final Assignment cPropagationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPropagationsErrorPropagationParserRuleCall_3_0 = (RuleCall)cPropagationsAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cFlowsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cFlowsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cFlowsErrorFlowParserRuleCall_4_1_0 = (RuleCall)cFlowsAssignment_4_1.eContents().get(0);
		private final Keyword cEndKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cPropagationsKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ErrorPropagations:
		//
		//	"error" "propagations" {ErrorPropagations} propagations+=ErrorPropagation* ("flows" flows+=ErrorFlow+)? "end"
		//
		//	"propagations" ";";
		public ParserRule getRule() { return rule; }

		//"error" "propagations" {ErrorPropagations} propagations+=ErrorPropagation* ("flows" flows+=ErrorFlow+)? "end"
		//
		//"propagations" ";"
		public Group getGroup() { return cGroup; }

		//"error"
		public Keyword getErrorKeyword_0() { return cErrorKeyword_0; }

		//"propagations"
		public Keyword getPropagationsKeyword_1() { return cPropagationsKeyword_1; }

		//{ErrorPropagations}
		public Action getErrorPropagationsAction_2() { return cErrorPropagationsAction_2; }

		//propagations+=ErrorPropagation*
		public Assignment getPropagationsAssignment_3() { return cPropagationsAssignment_3; }

		//ErrorPropagation
		public RuleCall getPropagationsErrorPropagationParserRuleCall_3_0() { return cPropagationsErrorPropagationParserRuleCall_3_0; }

		//("flows" flows+=ErrorFlow+)?
		public Group getGroup_4() { return cGroup_4; }

		//"flows"
		public Keyword getFlowsKeyword_4_0() { return cFlowsKeyword_4_0; }

		//flows+=ErrorFlow+
		public Assignment getFlowsAssignment_4_1() { return cFlowsAssignment_4_1; }

		//ErrorFlow
		public RuleCall getFlowsErrorFlowParserRuleCall_4_1_0() { return cFlowsErrorFlowParserRuleCall_4_1_0; }

		//"end"
		public Keyword getEndKeyword_5() { return cEndKeyword_5; }

		//"propagations"
		public Keyword getPropagationsKeyword_6() { return cPropagationsKeyword_6; }

		//";"
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}

	public class ErrorPropagationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ErrorPropagation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cErrorPropagationAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cKindAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cKindPropagationKindParserRuleCall_1_0_0 = (RuleCall)cKindAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Assignment cFeaturerefsAssignment_1_1_0 = (Assignment)cGroup_1_1.eContents().get(0);
		private final RuleCall cFeaturerefsFeatureReferenceParserRuleCall_1_1_0_0 = (RuleCall)cFeaturerefsAssignment_1_1_0.eContents().get(0);
		private final Group cGroup_1_1_1 = (Group)cGroup_1_1.eContents().get(1);
		private final Keyword cFullStopKeyword_1_1_1_0 = (Keyword)cGroup_1_1_1.eContents().get(0);
		private final Assignment cFeaturerefsAssignment_1_1_1_1 = (Assignment)cGroup_1_1_1.eContents().get(1);
		private final RuleCall cFeaturerefsFeatureReferenceParserRuleCall_1_1_1_1_0 = (RuleCall)cFeaturerefsAssignment_1_1_1_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNotAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNotNotKeyword_3_0 = (Keyword)cNotAssignment_3.eContents().get(0);
		private final Assignment cDirectionAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDirectionPropagationDirectionParserRuleCall_4_0 = (RuleCall)cDirectionAssignment_4.eContents().get(0);
		private final Keyword cPropagationKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTypeSetAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTypeSetTypeSetReferenceParserRuleCall_6_0 = (RuleCall)cTypeSetAssignment_6.eContents().get(0);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ErrorPropagation:
		//
		//	{ErrorPropagation} (kind=PropagationKind | featurerefs+=FeatureReference ("." featurerefs+=FeatureReference)*) ":"
		//
		//	not?="not"? direction=PropagationDirection "propagation" typeSet=TypeSetReference ";";
		public ParserRule getRule() { return rule; }

		//{ErrorPropagation} (kind=PropagationKind | featurerefs+=FeatureReference ("." featurerefs+=FeatureReference)*) ":"
		//
		//not?="not"? direction=PropagationDirection "propagation" typeSet=TypeSetReference ";"
		public Group getGroup() { return cGroup; }

		//{ErrorPropagation}
		public Action getErrorPropagationAction_0() { return cErrorPropagationAction_0; }

		//kind=PropagationKind | featurerefs+=FeatureReference ("." featurerefs+=FeatureReference)*
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//kind=PropagationKind
		public Assignment getKindAssignment_1_0() { return cKindAssignment_1_0; }

		//PropagationKind
		public RuleCall getKindPropagationKindParserRuleCall_1_0_0() { return cKindPropagationKindParserRuleCall_1_0_0; }

		//featurerefs+=FeatureReference ("." featurerefs+=FeatureReference)*
		public Group getGroup_1_1() { return cGroup_1_1; }

		//featurerefs+=FeatureReference
		public Assignment getFeaturerefsAssignment_1_1_0() { return cFeaturerefsAssignment_1_1_0; }

		//FeatureReference
		public RuleCall getFeaturerefsFeatureReferenceParserRuleCall_1_1_0_0() { return cFeaturerefsFeatureReferenceParserRuleCall_1_1_0_0; }

		//("." featurerefs+=FeatureReference)*
		public Group getGroup_1_1_1() { return cGroup_1_1_1; }

		//"."
		public Keyword getFullStopKeyword_1_1_1_0() { return cFullStopKeyword_1_1_1_0; }

		//featurerefs+=FeatureReference
		public Assignment getFeaturerefsAssignment_1_1_1_1() { return cFeaturerefsAssignment_1_1_1_1; }

		//FeatureReference
		public RuleCall getFeaturerefsFeatureReferenceParserRuleCall_1_1_1_1_0() { return cFeaturerefsFeatureReferenceParserRuleCall_1_1_1_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//not?="not"?
		public Assignment getNotAssignment_3() { return cNotAssignment_3; }

		//"not"
		public Keyword getNotNotKeyword_3_0() { return cNotNotKeyword_3_0; }

		//direction=PropagationDirection
		public Assignment getDirectionAssignment_4() { return cDirectionAssignment_4; }

		//PropagationDirection
		public RuleCall getDirectionPropagationDirectionParserRuleCall_4_0() { return cDirectionPropagationDirectionParserRuleCall_4_0; }

		//"propagation"
		public Keyword getPropagationKeyword_5() { return cPropagationKeyword_5; }

		//typeSet=TypeSetReference
		public Assignment getTypeSetAssignment_6() { return cTypeSetAssignment_6; }

		//TypeSetReference
		public RuleCall getTypeSetTypeSetReferenceParserRuleCall_6_0() { return cTypeSetTypeSetReferenceParserRuleCall_6_0; }

		//";"
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}

	public class FeatureReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FeatureReference");
		private final Assignment cFeatureAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cFeatureNamedElementCrossReference_0 = (CrossReference)cFeatureAssignment.eContents().get(0);
		private final RuleCall cFeatureNamedElementIDTerminalRuleCall_0_1 = (RuleCall)cFeatureNamedElementCrossReference_0.eContents().get(1);
		
		//FeatureReference:
		//
		//	feature=[aadl2::NamedElement];
		public ParserRule getRule() { return rule; }

		//feature=[aadl2::NamedElement]
		public Assignment getFeatureAssignment() { return cFeatureAssignment; }

		//[aadl2::NamedElement]
		public CrossReference getFeatureNamedElementCrossReference_0() { return cFeatureNamedElementCrossReference_0; }

		//ID
		public RuleCall getFeatureNamedElementIDTerminalRuleCall_0_1() { return cFeatureNamedElementIDTerminalRuleCall_0_1; }
	}

	public class PropagationDirectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PropagationDirection");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cInKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cOutKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//PropagationDirection returns aadl2::DirectionType:
		//
		//	"in" | "out";
		public ParserRule getRule() { return rule; }

		//"in" | "out"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"in"
		public Keyword getInKeyword_0() { return cInKeyword_0; }

		//"out"
		public Keyword getOutKeyword_1() { return cOutKeyword_1; }
	}

	public class PropagationKindElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PropagationKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cProcessorKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cMemoryKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cBusKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cDeviceKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cSystemKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Keyword cVirtualKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cBusKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Keyword cVirtualKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cProcessorKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Keyword cBindingKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cBindingsKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		private final Keyword cAccessKeyword_9 = (Keyword)cAlternatives.eContents().get(9);
		
		//// virtual bus, virtual processor
		// PropagationKind:
		//
		//	"processor" | "memory" | "bus" | "device" | "system" | "virtual" "bus" | "virtual" "processor" | "binding" |
		//
		//	"bindings" | "access";
		public ParserRule getRule() { return rule; }

		//"processor" | "memory" | "bus" | "device" | "system" | "virtual" "bus" | "virtual" "processor" | "binding" | "bindings"
		//
		//| "access"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"processor"
		public Keyword getProcessorKeyword_0() { return cProcessorKeyword_0; }

		//"memory"
		public Keyword getMemoryKeyword_1() { return cMemoryKeyword_1; }

		//"bus"
		public Keyword getBusKeyword_2() { return cBusKeyword_2; }

		//"device"
		public Keyword getDeviceKeyword_3() { return cDeviceKeyword_3; }

		//"system"
		public Keyword getSystemKeyword_4() { return cSystemKeyword_4; }

		//"virtual" "bus"
		public Group getGroup_5() { return cGroup_5; }

		//"virtual"
		public Keyword getVirtualKeyword_5_0() { return cVirtualKeyword_5_0; }

		//"bus"
		public Keyword getBusKeyword_5_1() { return cBusKeyword_5_1; }

		//"virtual" "processor"
		public Group getGroup_6() { return cGroup_6; }

		//"virtual"
		public Keyword getVirtualKeyword_6_0() { return cVirtualKeyword_6_0; }

		//"processor"
		public Keyword getProcessorKeyword_6_1() { return cProcessorKeyword_6_1; }

		//"binding"
		public Keyword getBindingKeyword_7() { return cBindingKeyword_7; }

		//"bindings"
		public Keyword getBindingsKeyword_8() { return cBindingsKeyword_8; }

		//"access"
		public Keyword getAccessKeyword_9() { return cAccessKeyword_9; }
	}

	public class ErrorFlowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ErrorFlow");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cErrorSourceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cErrorSinkParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cErrorPathParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//// enum does not work as  
		//
		//
		////enum PropKind : PROCESSOR='processor'|MEMORY='memory'|BUS='bus'|DEVICE='device'|SYSTEM='system'
		//
		//
		////	            |VIRTUALBUS='virtual bus'|VIRTUALPROCESSOR='virtual processor'|BINDING='binding' | BINDINGS='bindings'|ACCESS='access'
		//
		//
		////;
		// ErrorFlow:
		//
		//	ErrorSource | ErrorSink | ErrorPath;
		public ParserRule getRule() { return rule; }

		//ErrorSource | ErrorSink | ErrorPath
		public Alternatives getAlternatives() { return cAlternatives; }

		//ErrorSource
		public RuleCall getErrorSourceParserRuleCall_0() { return cErrorSourceParserRuleCall_0; }

		//ErrorSink
		public RuleCall getErrorSinkParserRuleCall_1() { return cErrorSinkParserRuleCall_1; }

		//ErrorPath
		public RuleCall getErrorPathParserRuleCall_2() { return cErrorPathParserRuleCall_2; }
	}

	public class ErrorSourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ErrorSource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cErrorKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cSourceKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cOutgoingAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final CrossReference cOutgoingErrorPropagationCrossReference_4_0_0 = (CrossReference)cOutgoingAssignment_4_0.eContents().get(0);
		private final RuleCall cOutgoingErrorPropagationErrorPropagationPointParserRuleCall_4_0_0_1 = (RuleCall)cOutgoingErrorPropagationCrossReference_4_0_0.eContents().get(1);
		private final Assignment cAllAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final Keyword cAllAllKeyword_4_1_0 = (Keyword)cAllAssignment_4_1.eContents().get(0);
		private final Assignment cTypeTokenConstraintAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTypeTokenConstraintTypeTokenConstraintParserRuleCall_5_0 = (RuleCall)cTypeTokenConstraintAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cWhenKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Alternatives cAlternatives_6_1 = (Alternatives)cGroup_6.eContents().get(1);
		private final Group cGroup_6_1_0 = (Group)cAlternatives_6_1.eContents().get(0);
		private final Assignment cFailureModeReferenceAssignment_6_1_0_0 = (Assignment)cGroup_6_1_0.eContents().get(0);
		private final CrossReference cFailureModeReferenceErrorBehaviorStateOrTypeSetCrossReference_6_1_0_0_0 = (CrossReference)cFailureModeReferenceAssignment_6_1_0_0.eContents().get(0);
		private final RuleCall cFailureModeReferenceErrorBehaviorStateOrTypeSetIDTerminalRuleCall_6_1_0_0_0_1 = (RuleCall)cFailureModeReferenceErrorBehaviorStateOrTypeSetCrossReference_6_1_0_0_0.eContents().get(1);
		private final Assignment cFailureModeTypeAssignment_6_1_0_1 = (Assignment)cGroup_6_1_0.eContents().get(1);
		private final RuleCall cFailureModeTypeTypeSetConstructorParserRuleCall_6_1_0_1_0 = (RuleCall)cFailureModeTypeAssignment_6_1_0_1.eContents().get(0);
		private final Assignment cFailureModeTypeAssignment_6_1_1 = (Assignment)cAlternatives_6_1.eContents().get(1);
		private final RuleCall cFailureModeTypeTypeSetConstructorParserRuleCall_6_1_1_0 = (RuleCall)cFailureModeTypeAssignment_6_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ErrorSource:
		//
		//	name=ID ":" "error" "source" (outgoing=[ErrorPropagation|ErrorPropagationPoint] | all?="all")
		//
		//	typeTokenConstraint=TypeTokenConstraint? ("when" (failureModeReference=[ErrorBehaviorStateOrTypeSet]
		//
		//	failureModeType=TypeSetConstructor? | failureModeType=TypeSetConstructor))? ";";
		public ParserRule getRule() { return rule; }

		//name=ID ":" "error" "source" (outgoing=[ErrorPropagation|ErrorPropagationPoint] | all?="all")
		//
		//typeTokenConstraint=TypeTokenConstraint? ("when" (failureModeReference=[ErrorBehaviorStateOrTypeSet]
		//
		//failureModeType=TypeSetConstructor? | failureModeType=TypeSetConstructor))? ";"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"error"
		public Keyword getErrorKeyword_2() { return cErrorKeyword_2; }

		//"source"
		public Keyword getSourceKeyword_3() { return cSourceKeyword_3; }

		//outgoing=[ErrorPropagation|ErrorPropagationPoint] | all?="all"
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//outgoing=[ErrorPropagation|ErrorPropagationPoint]
		public Assignment getOutgoingAssignment_4_0() { return cOutgoingAssignment_4_0; }

		//[ErrorPropagation|ErrorPropagationPoint]
		public CrossReference getOutgoingErrorPropagationCrossReference_4_0_0() { return cOutgoingErrorPropagationCrossReference_4_0_0; }

		//ErrorPropagationPoint
		public RuleCall getOutgoingErrorPropagationErrorPropagationPointParserRuleCall_4_0_0_1() { return cOutgoingErrorPropagationErrorPropagationPointParserRuleCall_4_0_0_1; }

		//all?="all"
		public Assignment getAllAssignment_4_1() { return cAllAssignment_4_1; }

		//"all"
		public Keyword getAllAllKeyword_4_1_0() { return cAllAllKeyword_4_1_0; }

		//typeTokenConstraint=TypeTokenConstraint?
		public Assignment getTypeTokenConstraintAssignment_5() { return cTypeTokenConstraintAssignment_5; }

		//TypeTokenConstraint
		public RuleCall getTypeTokenConstraintTypeTokenConstraintParserRuleCall_5_0() { return cTypeTokenConstraintTypeTokenConstraintParserRuleCall_5_0; }

		//("when" (failureModeReference=[ErrorBehaviorStateOrTypeSet] failureModeType=TypeSetConstructor? |
		//
		//failureModeType=TypeSetConstructor))?
		public Group getGroup_6() { return cGroup_6; }

		//"when"
		public Keyword getWhenKeyword_6_0() { return cWhenKeyword_6_0; }

		//failureModeReference=[ErrorBehaviorStateOrTypeSet] failureModeType=TypeSetConstructor? |
		//
		//failureModeType=TypeSetConstructor
		public Alternatives getAlternatives_6_1() { return cAlternatives_6_1; }

		//failureModeReference=[ErrorBehaviorStateOrTypeSet] failureModeType=TypeSetConstructor?
		public Group getGroup_6_1_0() { return cGroup_6_1_0; }

		//failureModeReference=[ErrorBehaviorStateOrTypeSet]
		public Assignment getFailureModeReferenceAssignment_6_1_0_0() { return cFailureModeReferenceAssignment_6_1_0_0; }

		//[ErrorBehaviorStateOrTypeSet]
		public CrossReference getFailureModeReferenceErrorBehaviorStateOrTypeSetCrossReference_6_1_0_0_0() { return cFailureModeReferenceErrorBehaviorStateOrTypeSetCrossReference_6_1_0_0_0; }

		//ID
		public RuleCall getFailureModeReferenceErrorBehaviorStateOrTypeSetIDTerminalRuleCall_6_1_0_0_0_1() { return cFailureModeReferenceErrorBehaviorStateOrTypeSetIDTerminalRuleCall_6_1_0_0_0_1; }

		//failureModeType=TypeSetConstructor?
		public Assignment getFailureModeTypeAssignment_6_1_0_1() { return cFailureModeTypeAssignment_6_1_0_1; }

		//TypeSetConstructor
		public RuleCall getFailureModeTypeTypeSetConstructorParserRuleCall_6_1_0_1_0() { return cFailureModeTypeTypeSetConstructorParserRuleCall_6_1_0_1_0; }

		//failureModeType=TypeSetConstructor
		public Assignment getFailureModeTypeAssignment_6_1_1() { return cFailureModeTypeAssignment_6_1_1; }

		//TypeSetConstructor
		public RuleCall getFailureModeTypeTypeSetConstructorParserRuleCall_6_1_1_0() { return cFailureModeTypeTypeSetConstructorParserRuleCall_6_1_1_0; }

		//";"
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}

	public class ErrorBehaviorStateOrTypeSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ErrorBehaviorStateOrTypeSet");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cErrorBehaviorStateParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTypeSetDefinitionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ErrorBehaviorStateOrTypeSet:
		//
		//	ErrorBehaviorState | TypeSetDefinition;
		public ParserRule getRule() { return rule; }

		//ErrorBehaviorState | TypeSetDefinition
		public Alternatives getAlternatives() { return cAlternatives; }

		//ErrorBehaviorState
		public RuleCall getErrorBehaviorStateParserRuleCall_0() { return cErrorBehaviorStateParserRuleCall_0; }

		//TypeSetDefinition
		public RuleCall getTypeSetDefinitionParserRuleCall_1() { return cTypeSetDefinitionParserRuleCall_1; }
	}

	public class ErrorSinkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ErrorSink");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cErrorKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cSinkKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cIncomingAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cIncomingErrorPropagationCrossReference_4_0 = (CrossReference)cIncomingAssignment_4.eContents().get(0);
		private final RuleCall cIncomingErrorPropagationErrorPropagationPointParserRuleCall_4_0_1 = (RuleCall)cIncomingErrorPropagationCrossReference_4_0.eContents().get(1);
		private final Assignment cTypeTokenConstraintAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTypeTokenConstraintTypeTokenConstraintParserRuleCall_5_0 = (RuleCall)cTypeTokenConstraintAssignment_5.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ErrorSink:
		//
		//	name=ID ":" "error" "sink" incoming=[ErrorPropagation|ErrorPropagationPoint] typeTokenConstraint=TypeTokenConstraint?
		//
		//	";";
		public ParserRule getRule() { return rule; }

		//name=ID ":" "error" "sink" incoming=[ErrorPropagation|ErrorPropagationPoint] typeTokenConstraint=TypeTokenConstraint?
		//
		//";"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"error"
		public Keyword getErrorKeyword_2() { return cErrorKeyword_2; }

		//"sink"
		public Keyword getSinkKeyword_3() { return cSinkKeyword_3; }

		//incoming=[ErrorPropagation|ErrorPropagationPoint]
		public Assignment getIncomingAssignment_4() { return cIncomingAssignment_4; }

		//[ErrorPropagation|ErrorPropagationPoint]
		public CrossReference getIncomingErrorPropagationCrossReference_4_0() { return cIncomingErrorPropagationCrossReference_4_0; }

		//ErrorPropagationPoint
		public RuleCall getIncomingErrorPropagationErrorPropagationPointParserRuleCall_4_0_1() { return cIncomingErrorPropagationErrorPropagationPointParserRuleCall_4_0_1; }

		//typeTokenConstraint=TypeTokenConstraint?
		public Assignment getTypeTokenConstraintAssignment_5() { return cTypeTokenConstraintAssignment_5; }

		//TypeTokenConstraint
		public RuleCall getTypeTokenConstraintTypeTokenConstraintParserRuleCall_5_0() { return cTypeTokenConstraintTypeTokenConstraintParserRuleCall_5_0; }

		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class ErrorPathElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ErrorPath");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cErrorKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cPathKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cIncomingAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cIncomingErrorPropagationCrossReference_4_0 = (CrossReference)cIncomingAssignment_4.eContents().get(0);
		private final RuleCall cIncomingErrorPropagationErrorPropagationPointParserRuleCall_4_0_1 = (RuleCall)cIncomingErrorPropagationCrossReference_4_0.eContents().get(1);
		private final Assignment cTypeTokenConstraintAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTypeTokenConstraintTypeTokenConstraintParserRuleCall_5_0 = (RuleCall)cTypeTokenConstraintAssignment_5.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Alternatives cAlternatives_7 = (Alternatives)cGroup.eContents().get(7);
		private final Assignment cOutgoingAssignment_7_0 = (Assignment)cAlternatives_7.eContents().get(0);
		private final CrossReference cOutgoingErrorPropagationCrossReference_7_0_0 = (CrossReference)cOutgoingAssignment_7_0.eContents().get(0);
		private final RuleCall cOutgoingErrorPropagationErrorPropagationPointParserRuleCall_7_0_0_1 = (RuleCall)cOutgoingErrorPropagationCrossReference_7_0_0.eContents().get(1);
		private final Assignment cAllAssignment_7_1 = (Assignment)cAlternatives_7.eContents().get(1);
		private final Keyword cAllAllKeyword_7_1_0 = (Keyword)cAllAssignment_7_1.eContents().get(0);
		private final Alternatives cAlternatives_8 = (Alternatives)cGroup.eContents().get(8);
		private final Assignment cTargetTokenAssignment_8_0 = (Assignment)cAlternatives_8.eContents().get(0);
		private final RuleCall cTargetTokenTypeTokenParserRuleCall_8_0_0 = (RuleCall)cTargetTokenAssignment_8_0.eContents().get(0);
		private final Group cGroup_8_1 = (Group)cAlternatives_8.eContents().get(1);
		private final Keyword cUseKeyword_8_1_0 = (Keyword)cGroup_8_1.eContents().get(0);
		private final Keyword cMappingsKeyword_8_1_1 = (Keyword)cGroup_8_1.eContents().get(1);
		private final Assignment cTypeMappingSetAssignment_8_1_2 = (Assignment)cGroup_8_1.eContents().get(2);
		private final CrossReference cTypeMappingSetTypeMappingSetCrossReference_8_1_2_0 = (CrossReference)cTypeMappingSetAssignment_8_1_2.eContents().get(0);
		private final RuleCall cTypeMappingSetTypeMappingSetQEMREFParserRuleCall_8_1_2_0_1 = (RuleCall)cTypeMappingSetTypeMappingSetCrossReference_8_1_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//ErrorPath:
		//
		//	name=ID ":" "error" "path" incoming=[ErrorPropagation|ErrorPropagationPoint] typeTokenConstraint=TypeTokenConstraint?
		//
		//	"->" (outgoing=[ErrorPropagation|ErrorPropagationPoint] | all?="all") (targetToken=TypeToken | "use" "mappings"
		//
		//	typeMappingSet=[TypeMappingSet|QEMREF])? ";";
		public ParserRule getRule() { return rule; }

		//name=ID ":" "error" "path" incoming=[ErrorPropagation|ErrorPropagationPoint] typeTokenConstraint=TypeTokenConstraint?
		//
		//"->" (outgoing=[ErrorPropagation|ErrorPropagationPoint] | all?="all") (targetToken=TypeToken | "use" "mappings"
		//
		//typeMappingSet=[TypeMappingSet|QEMREF])? ";"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"error"
		public Keyword getErrorKeyword_2() { return cErrorKeyword_2; }

		//"path"
		public Keyword getPathKeyword_3() { return cPathKeyword_3; }

		//incoming=[ErrorPropagation|ErrorPropagationPoint]
		public Assignment getIncomingAssignment_4() { return cIncomingAssignment_4; }

		//[ErrorPropagation|ErrorPropagationPoint]
		public CrossReference getIncomingErrorPropagationCrossReference_4_0() { return cIncomingErrorPropagationCrossReference_4_0; }

		//ErrorPropagationPoint
		public RuleCall getIncomingErrorPropagationErrorPropagationPointParserRuleCall_4_0_1() { return cIncomingErrorPropagationErrorPropagationPointParserRuleCall_4_0_1; }

		//typeTokenConstraint=TypeTokenConstraint?
		public Assignment getTypeTokenConstraintAssignment_5() { return cTypeTokenConstraintAssignment_5; }

		//TypeTokenConstraint
		public RuleCall getTypeTokenConstraintTypeTokenConstraintParserRuleCall_5_0() { return cTypeTokenConstraintTypeTokenConstraintParserRuleCall_5_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_6() { return cHyphenMinusGreaterThanSignKeyword_6; }

		//outgoing=[ErrorPropagation|ErrorPropagationPoint] | all?="all"
		public Alternatives getAlternatives_7() { return cAlternatives_7; }

		//outgoing=[ErrorPropagation|ErrorPropagationPoint]
		public Assignment getOutgoingAssignment_7_0() { return cOutgoingAssignment_7_0; }

		//[ErrorPropagation|ErrorPropagationPoint]
		public CrossReference getOutgoingErrorPropagationCrossReference_7_0_0() { return cOutgoingErrorPropagationCrossReference_7_0_0; }

		//ErrorPropagationPoint
		public RuleCall getOutgoingErrorPropagationErrorPropagationPointParserRuleCall_7_0_0_1() { return cOutgoingErrorPropagationErrorPropagationPointParserRuleCall_7_0_0_1; }

		//all?="all"
		public Assignment getAllAssignment_7_1() { return cAllAssignment_7_1; }

		//"all"
		public Keyword getAllAllKeyword_7_1_0() { return cAllAllKeyword_7_1_0; }

		//(targetToken=TypeToken | "use" "mappings" typeMappingSet=[TypeMappingSet|QEMREF])?
		public Alternatives getAlternatives_8() { return cAlternatives_8; }

		//targetToken=TypeToken
		public Assignment getTargetTokenAssignment_8_0() { return cTargetTokenAssignment_8_0; }

		//TypeToken
		public RuleCall getTargetTokenTypeTokenParserRuleCall_8_0_0() { return cTargetTokenTypeTokenParserRuleCall_8_0_0; }

		//"use" "mappings" typeMappingSet=[TypeMappingSet|QEMREF]
		public Group getGroup_8_1() { return cGroup_8_1; }

		//"use"
		public Keyword getUseKeyword_8_1_0() { return cUseKeyword_8_1_0; }

		//"mappings"
		public Keyword getMappingsKeyword_8_1_1() { return cMappingsKeyword_8_1_1; }

		//typeMappingSet=[TypeMappingSet|QEMREF]
		public Assignment getTypeMappingSetAssignment_8_1_2() { return cTypeMappingSetAssignment_8_1_2; }

		//[TypeMappingSet|QEMREF]
		public CrossReference getTypeMappingSetTypeMappingSetCrossReference_8_1_2_0() { return cTypeMappingSetTypeMappingSetCrossReference_8_1_2_0; }

		//QEMREF
		public RuleCall getTypeMappingSetTypeMappingSetQEMREFParserRuleCall_8_1_2_0_1() { return cTypeMappingSetTypeMappingSetQEMREFParserRuleCall_8_1_2_0_1; }

		//";"
		public Keyword getSemicolonKeyword_9() { return cSemicolonKeyword_9; }
	}

	public class ErrorPropagationPointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ErrorPropagationPoint");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPropagationKindParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cFullStopKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1_1 = (RuleCall)cGroup_1_1.eContents().get(1);
		
		//// reference to error propagation  
		// ErrorPropagationPoint:
		//
		//	PropagationKind | ID ("." ID)*;
		public ParserRule getRule() { return rule; }

		//PropagationKind | ID ("." ID)*
		public Alternatives getAlternatives() { return cAlternatives; }

		//PropagationKind
		public RuleCall getPropagationKindParserRuleCall_0() { return cPropagationKindParserRuleCall_0; }

		//ID ("." ID)*
		public Group getGroup_1() { return cGroup_1; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_0() { return cIDTerminalRuleCall_1_0; }

		//("." ID)*
		public Group getGroup_1_1() { return cGroup_1_1; }

		//"."
		public Keyword getFullStopKeyword_1_1_0() { return cFullStopKeyword_1_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1_1() { return cIDTerminalRuleCall_1_1_1; }
	}

	public class PropagationPathsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PropagationPaths");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPropagationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cPathsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPointsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPointsPropagationPointParserRuleCall_2_0 = (RuleCall)cPointsAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cConnectionsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cConnectionsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cConnectionsPropagationPointConnectionParserRuleCall_3_1_0 = (RuleCall)cConnectionsAssignment_3_1.eContents().get(0);
		private final Keyword cEndKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cPathsKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//PropagationPaths:
		//
		//	"propagation" "paths" points+=PropagationPoint+ ("connections" connections+=PropagationPointConnection+)? "end"
		//
		//	"paths" ";";
		public ParserRule getRule() { return rule; }

		//"propagation" "paths" points+=PropagationPoint+ ("connections" connections+=PropagationPointConnection+)? "end" "paths"
		//
		//";"
		public Group getGroup() { return cGroup; }

		//"propagation"
		public Keyword getPropagationKeyword_0() { return cPropagationKeyword_0; }

		//"paths"
		public Keyword getPathsKeyword_1() { return cPathsKeyword_1; }

		//points+=PropagationPoint+
		public Assignment getPointsAssignment_2() { return cPointsAssignment_2; }

		//PropagationPoint
		public RuleCall getPointsPropagationPointParserRuleCall_2_0() { return cPointsPropagationPointParserRuleCall_2_0; }

		//("connections" connections+=PropagationPointConnection+)?
		public Group getGroup_3() { return cGroup_3; }

		//"connections"
		public Keyword getConnectionsKeyword_3_0() { return cConnectionsKeyword_3_0; }

		//connections+=PropagationPointConnection+
		public Assignment getConnectionsAssignment_3_1() { return cConnectionsAssignment_3_1; }

		//PropagationPointConnection
		public RuleCall getConnectionsPropagationPointConnectionParserRuleCall_3_1_0() { return cConnectionsPropagationPointConnectionParserRuleCall_3_1_0; }

		//"end"
		public Keyword getEndKeyword_4() { return cEndKeyword_4; }

		//"paths"
		public Keyword getPathsKeyword_5() { return cPathsKeyword_5; }

		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class PropagationPointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PropagationPoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cPropagationKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cPointKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PropagationPoint:
		//
		//	name=ID ":" "propagation" "point" ";";
		public ParserRule getRule() { return rule; }

		//name=ID ":" "propagation" "point" ";"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"propagation"
		public Keyword getPropagationKeyword_2() { return cPropagationKeyword_2; }

		//"point"
		public Keyword getPointKeyword_3() { return cPointKeyword_3; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class PropagationPointConnectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PropagationPointConnection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSourceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSourceQualifiedPropagationPointParserRuleCall_2_0 = (RuleCall)cSourceAssignment_2.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTargetAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTargetQualifiedPropagationPointParserRuleCall_4_0 = (RuleCall)cTargetAssignment_4.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//PropagationPointConnection:
		//
		//	name=ID ":" source=QualifiedPropagationPoint "->" target=QualifiedPropagationPoint ";";
		public ParserRule getRule() { return rule; }

		//name=ID ":" source=QualifiedPropagationPoint "->" target=QualifiedPropagationPoint ";"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//source=QualifiedPropagationPoint
		public Assignment getSourceAssignment_2() { return cSourceAssignment_2; }

		//QualifiedPropagationPoint
		public RuleCall getSourceQualifiedPropagationPointParserRuleCall_2_0() { return cSourceQualifiedPropagationPointParserRuleCall_2_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_3() { return cHyphenMinusGreaterThanSignKeyword_3; }

		//target=QualifiedPropagationPoint
		public Assignment getTargetAssignment_4() { return cTargetAssignment_4; }

		//QualifiedPropagationPoint
		public RuleCall getTargetQualifiedPropagationPointParserRuleCall_4_0() { return cTargetQualifiedPropagationPointParserRuleCall_4_0; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class QualifiedPropagationPointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QualifiedPropagationPoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cSubcomponentAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final CrossReference cSubcomponentSubcomponentCrossReference_0_0_0 = (CrossReference)cSubcomponentAssignment_0_0.eContents().get(0);
		private final RuleCall cSubcomponentSubcomponentIDTerminalRuleCall_0_0_0_1 = (RuleCall)cSubcomponentSubcomponentCrossReference_0_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cPropagationPointAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cPropagationPointPropagationPointCrossReference_1_0 = (CrossReference)cPropagationPointAssignment_1.eContents().get(0);
		private final RuleCall cPropagationPointPropagationPointIDTerminalRuleCall_1_0_1 = (RuleCall)cPropagationPointPropagationPointCrossReference_1_0.eContents().get(1);
		
		//QualifiedPropagationPoint:
		//
		//	(subcomponent=[aadl2::Subcomponent] ".")? propagationPoint=[PropagationPoint];
		public ParserRule getRule() { return rule; }

		//(subcomponent=[aadl2::Subcomponent] ".")? propagationPoint=[PropagationPoint]
		public Group getGroup() { return cGroup; }

		//(subcomponent=[aadl2::Subcomponent] ".")?
		public Group getGroup_0() { return cGroup_0; }

		//subcomponent=[aadl2::Subcomponent]
		public Assignment getSubcomponentAssignment_0_0() { return cSubcomponentAssignment_0_0; }

		//[aadl2::Subcomponent]
		public CrossReference getSubcomponentSubcomponentCrossReference_0_0_0() { return cSubcomponentSubcomponentCrossReference_0_0_0; }

		//ID
		public RuleCall getSubcomponentSubcomponentIDTerminalRuleCall_0_0_0_1() { return cSubcomponentSubcomponentIDTerminalRuleCall_0_0_0_1; }

		//"."
		public Keyword getFullStopKeyword_0_1() { return cFullStopKeyword_0_1; }

		//propagationPoint=[PropagationPoint]
		public Assignment getPropagationPointAssignment_1() { return cPropagationPointAssignment_1; }

		//[PropagationPoint]
		public CrossReference getPropagationPointPropagationPointCrossReference_1_0() { return cPropagationPointPropagationPointCrossReference_1_0; }

		//ID
		public RuleCall getPropagationPointPropagationPointIDTerminalRuleCall_1_0_1() { return cPropagationPointPropagationPointIDTerminalRuleCall_1_0_1; }
	}

	public class ErrorBehaviorStateMachineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ErrorBehaviorStateMachine");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cErrorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cBehaviorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cUseKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cTypesKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cUseTypesAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final CrossReference cUseTypesErrorModelLibraryCrossReference_3_2_0 = (CrossReference)cUseTypesAssignment_3_2.eContents().get(0);
		private final RuleCall cUseTypesErrorModelLibraryQEMREFParserRuleCall_3_2_0_1 = (RuleCall)cUseTypesErrorModelLibraryCrossReference_3_2_0.eContents().get(1);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cUseTypesAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final CrossReference cUseTypesErrorModelLibraryCrossReference_3_3_1_0 = (CrossReference)cUseTypesAssignment_3_3_1.eContents().get(0);
		private final RuleCall cUseTypesErrorModelLibraryQEMREFParserRuleCall_3_3_1_0_1 = (RuleCall)cUseTypesErrorModelLibraryCrossReference_3_3_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cUseKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cTransformationsKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cUseTransformationAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cUseTransformationTypeTransformationSetCrossReference_4_2_0 = (CrossReference)cUseTransformationAssignment_4_2.eContents().get(0);
		private final RuleCall cUseTransformationTypeTransformationSetQEMREFParserRuleCall_4_2_0_1 = (RuleCall)cUseTransformationTypeTransformationSetCrossReference_4_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cEventsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cEventsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cEventsErrorBehaviorEventParserRuleCall_5_1_0 = (RuleCall)cEventsAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cStatesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cStatesAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cStatesErrorBehaviorStateParserRuleCall_6_1_0 = (RuleCall)cStatesAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cTransitionsKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cTransitionsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cTransitionsErrorBehaviorTransitionParserRuleCall_7_1_0 = (RuleCall)cTransitionsAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cPropertiesKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cPropertiesAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cPropertiesContainedPropertyAssociationParserRuleCall_8_1_0 = (RuleCall)cPropertiesAssignment_8_1.eContents().get(0);
		private final Keyword cEndKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cBehaviorKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cSemicolonKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//ErrorBehaviorStateMachine:
		//
		//	"error" "behavior" name=ID ("use" "types" useTypes+=[ErrorModelLibrary|QEMREF] (","
		//
		//	useTypes+=[ErrorModelLibrary|QEMREF])* ";")? ("use" "transformations"
		//
		//	useTransformation+=[TypeTransformationSet|QEMREF] ";")? ("events" events+=ErrorBehaviorEvent+)? ("states"
		//
		//	states+=ErrorBehaviorState+)? ("transitions" transitions+=ErrorBehaviorTransition+)? ("properties"
		//
		//	properties+=ContainedPropertyAssociation+)? "end" "behavior" ";";
		public ParserRule getRule() { return rule; }

		//"error" "behavior" name=ID ("use" "types" useTypes+=[ErrorModelLibrary|QEMREF] (","
		//
		//useTypes+=[ErrorModelLibrary|QEMREF])* ";")? ("use" "transformations"
		//
		//useTransformation+=[TypeTransformationSet|QEMREF] ";")? ("events" events+=ErrorBehaviorEvent+)? ("states"
		//
		//states+=ErrorBehaviorState+)? ("transitions" transitions+=ErrorBehaviorTransition+)? ("properties"
		//
		//properties+=ContainedPropertyAssociation+)? "end" "behavior" ";"
		public Group getGroup() { return cGroup; }

		//"error"
		public Keyword getErrorKeyword_0() { return cErrorKeyword_0; }

		//"behavior"
		public Keyword getBehaviorKeyword_1() { return cBehaviorKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("use" "types" useTypes+=[ErrorModelLibrary|QEMREF] ("," useTypes+=[ErrorModelLibrary|QEMREF])* ";")?
		public Group getGroup_3() { return cGroup_3; }

		//"use"
		public Keyword getUseKeyword_3_0() { return cUseKeyword_3_0; }

		//"types"
		public Keyword getTypesKeyword_3_1() { return cTypesKeyword_3_1; }

		//useTypes+=[ErrorModelLibrary|QEMREF]
		public Assignment getUseTypesAssignment_3_2() { return cUseTypesAssignment_3_2; }

		//[ErrorModelLibrary|QEMREF]
		public CrossReference getUseTypesErrorModelLibraryCrossReference_3_2_0() { return cUseTypesErrorModelLibraryCrossReference_3_2_0; }

		//QEMREF
		public RuleCall getUseTypesErrorModelLibraryQEMREFParserRuleCall_3_2_0_1() { return cUseTypesErrorModelLibraryQEMREFParserRuleCall_3_2_0_1; }

		//("," useTypes+=[ErrorModelLibrary|QEMREF])*
		public Group getGroup_3_3() { return cGroup_3_3; }

		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }

		//useTypes+=[ErrorModelLibrary|QEMREF]
		public Assignment getUseTypesAssignment_3_3_1() { return cUseTypesAssignment_3_3_1; }

		//[ErrorModelLibrary|QEMREF]
		public CrossReference getUseTypesErrorModelLibraryCrossReference_3_3_1_0() { return cUseTypesErrorModelLibraryCrossReference_3_3_1_0; }

		//QEMREF
		public RuleCall getUseTypesErrorModelLibraryQEMREFParserRuleCall_3_3_1_0_1() { return cUseTypesErrorModelLibraryQEMREFParserRuleCall_3_3_1_0_1; }

		//";"
		public Keyword getSemicolonKeyword_3_4() { return cSemicolonKeyword_3_4; }

		//("use" "transformations" useTransformation+=[TypeTransformationSet|QEMREF] ";")?
		public Group getGroup_4() { return cGroup_4; }

		//"use"
		public Keyword getUseKeyword_4_0() { return cUseKeyword_4_0; }

		//"transformations"
		public Keyword getTransformationsKeyword_4_1() { return cTransformationsKeyword_4_1; }

		//useTransformation+=[TypeTransformationSet|QEMREF]
		public Assignment getUseTransformationAssignment_4_2() { return cUseTransformationAssignment_4_2; }

		//[TypeTransformationSet|QEMREF]
		public CrossReference getUseTransformationTypeTransformationSetCrossReference_4_2_0() { return cUseTransformationTypeTransformationSetCrossReference_4_2_0; }

		//QEMREF
		public RuleCall getUseTransformationTypeTransformationSetQEMREFParserRuleCall_4_2_0_1() { return cUseTransformationTypeTransformationSetQEMREFParserRuleCall_4_2_0_1; }

		//";"
		public Keyword getSemicolonKeyword_4_3() { return cSemicolonKeyword_4_3; }

		//("events" events+=ErrorBehaviorEvent+)?
		public Group getGroup_5() { return cGroup_5; }

		//"events"
		public Keyword getEventsKeyword_5_0() { return cEventsKeyword_5_0; }

		//events+=ErrorBehaviorEvent+
		public Assignment getEventsAssignment_5_1() { return cEventsAssignment_5_1; }

		//ErrorBehaviorEvent
		public RuleCall getEventsErrorBehaviorEventParserRuleCall_5_1_0() { return cEventsErrorBehaviorEventParserRuleCall_5_1_0; }

		//("states" states+=ErrorBehaviorState+)?
		public Group getGroup_6() { return cGroup_6; }

		//"states"
		public Keyword getStatesKeyword_6_0() { return cStatesKeyword_6_0; }

		//states+=ErrorBehaviorState+
		public Assignment getStatesAssignment_6_1() { return cStatesAssignment_6_1; }

		//ErrorBehaviorState
		public RuleCall getStatesErrorBehaviorStateParserRuleCall_6_1_0() { return cStatesErrorBehaviorStateParserRuleCall_6_1_0; }

		//("transitions" transitions+=ErrorBehaviorTransition+)?
		public Group getGroup_7() { return cGroup_7; }

		//"transitions"
		public Keyword getTransitionsKeyword_7_0() { return cTransitionsKeyword_7_0; }

		//transitions+=ErrorBehaviorTransition+
		public Assignment getTransitionsAssignment_7_1() { return cTransitionsAssignment_7_1; }

		//ErrorBehaviorTransition
		public RuleCall getTransitionsErrorBehaviorTransitionParserRuleCall_7_1_0() { return cTransitionsErrorBehaviorTransitionParserRuleCall_7_1_0; }

		//("properties" properties+=ContainedPropertyAssociation+)?
		public Group getGroup_8() { return cGroup_8; }

		//"properties"
		public Keyword getPropertiesKeyword_8_0() { return cPropertiesKeyword_8_0; }

		//properties+=ContainedPropertyAssociation+
		public Assignment getPropertiesAssignment_8_1() { return cPropertiesAssignment_8_1; }

		//ContainedPropertyAssociation
		public RuleCall getPropertiesContainedPropertyAssociationParserRuleCall_8_1_0() { return cPropertiesContainedPropertyAssociationParserRuleCall_8_1_0; }

		//"end"
		public Keyword getEndKeyword_9() { return cEndKeyword_9; }

		//"behavior"
		public Keyword getBehaviorKeyword_10() { return cBehaviorKeyword_10; }

		//";"
		public Keyword getSemicolonKeyword_11() { return cSemicolonKeyword_11; }
	}

	public class ErrorBehaviorEventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ErrorBehaviorEvent");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cErrorEventParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRepairEventParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRecoverEventParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ErrorBehaviorEvent:
		//
		//	ErrorEvent | RepairEvent | RecoverEvent;
		public ParserRule getRule() { return rule; }

		//ErrorEvent | RepairEvent | RecoverEvent
		public Alternatives getAlternatives() { return cAlternatives; }

		//ErrorEvent
		public RuleCall getErrorEventParserRuleCall_0() { return cErrorEventParserRuleCall_0; }

		//RepairEvent
		public RuleCall getRepairEventParserRuleCall_1() { return cRepairEventParserRuleCall_1; }

		//RecoverEvent
		public RuleCall getRecoverEventParserRuleCall_2() { return cRecoverEventParserRuleCall_2; }
	}

	public class ErrorEventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ErrorEvent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cErrorKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEventKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeSetAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeSetTypeSetReferenceParserRuleCall_4_0 = (RuleCall)cTypeSetAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cWhenKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cConditionAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cConditionSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cConditionAssignment_5_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//// add event condition 
		// ErrorEvent:
		//
		//	name=ID ":" "error" "event" typeSet=TypeSetReference? ("when" condition=STRING)? ";";
		public ParserRule getRule() { return rule; }

		//name=ID ":" "error" "event" typeSet=TypeSetReference? ("when" condition=STRING)? ";"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"error"
		public Keyword getErrorKeyword_2() { return cErrorKeyword_2; }

		//"event"
		public Keyword getEventKeyword_3() { return cEventKeyword_3; }

		//typeSet=TypeSetReference?
		public Assignment getTypeSetAssignment_4() { return cTypeSetAssignment_4; }

		//TypeSetReference
		public RuleCall getTypeSetTypeSetReferenceParserRuleCall_4_0() { return cTypeSetTypeSetReferenceParserRuleCall_4_0; }

		//("when" condition=STRING)?
		public Group getGroup_5() { return cGroup_5; }

		//"when"
		public Keyword getWhenKeyword_5_0() { return cWhenKeyword_5_0; }

		//condition=STRING
		public Assignment getConditionAssignment_5_1() { return cConditionAssignment_5_1; }

		//STRING
		public RuleCall getConditionSTRINGTerminalRuleCall_5_1_0() { return cConditionSTRINGTerminalRuleCall_5_1_0; }

		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class RepairEventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RepairEvent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cRepairKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEventKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cWhenKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cConditionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cConditionSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cConditionAssignment_4_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////add repair initiator 
		// RepairEvent:
		//
		//	name=ID ":" "repair" "event" ("when" condition=STRING)? ";";
		public ParserRule getRule() { return rule; }

		//name=ID ":" "repair" "event" ("when" condition=STRING)? ";"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"repair"
		public Keyword getRepairKeyword_2() { return cRepairKeyword_2; }

		//"event"
		public Keyword getEventKeyword_3() { return cEventKeyword_3; }

		//("when" condition=STRING)?
		public Group getGroup_4() { return cGroup_4; }

		//"when"
		public Keyword getWhenKeyword_4_0() { return cWhenKeyword_4_0; }

		//condition=STRING
		public Assignment getConditionAssignment_4_1() { return cConditionAssignment_4_1; }

		//STRING
		public RuleCall getConditionSTRINGTerminalRuleCall_4_1_0() { return cConditionSTRINGTerminalRuleCall_4_1_0; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class RecoverEventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RecoverEvent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cRecoverKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEventKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cWhenKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cConditionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cConditionNamedElementCrossReference_4_1_0 = (CrossReference)cConditionAssignment_4_1.eContents().get(0);
		private final RuleCall cConditionNamedElementIDTerminalRuleCall_4_1_0_1 = (RuleCall)cConditionNamedElementCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cConditionAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final CrossReference cConditionNamedElementCrossReference_4_2_1_0 = (CrossReference)cConditionAssignment_4_2_1.eContents().get(0);
		private final RuleCall cConditionNamedElementIDTerminalRuleCall_4_2_1_0_1 = (RuleCall)cConditionNamedElementCrossReference_4_2_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////add recover initiator 
		// RecoverEvent:
		//
		//	name=ID ":" "recover" "event" ("when" condition+=[aadl2::NamedElement] ("," condition+=[aadl2::NamedElement])*)? ";";
		public ParserRule getRule() { return rule; }

		//name=ID ":" "recover" "event" ("when" condition+=[aadl2::NamedElement] ("," condition+=[aadl2::NamedElement])*)? ";"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"recover"
		public Keyword getRecoverKeyword_2() { return cRecoverKeyword_2; }

		//"event"
		public Keyword getEventKeyword_3() { return cEventKeyword_3; }

		//("when" condition+=[aadl2::NamedElement] ("," condition+=[aadl2::NamedElement])*)?
		public Group getGroup_4() { return cGroup_4; }

		//"when"
		public Keyword getWhenKeyword_4_0() { return cWhenKeyword_4_0; }

		//condition+=[aadl2::NamedElement]
		public Assignment getConditionAssignment_4_1() { return cConditionAssignment_4_1; }

		//[aadl2::NamedElement]
		public CrossReference getConditionNamedElementCrossReference_4_1_0() { return cConditionNamedElementCrossReference_4_1_0; }

		//ID
		public RuleCall getConditionNamedElementIDTerminalRuleCall_4_1_0_1() { return cConditionNamedElementIDTerminalRuleCall_4_1_0_1; }

		//("," condition+=[aadl2::NamedElement])*
		public Group getGroup_4_2() { return cGroup_4_2; }

		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }

		//condition+=[aadl2::NamedElement]
		public Assignment getConditionAssignment_4_2_1() { return cConditionAssignment_4_2_1; }

		//[aadl2::NamedElement]
		public CrossReference getConditionNamedElementCrossReference_4_2_1_0() { return cConditionNamedElementCrossReference_4_2_1_0; }

		//ID
		public RuleCall getConditionNamedElementIDTerminalRuleCall_4_2_1_0_1() { return cConditionNamedElementIDTerminalRuleCall_4_2_1_0_1; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class ErrorBehaviorStateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ErrorBehaviorState");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cIntialAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cIntialInitialKeyword_2_0 = (Keyword)cIntialAssignment_2.eContents().get(0);
		private final Keyword cStateKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeSetAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeSetTypeSetReferenceParserRuleCall_4_0 = (RuleCall)cTypeSetAssignment_4.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ErrorBehaviorState:
		//
		//	name=ID ":" intial?="initial"? "state" typeSet=TypeSetReference? ";";
		public ParserRule getRule() { return rule; }

		//name=ID ":" intial?="initial"? "state" typeSet=TypeSetReference? ";"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//intial?="initial"?
		public Assignment getIntialAssignment_2() { return cIntialAssignment_2; }

		//"initial"
		public Keyword getIntialInitialKeyword_2_0() { return cIntialInitialKeyword_2_0; }

		//"state"
		public Keyword getStateKeyword_3() { return cStateKeyword_3; }

		//typeSet=TypeSetReference?
		public Assignment getTypeSetAssignment_4() { return cTypeSetAssignment_4; }

		//TypeSetReference
		public RuleCall getTypeSetTypeSetReferenceParserRuleCall_4_0() { return cTypeSetTypeSetReferenceParserRuleCall_4_0; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class ErrorBehaviorTransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ErrorBehaviorTransition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final Keyword cColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Assignment cSourceAssignment_1_0_0 = (Assignment)cGroup_1_0.eContents().get(0);
		private final CrossReference cSourceErrorBehaviorStateCrossReference_1_0_0_0 = (CrossReference)cSourceAssignment_1_0_0.eContents().get(0);
		private final RuleCall cSourceErrorBehaviorStateIDTerminalRuleCall_1_0_0_0_1 = (RuleCall)cSourceErrorBehaviorStateCrossReference_1_0_0_0.eContents().get(1);
		private final Assignment cTypeTokenConstraintAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cTypeTokenConstraintTypeTokenConstraintParserRuleCall_1_0_1_0 = (RuleCall)cTypeTokenConstraintAssignment_1_0_1.eContents().get(0);
		private final Assignment cAllAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final Keyword cAllAllKeyword_1_1_0 = (Keyword)cAllAssignment_1_1.eContents().get(0);
		private final Keyword cHyphenMinusLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cConditionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cConditionConditionExpressionParserRuleCall_3_0 = (RuleCall)cConditionAssignment_3.eContents().get(0);
		private final Keyword cRightSquareBracketHyphenMinusGreaterThanSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Alternatives cAlternatives_5_0 = (Alternatives)cAlternatives_5.eContents().get(0);
		private final Group cGroup_5_0_0 = (Group)cAlternatives_5_0.eContents().get(0);
		private final Assignment cTargetAssignment_5_0_0_0 = (Assignment)cGroup_5_0_0.eContents().get(0);
		private final CrossReference cTargetErrorBehaviorStateCrossReference_5_0_0_0_0 = (CrossReference)cTargetAssignment_5_0_0_0.eContents().get(0);
		private final RuleCall cTargetErrorBehaviorStateIDTerminalRuleCall_5_0_0_0_0_1 = (RuleCall)cTargetErrorBehaviorStateCrossReference_5_0_0_0_0.eContents().get(1);
		private final Assignment cTargetTokenAssignment_5_0_0_1 = (Assignment)cGroup_5_0_0.eContents().get(1);
		private final RuleCall cTargetTokenTypeTokenParserRuleCall_5_0_0_1_0 = (RuleCall)cTargetTokenAssignment_5_0_0_1.eContents().get(0);
		private final Assignment cMaskAssignment_5_0_1 = (Assignment)cAlternatives_5_0.eContents().get(1);
		private final Keyword cMaskMaskKeyword_5_0_1_0 = (Keyword)cMaskAssignment_5_0_1.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Assignment cDestinationBranchesAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cDestinationBranchesTransitionBranchParserRuleCall_5_1_1_0 = (RuleCall)cDestinationBranchesAssignment_5_1_1.eContents().get(0);
		private final Group cGroup_5_1_2 = (Group)cGroup_5_1.eContents().get(2);
		private final Keyword cCommaKeyword_5_1_2_0 = (Keyword)cGroup_5_1_2.eContents().get(0);
		private final Assignment cDestinationBranchesAssignment_5_1_2_1 = (Assignment)cGroup_5_1_2.eContents().get(1);
		private final RuleCall cDestinationBranchesTransitionBranchParserRuleCall_5_1_2_1_0 = (RuleCall)cDestinationBranchesAssignment_5_1_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5_1_3 = (Keyword)cGroup_5_1.eContents().get(3);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ErrorBehaviorTransition:
		//
		//	(name=ID ":")? (source=[ErrorBehaviorState] typeTokenConstraint=TypeTokenConstraint? | all?="all") "-["
		//
		//	condition=ConditionExpression "]->" ((target=[ErrorBehaviorState] targetToken=TypeToken? | mask?="mask") | "("
		//
		//	destinationBranches+=TransitionBranch ("," destinationBranches+=TransitionBranch)+ ")") ";";
		public ParserRule getRule() { return rule; }

		//(name=ID ":")? (source=[ErrorBehaviorState] typeTokenConstraint=TypeTokenConstraint? | all?="all") "-["
		//
		//condition=ConditionExpression "]->" ((target=[ErrorBehaviorState] targetToken=TypeToken? | mask?="mask") | "("
		//
		//destinationBranches+=TransitionBranch ("," destinationBranches+=TransitionBranch)+ ")") ";"
		public Group getGroup() { return cGroup; }

		//(name=ID ":")?
		public Group getGroup_0() { return cGroup_0; }

		//name=ID
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0_0() { return cNameIDTerminalRuleCall_0_0_0; }

		//":"
		public Keyword getColonKeyword_0_1() { return cColonKeyword_0_1; }

		//source=[ErrorBehaviorState] typeTokenConstraint=TypeTokenConstraint? | all?="all"
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//source=[ErrorBehaviorState] typeTokenConstraint=TypeTokenConstraint?
		public Group getGroup_1_0() { return cGroup_1_0; }

		//source=[ErrorBehaviorState]
		public Assignment getSourceAssignment_1_0_0() { return cSourceAssignment_1_0_0; }

		//[ErrorBehaviorState]
		public CrossReference getSourceErrorBehaviorStateCrossReference_1_0_0_0() { return cSourceErrorBehaviorStateCrossReference_1_0_0_0; }

		//ID
		public RuleCall getSourceErrorBehaviorStateIDTerminalRuleCall_1_0_0_0_1() { return cSourceErrorBehaviorStateIDTerminalRuleCall_1_0_0_0_1; }

		//typeTokenConstraint=TypeTokenConstraint?
		public Assignment getTypeTokenConstraintAssignment_1_0_1() { return cTypeTokenConstraintAssignment_1_0_1; }

		//TypeTokenConstraint
		public RuleCall getTypeTokenConstraintTypeTokenConstraintParserRuleCall_1_0_1_0() { return cTypeTokenConstraintTypeTokenConstraintParserRuleCall_1_0_1_0; }

		//all?="all"
		public Assignment getAllAssignment_1_1() { return cAllAssignment_1_1; }

		//"all"
		public Keyword getAllAllKeyword_1_1_0() { return cAllAllKeyword_1_1_0; }

		//"-["
		public Keyword getHyphenMinusLeftSquareBracketKeyword_2() { return cHyphenMinusLeftSquareBracketKeyword_2; }

		//condition=ConditionExpression
		public Assignment getConditionAssignment_3() { return cConditionAssignment_3; }

		//ConditionExpression
		public RuleCall getConditionConditionExpressionParserRuleCall_3_0() { return cConditionConditionExpressionParserRuleCall_3_0; }

		//"]->"
		public Keyword getRightSquareBracketHyphenMinusGreaterThanSignKeyword_4() { return cRightSquareBracketHyphenMinusGreaterThanSignKeyword_4; }

		//(target=[ErrorBehaviorState] targetToken=TypeToken? | mask?="mask") | "(" destinationBranches+=TransitionBranch (","
		//
		//destinationBranches+=TransitionBranch)+ ")"
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//target=[ErrorBehaviorState] targetToken=TypeToken? | mask?="mask"
		public Alternatives getAlternatives_5_0() { return cAlternatives_5_0; }

		//target=[ErrorBehaviorState] targetToken=TypeToken?
		public Group getGroup_5_0_0() { return cGroup_5_0_0; }

		//target=[ErrorBehaviorState]
		public Assignment getTargetAssignment_5_0_0_0() { return cTargetAssignment_5_0_0_0; }

		//[ErrorBehaviorState]
		public CrossReference getTargetErrorBehaviorStateCrossReference_5_0_0_0_0() { return cTargetErrorBehaviorStateCrossReference_5_0_0_0_0; }

		//ID
		public RuleCall getTargetErrorBehaviorStateIDTerminalRuleCall_5_0_0_0_0_1() { return cTargetErrorBehaviorStateIDTerminalRuleCall_5_0_0_0_0_1; }

		//targetToken=TypeToken?
		public Assignment getTargetTokenAssignment_5_0_0_1() { return cTargetTokenAssignment_5_0_0_1; }

		//TypeToken
		public RuleCall getTargetTokenTypeTokenParserRuleCall_5_0_0_1_0() { return cTargetTokenTypeTokenParserRuleCall_5_0_0_1_0; }

		//mask?="mask"
		public Assignment getMaskAssignment_5_0_1() { return cMaskAssignment_5_0_1; }

		//"mask"
		public Keyword getMaskMaskKeyword_5_0_1_0() { return cMaskMaskKeyword_5_0_1_0; }

		//"(" destinationBranches+=TransitionBranch ("," destinationBranches+=TransitionBranch)+ ")"
		public Group getGroup_5_1() { return cGroup_5_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_5_1_0() { return cLeftParenthesisKeyword_5_1_0; }

		//destinationBranches+=TransitionBranch
		public Assignment getDestinationBranchesAssignment_5_1_1() { return cDestinationBranchesAssignment_5_1_1; }

		//TransitionBranch
		public RuleCall getDestinationBranchesTransitionBranchParserRuleCall_5_1_1_0() { return cDestinationBranchesTransitionBranchParserRuleCall_5_1_1_0; }

		//("," destinationBranches+=TransitionBranch)+
		public Group getGroup_5_1_2() { return cGroup_5_1_2; }

		//","
		public Keyword getCommaKeyword_5_1_2_0() { return cCommaKeyword_5_1_2_0; }

		//destinationBranches+=TransitionBranch
		public Assignment getDestinationBranchesAssignment_5_1_2_1() { return cDestinationBranchesAssignment_5_1_2_1; }

		//TransitionBranch
		public RuleCall getDestinationBranchesTransitionBranchParserRuleCall_5_1_2_1_0() { return cDestinationBranchesTransitionBranchParserRuleCall_5_1_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_5_1_3() { return cRightParenthesisKeyword_5_1_3; }

		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class TransitionBranchElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TransitionBranch");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cAlternatives_0.eContents().get(0);
		private final Assignment cTargetAssignment_0_0_0 = (Assignment)cGroup_0_0.eContents().get(0);
		private final CrossReference cTargetErrorBehaviorStateCrossReference_0_0_0_0 = (CrossReference)cTargetAssignment_0_0_0.eContents().get(0);
		private final RuleCall cTargetErrorBehaviorStateIDTerminalRuleCall_0_0_0_0_1 = (RuleCall)cTargetErrorBehaviorStateCrossReference_0_0_0_0.eContents().get(1);
		private final Assignment cTargetTokenAssignment_0_0_1 = (Assignment)cGroup_0_0.eContents().get(1);
		private final RuleCall cTargetTokenTypeTokenParserRuleCall_0_0_1_0 = (RuleCall)cTargetTokenAssignment_0_0_1.eContents().get(0);
		private final Assignment cMaskAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final Keyword cMaskMaskKeyword_0_1_0 = (Keyword)cMaskAssignment_0_1.eContents().get(0);
		private final Keyword cWithKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueBranchValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//TransitionBranch:
		//
		//	(target=[ErrorBehaviorState] targetToken=TypeToken? | mask?="mask") "with" value=BranchValue;
		public ParserRule getRule() { return rule; }

		//(target=[ErrorBehaviorState] targetToken=TypeToken? | mask?="mask") "with" value=BranchValue
		public Group getGroup() { return cGroup; }

		//target=[ErrorBehaviorState] targetToken=TypeToken? | mask?="mask"
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//target=[ErrorBehaviorState] targetToken=TypeToken?
		public Group getGroup_0_0() { return cGroup_0_0; }

		//target=[ErrorBehaviorState]
		public Assignment getTargetAssignment_0_0_0() { return cTargetAssignment_0_0_0; }

		//[ErrorBehaviorState]
		public CrossReference getTargetErrorBehaviorStateCrossReference_0_0_0_0() { return cTargetErrorBehaviorStateCrossReference_0_0_0_0; }

		//ID
		public RuleCall getTargetErrorBehaviorStateIDTerminalRuleCall_0_0_0_0_1() { return cTargetErrorBehaviorStateIDTerminalRuleCall_0_0_0_0_1; }

		//targetToken=TypeToken?
		public Assignment getTargetTokenAssignment_0_0_1() { return cTargetTokenAssignment_0_0_1; }

		//TypeToken
		public RuleCall getTargetTokenTypeTokenParserRuleCall_0_0_1_0() { return cTargetTokenTypeTokenParserRuleCall_0_0_1_0; }

		//mask?="mask"
		public Assignment getMaskAssignment_0_1() { return cMaskAssignment_0_1; }

		//"mask"
		public Keyword getMaskMaskKeyword_0_1_0() { return cMaskMaskKeyword_0_1_0; }

		//"with"
		public Keyword getWithKeyword_1() { return cWithKeyword_1; }

		//value=BranchValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//BranchValue
		public RuleCall getValueBranchValueParserRuleCall_2_0() { return cValueBranchValueParserRuleCall_2_0; }
	}

	public class BranchValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BranchValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBranchValueAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cRealvalueAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cRealvalueREAL_LITTerminalRuleCall_1_0_0 = (RuleCall)cRealvalueAssignment_1_0.eContents().get(0);
		private final Assignment cSymboliclabelAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final CrossReference cSymboliclabelPropertyConstantCrossReference_1_1_0 = (CrossReference)cSymboliclabelAssignment_1_1.eContents().get(0);
		private final RuleCall cSymboliclabelPropertyConstantQEMREFParserRuleCall_1_1_0_1 = (RuleCall)cSymboliclabelPropertyConstantCrossReference_1_1_0.eContents().get(1);
		private final Assignment cOthersAssignment_1_2 = (Assignment)cAlternatives_1.eContents().get(2);
		private final Keyword cOthersOthersKeyword_1_2_0 = (Keyword)cOthersAssignment_1_2.eContents().get(0);
		
		//// store real literal as integer, ID as reference to property constant
		// BranchValue:
		//
		//	{BranchValue} (realvalue=REAL_LIT | symboliclabel=[aadl2::PropertyConstant|QEMREF] | others?="others");
		public ParserRule getRule() { return rule; }

		//{BranchValue} (realvalue=REAL_LIT | symboliclabel=[aadl2::PropertyConstant|QEMREF] | others?="others")
		public Group getGroup() { return cGroup; }

		//{BranchValue}
		public Action getBranchValueAction_0() { return cBranchValueAction_0; }

		//realvalue=REAL_LIT | symboliclabel=[aadl2::PropertyConstant|QEMREF] | others?="others"
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//realvalue=REAL_LIT
		public Assignment getRealvalueAssignment_1_0() { return cRealvalueAssignment_1_0; }

		//REAL_LIT
		public RuleCall getRealvalueREAL_LITTerminalRuleCall_1_0_0() { return cRealvalueREAL_LITTerminalRuleCall_1_0_0; }

		//symboliclabel=[aadl2::PropertyConstant|QEMREF]
		public Assignment getSymboliclabelAssignment_1_1() { return cSymboliclabelAssignment_1_1; }

		//[aadl2::PropertyConstant|QEMREF]
		public CrossReference getSymboliclabelPropertyConstantCrossReference_1_1_0() { return cSymboliclabelPropertyConstantCrossReference_1_1_0; }

		//QEMREF
		public RuleCall getSymboliclabelPropertyConstantQEMREFParserRuleCall_1_1_0_1() { return cSymboliclabelPropertyConstantQEMREFParserRuleCall_1_1_0_1; }

		//others?="others"
		public Assignment getOthersAssignment_1_2() { return cOthersAssignment_1_2; }

		//"others"
		public Keyword getOthersOthersKeyword_1_2_0() { return cOthersOthersKeyword_1_2_0; }
	}

	public class ConnectionErrorBehaviorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ConnectionErrorBehavior");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConnectionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cErrorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cBehaviorKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Action cConnectionErrorBehaviorAction_3 = (Action)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cUseKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cTransformationsKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cTypeTransformationSetAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cTypeTransformationSetTypeTransformationSetCrossReference_4_2_0 = (CrossReference)cTypeTransformationSetAssignment_4_2.eContents().get(0);
		private final RuleCall cTypeTransformationSetTypeTransformationSetQEMREFParserRuleCall_4_2_0_1 = (RuleCall)cTypeTransformationSetTypeTransformationSetCrossReference_4_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Assignment cConnectionErrorSourcesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cConnectionErrorSourcesConnectionErrorSourceParserRuleCall_5_0 = (RuleCall)cConnectionErrorSourcesAssignment_5.eContents().get(0);
		private final Keyword cEndKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cConnectionKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//ConnectionErrorBehavior:
		//
		//	"connection" "error" "behavior" {ConnectionErrorBehavior} ("use" "transformations"
		//
		//	typeTransformationSet=[TypeTransformationSet|QEMREF] ";")? connectionErrorSources+=ConnectionErrorSource* "end"
		//
		//	"connection" ";";
		public ParserRule getRule() { return rule; }

		//"connection" "error" "behavior" {ConnectionErrorBehavior} ("use" "transformations"
		//
		//typeTransformationSet=[TypeTransformationSet|QEMREF] ";")? connectionErrorSources+=ConnectionErrorSource* "end"
		//
		//"connection" ";"
		public Group getGroup() { return cGroup; }

		//"connection"
		public Keyword getConnectionKeyword_0() { return cConnectionKeyword_0; }

		//"error"
		public Keyword getErrorKeyword_1() { return cErrorKeyword_1; }

		//"behavior"
		public Keyword getBehaviorKeyword_2() { return cBehaviorKeyword_2; }

		//{ConnectionErrorBehavior}
		public Action getConnectionErrorBehaviorAction_3() { return cConnectionErrorBehaviorAction_3; }

		//("use" "transformations" typeTransformationSet=[TypeTransformationSet|QEMREF] ";")?
		public Group getGroup_4() { return cGroup_4; }

		//"use"
		public Keyword getUseKeyword_4_0() { return cUseKeyword_4_0; }

		//"transformations"
		public Keyword getTransformationsKeyword_4_1() { return cTransformationsKeyword_4_1; }

		//typeTransformationSet=[TypeTransformationSet|QEMREF]
		public Assignment getTypeTransformationSetAssignment_4_2() { return cTypeTransformationSetAssignment_4_2; }

		//[TypeTransformationSet|QEMREF]
		public CrossReference getTypeTransformationSetTypeTransformationSetCrossReference_4_2_0() { return cTypeTransformationSetTypeTransformationSetCrossReference_4_2_0; }

		//QEMREF
		public RuleCall getTypeTransformationSetTypeTransformationSetQEMREFParserRuleCall_4_2_0_1() { return cTypeTransformationSetTypeTransformationSetQEMREFParserRuleCall_4_2_0_1; }

		//";"
		public Keyword getSemicolonKeyword_4_3() { return cSemicolonKeyword_4_3; }

		//connectionErrorSources+=ConnectionErrorSource*
		public Assignment getConnectionErrorSourcesAssignment_5() { return cConnectionErrorSourcesAssignment_5; }

		//ConnectionErrorSource
		public RuleCall getConnectionErrorSourcesConnectionErrorSourceParserRuleCall_5_0() { return cConnectionErrorSourcesConnectionErrorSourceParserRuleCall_5_0; }

		//"end"
		public Keyword getEndKeyword_6() { return cEndKeyword_6; }

		//"connection"
		public Keyword getConnectionKeyword_7() { return cConnectionKeyword_7; }

		//";"
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
	}

	public class ConnectionErrorSourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ConnectionErrorSource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cErrorKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cSourceKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cConnectionAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final CrossReference cConnectionConnectionCrossReference_4_0_0 = (CrossReference)cConnectionAssignment_4_0.eContents().get(0);
		private final RuleCall cConnectionConnectionIDTerminalRuleCall_4_0_0_1 = (RuleCall)cConnectionConnectionCrossReference_4_0_0.eContents().get(1);
		private final Assignment cAllAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final Keyword cAllAllKeyword_4_1_0 = (Keyword)cAllAssignment_4_1.eContents().get(0);
		private final Assignment cTypeTokenConstraintAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTypeTokenConstraintTypeTokenConstraintParserRuleCall_5_0 = (RuleCall)cTypeTokenConstraintAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cWhenKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cFailureModeTypeAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cFailureModeTypeTypeSetConstructorParserRuleCall_6_1_0 = (RuleCall)cFailureModeTypeAssignment_6_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ConnectionErrorSource:
		//
		//	name=ID ":" "error" "source" (connection=[aadl2::Connection] | all?="all") typeTokenConstraint=TypeTokenConstraint?
		//
		//	("when" failureModeType=TypeSetConstructor)? ";";
		public ParserRule getRule() { return rule; }

		//name=ID ":" "error" "source" (connection=[aadl2::Connection] | all?="all") typeTokenConstraint=TypeTokenConstraint?
		//
		//("when" failureModeType=TypeSetConstructor)? ";"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"error"
		public Keyword getErrorKeyword_2() { return cErrorKeyword_2; }

		//"source"
		public Keyword getSourceKeyword_3() { return cSourceKeyword_3; }

		//connection=[aadl2::Connection] | all?="all"
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//connection=[aadl2::Connection]
		public Assignment getConnectionAssignment_4_0() { return cConnectionAssignment_4_0; }

		//[aadl2::Connection]
		public CrossReference getConnectionConnectionCrossReference_4_0_0() { return cConnectionConnectionCrossReference_4_0_0; }

		//ID
		public RuleCall getConnectionConnectionIDTerminalRuleCall_4_0_0_1() { return cConnectionConnectionIDTerminalRuleCall_4_0_0_1; }

		//all?="all"
		public Assignment getAllAssignment_4_1() { return cAllAssignment_4_1; }

		//"all"
		public Keyword getAllAllKeyword_4_1_0() { return cAllAllKeyword_4_1_0; }

		//typeTokenConstraint=TypeTokenConstraint?
		public Assignment getTypeTokenConstraintAssignment_5() { return cTypeTokenConstraintAssignment_5; }

		//TypeTokenConstraint
		public RuleCall getTypeTokenConstraintTypeTokenConstraintParserRuleCall_5_0() { return cTypeTokenConstraintTypeTokenConstraintParserRuleCall_5_0; }

		//("when" failureModeType=TypeSetConstructor)?
		public Group getGroup_6() { return cGroup_6; }

		//"when"
		public Keyword getWhenKeyword_6_0() { return cWhenKeyword_6_0; }

		//failureModeType=TypeSetConstructor
		public Assignment getFailureModeTypeAssignment_6_1() { return cFailureModeTypeAssignment_6_1; }

		//TypeSetConstructor
		public RuleCall getFailureModeTypeTypeSetConstructorParserRuleCall_6_1_0() { return cFailureModeTypeTypeSetConstructorParserRuleCall_6_1_0; }

		//";"
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}

	public class EBSMUseContextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EBSMUseContext");
		private final RuleCall cErrorModelSubclauseParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//EBSMUseContext:
		//
		//	ErrorModelSubclause;
		public ParserRule getRule() { return rule; }

		//ErrorModelSubclause
		public RuleCall getErrorModelSubclauseParserRuleCall() { return cErrorModelSubclauseParserRuleCall; }
	}

	public class TypeUseContextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeUseContext");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTypeTransformationSetParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTypeMappingSetParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cErrorBehaviorStateMachineParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cEBSMUseContextParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//TypeUseContext:
		//
		//	TypeTransformationSet | TypeMappingSet | ErrorBehaviorStateMachine | EBSMUseContext;
		public ParserRule getRule() { return rule; }

		//TypeTransformationSet | TypeMappingSet | ErrorBehaviorStateMachine | EBSMUseContext
		public Alternatives getAlternatives() { return cAlternatives; }

		//TypeTransformationSet
		public RuleCall getTypeTransformationSetParserRuleCall_0() { return cTypeTransformationSetParserRuleCall_0; }

		//TypeMappingSet
		public RuleCall getTypeMappingSetParserRuleCall_1() { return cTypeMappingSetParserRuleCall_1; }

		//ErrorBehaviorStateMachine
		public RuleCall getErrorBehaviorStateMachineParserRuleCall_2() { return cErrorBehaviorStateMachineParserRuleCall_2; }

		//EBSMUseContext
		public RuleCall getEBSMUseContextParserRuleCall_3() { return cEBSMUseContextParserRuleCall_3; }
	}

	public class ComponentErrorBehaviorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ComponentErrorBehavior");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cComponentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cErrorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cBehaviorKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Action cComponentErrorBehaviorAction_3 = (Action)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cUseKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cTransformationsKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cUseTransformationAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cUseTransformationTypeTransformationSetCrossReference_4_2_0 = (CrossReference)cUseTransformationAssignment_4_2.eContents().get(0);
		private final RuleCall cUseTransformationTypeTransformationSetQEMREFParserRuleCall_4_2_0_1 = (RuleCall)cUseTransformationTypeTransformationSetCrossReference_4_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cEventsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cEventsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cEventsErrorBehaviorEventParserRuleCall_5_1_0 = (RuleCall)cEventsAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cTransitionsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cTransitionsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cTransitionsErrorBehaviorTransitionParserRuleCall_6_1_0 = (RuleCall)cTransitionsAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cPropagationsKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cOutgoingPropagationConditionsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cOutgoingPropagationConditionsOutgoingPropagationConditionParserRuleCall_7_1_0 = (RuleCall)cOutgoingPropagationConditionsAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cDetectionsKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cErrorDetectionsAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cErrorDetectionsErrorDetectionParserRuleCall_8_1_0 = (RuleCall)cErrorDetectionsAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cModeKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cMappingsKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cErrorStateToModeMappingsAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cErrorStateToModeMappingsErrorStateToModeMappingParserRuleCall_9_2_0 = (RuleCall)cErrorStateToModeMappingsAssignment_9_2.eContents().get(0);
		private final Keyword cEndKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cComponentKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cSemicolonKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//ComponentErrorBehavior:
		//
		//	"component" "error" "behavior" {ComponentErrorBehavior} ("use" "transformations"
		//
		//	useTransformation=[TypeTransformationSet|QEMREF] ";")? ("events" events+=ErrorBehaviorEvent+)? ("transitions"
		//
		//	transitions+=ErrorBehaviorTransition+)? ("propagations"
		//
		//	outgoingPropagationConditions+=OutgoingPropagationCondition+)? ("detections" errorDetections+=ErrorDetection+)?
		//
		//	("mode" "mappings" errorStateToModeMappings+=ErrorStateToModeMapping+)? "end" "component" ";";
		public ParserRule getRule() { return rule; }

		//"component" "error" "behavior" {ComponentErrorBehavior} ("use" "transformations"
		//
		//useTransformation=[TypeTransformationSet|QEMREF] ";")? ("events" events+=ErrorBehaviorEvent+)? ("transitions"
		//
		//transitions+=ErrorBehaviorTransition+)? ("propagations" outgoingPropagationConditions+=OutgoingPropagationCondition+)?
		//
		//("detections" errorDetections+=ErrorDetection+)? ("mode" "mappings"
		//
		//errorStateToModeMappings+=ErrorStateToModeMapping+)? "end" "component" ";"
		public Group getGroup() { return cGroup; }

		//"component"
		public Keyword getComponentKeyword_0() { return cComponentKeyword_0; }

		//"error"
		public Keyword getErrorKeyword_1() { return cErrorKeyword_1; }

		//"behavior"
		public Keyword getBehaviorKeyword_2() { return cBehaviorKeyword_2; }

		//{ComponentErrorBehavior}
		public Action getComponentErrorBehaviorAction_3() { return cComponentErrorBehaviorAction_3; }

		//("use" "transformations" useTransformation=[TypeTransformationSet|QEMREF] ";")?
		public Group getGroup_4() { return cGroup_4; }

		//"use"
		public Keyword getUseKeyword_4_0() { return cUseKeyword_4_0; }

		//"transformations"
		public Keyword getTransformationsKeyword_4_1() { return cTransformationsKeyword_4_1; }

		//useTransformation=[TypeTransformationSet|QEMREF]
		public Assignment getUseTransformationAssignment_4_2() { return cUseTransformationAssignment_4_2; }

		//[TypeTransformationSet|QEMREF]
		public CrossReference getUseTransformationTypeTransformationSetCrossReference_4_2_0() { return cUseTransformationTypeTransformationSetCrossReference_4_2_0; }

		//QEMREF
		public RuleCall getUseTransformationTypeTransformationSetQEMREFParserRuleCall_4_2_0_1() { return cUseTransformationTypeTransformationSetQEMREFParserRuleCall_4_2_0_1; }

		//";"
		public Keyword getSemicolonKeyword_4_3() { return cSemicolonKeyword_4_3; }

		//("events" events+=ErrorBehaviorEvent+)?
		public Group getGroup_5() { return cGroup_5; }

		//"events"
		public Keyword getEventsKeyword_5_0() { return cEventsKeyword_5_0; }

		//events+=ErrorBehaviorEvent+
		public Assignment getEventsAssignment_5_1() { return cEventsAssignment_5_1; }

		//ErrorBehaviorEvent
		public RuleCall getEventsErrorBehaviorEventParserRuleCall_5_1_0() { return cEventsErrorBehaviorEventParserRuleCall_5_1_0; }

		//("transitions" transitions+=ErrorBehaviorTransition+)?
		public Group getGroup_6() { return cGroup_6; }

		//"transitions"
		public Keyword getTransitionsKeyword_6_0() { return cTransitionsKeyword_6_0; }

		//transitions+=ErrorBehaviorTransition+
		public Assignment getTransitionsAssignment_6_1() { return cTransitionsAssignment_6_1; }

		//ErrorBehaviorTransition
		public RuleCall getTransitionsErrorBehaviorTransitionParserRuleCall_6_1_0() { return cTransitionsErrorBehaviorTransitionParserRuleCall_6_1_0; }

		//("propagations" outgoingPropagationConditions+=OutgoingPropagationCondition+)?
		public Group getGroup_7() { return cGroup_7; }

		//"propagations"
		public Keyword getPropagationsKeyword_7_0() { return cPropagationsKeyword_7_0; }

		//outgoingPropagationConditions+=OutgoingPropagationCondition+
		public Assignment getOutgoingPropagationConditionsAssignment_7_1() { return cOutgoingPropagationConditionsAssignment_7_1; }

		//OutgoingPropagationCondition
		public RuleCall getOutgoingPropagationConditionsOutgoingPropagationConditionParserRuleCall_7_1_0() { return cOutgoingPropagationConditionsOutgoingPropagationConditionParserRuleCall_7_1_0; }

		//("detections" errorDetections+=ErrorDetection+)?
		public Group getGroup_8() { return cGroup_8; }

		//"detections"
		public Keyword getDetectionsKeyword_8_0() { return cDetectionsKeyword_8_0; }

		//errorDetections+=ErrorDetection+
		public Assignment getErrorDetectionsAssignment_8_1() { return cErrorDetectionsAssignment_8_1; }

		//ErrorDetection
		public RuleCall getErrorDetectionsErrorDetectionParserRuleCall_8_1_0() { return cErrorDetectionsErrorDetectionParserRuleCall_8_1_0; }

		//("mode" "mappings" errorStateToModeMappings+=ErrorStateToModeMapping+)?
		public Group getGroup_9() { return cGroup_9; }

		//"mode"
		public Keyword getModeKeyword_9_0() { return cModeKeyword_9_0; }

		//"mappings"
		public Keyword getMappingsKeyword_9_1() { return cMappingsKeyword_9_1; }

		//errorStateToModeMappings+=ErrorStateToModeMapping+
		public Assignment getErrorStateToModeMappingsAssignment_9_2() { return cErrorStateToModeMappingsAssignment_9_2; }

		//ErrorStateToModeMapping
		public RuleCall getErrorStateToModeMappingsErrorStateToModeMappingParserRuleCall_9_2_0() { return cErrorStateToModeMappingsErrorStateToModeMappingParserRuleCall_9_2_0; }

		//"end"
		public Keyword getEndKeyword_10() { return cEndKeyword_10; }

		//"component"
		public Keyword getComponentKeyword_11() { return cComponentKeyword_11; }

		//";"
		public Keyword getSemicolonKeyword_12() { return cSemicolonKeyword_12; }
	}

	public class ConditionExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ConditionExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cAndExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOrExpressionOperandsAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cOrKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cOperandsAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandsAndExpressionParserRuleCall_1_2_0 = (RuleCall)cOperandsAssignment_1_2.eContents().get(0);
		
		//// condition expression for component specific transitions 
		// // based on error events and incoming propagations
		//
		//
		//ConditionExpression:
		//
		//	AndExpression ({OrExpression.operands+=current} "or" operands+=AndExpression)*;
		public ParserRule getRule() { return rule; }

		//AndExpression ({OrExpression.operands+=current} "or" operands+=AndExpression)*
		public Group getGroup() { return cGroup; }

		//AndExpression
		public RuleCall getAndExpressionParserRuleCall_0() { return cAndExpressionParserRuleCall_0; }

		//({OrExpression.operands+=current} "or" operands+=AndExpression)*
		public Group getGroup_1() { return cGroup_1; }

		//{OrExpression.operands+=current}
		public Action getOrExpressionOperandsAction_1_0() { return cOrExpressionOperandsAction_1_0; }

		//"or"
		public Keyword getOrKeyword_1_1() { return cOrKeyword_1_1; }

		//operands+=AndExpression
		public Assignment getOperandsAssignment_1_2() { return cOperandsAssignment_1_2; }

		//AndExpression
		public RuleCall getOperandsAndExpressionParserRuleCall_1_2_0() { return cOperandsAndExpressionParserRuleCall_1_2_0; }
	}

	public class AndExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AndExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cConditionTermParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cAndExpressionOperandsAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cAndKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cOperandsAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandsConditionTermParserRuleCall_1_2_0 = (RuleCall)cOperandsAssignment_1_2.eContents().get(0);
		
		//AndExpression returns ConditionExpression:
		//
		//	ConditionTerm ({AndExpression.operands+=current} "and" operands+=ConditionTerm)*;
		public ParserRule getRule() { return rule; }

		//ConditionTerm ({AndExpression.operands+=current} "and" operands+=ConditionTerm)*
		public Group getGroup() { return cGroup; }

		//ConditionTerm
		public RuleCall getConditionTermParserRuleCall_0() { return cConditionTermParserRuleCall_0; }

		//({AndExpression.operands+=current} "and" operands+=ConditionTerm)*
		public Group getGroup_1() { return cGroup_1; }

		//{AndExpression.operands+=current}
		public Action getAndExpressionOperandsAction_1_0() { return cAndExpressionOperandsAction_1_0; }

		//"and"
		public Keyword getAndKeyword_1_1() { return cAndKeyword_1_1; }

		//operands+=ConditionTerm
		public Assignment getOperandsAssignment_1_2() { return cOperandsAssignment_1_2; }

		//ConditionTerm
		public RuleCall getOperandsConditionTermParserRuleCall_1_2_0() { return cOperandsConditionTermParserRuleCall_1_2_0; }
	}

	public class OrmoreExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OrmoreExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCountAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCountINTVALUEParserRuleCall_0_0 = (RuleCall)cCountAssignment_0.eContents().get(0);
		private final Keyword cOrmoreKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOperandsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOperandsConditionElementParserRuleCall_3_0 = (RuleCall)cOperandsAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cOperandsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cOperandsConditionElementParserRuleCall_4_1_0 = (RuleCall)cOperandsAssignment_4_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//OrmoreExpression:
		//
		//	count=INTVALUE "ormore" "(" operands+=ConditionElement ("," operands+=ConditionElement)* ")";
		public ParserRule getRule() { return rule; }

		//count=INTVALUE "ormore" "(" operands+=ConditionElement ("," operands+=ConditionElement)* ")"
		public Group getGroup() { return cGroup; }

		//count=INTVALUE
		public Assignment getCountAssignment_0() { return cCountAssignment_0; }

		//INTVALUE
		public RuleCall getCountINTVALUEParserRuleCall_0_0() { return cCountINTVALUEParserRuleCall_0_0; }

		//"ormore"
		public Keyword getOrmoreKeyword_1() { return cOrmoreKeyword_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//operands+=ConditionElement
		public Assignment getOperandsAssignment_3() { return cOperandsAssignment_3; }

		//ConditionElement
		public RuleCall getOperandsConditionElementParserRuleCall_3_0() { return cOperandsConditionElementParserRuleCall_3_0; }

		//("," operands+=ConditionElement)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//operands+=ConditionElement
		public Assignment getOperandsAssignment_4_1() { return cOperandsAssignment_4_1; }

		//ConditionElement
		public RuleCall getOperandsConditionElementParserRuleCall_4_1_0() { return cOperandsConditionElementParserRuleCall_4_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}

	public class OrlessExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OrlessExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCountAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCountINTVALUEParserRuleCall_0_0 = (RuleCall)cCountAssignment_0.eContents().get(0);
		private final Keyword cOrlessKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOperandsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOperandsConditionElementParserRuleCall_3_0 = (RuleCall)cOperandsAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cOperandsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cOperandsConditionElementParserRuleCall_4_1_0 = (RuleCall)cOperandsAssignment_4_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//OrlessExpression:
		//
		//	count=INTVALUE "orless" "(" operands+=ConditionElement ("," operands+=ConditionElement)* ")";
		public ParserRule getRule() { return rule; }

		//count=INTVALUE "orless" "(" operands+=ConditionElement ("," operands+=ConditionElement)* ")"
		public Group getGroup() { return cGroup; }

		//count=INTVALUE
		public Assignment getCountAssignment_0() { return cCountAssignment_0; }

		//INTVALUE
		public RuleCall getCountINTVALUEParserRuleCall_0_0() { return cCountINTVALUEParserRuleCall_0_0; }

		//"orless"
		public Keyword getOrlessKeyword_1() { return cOrlessKeyword_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//operands+=ConditionElement
		public Assignment getOperandsAssignment_3() { return cOperandsAssignment_3; }

		//ConditionElement
		public RuleCall getOperandsConditionElementParserRuleCall_3_0() { return cOperandsConditionElementParserRuleCall_3_0; }

		//("," operands+=ConditionElement)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//operands+=ConditionElement
		public Assignment getOperandsAssignment_4_1() { return cOperandsAssignment_4_1; }

		//ConditionElement
		public RuleCall getOperandsConditionElementParserRuleCall_4_1_0() { return cOperandsConditionElementParserRuleCall_4_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}

	public class ConditionTermElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ConditionTerm");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cConditionElementParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cOrmoreExpressionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cOrlessExpressionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final RuleCall cConditionExpressionParserRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		
		//ConditionTerm returns ConditionExpression:
		//
		//	ConditionElement | OrmoreExpression | OrlessExpression | "(" ConditionExpression ")";
		public ParserRule getRule() { return rule; }

		//ConditionElement | OrmoreExpression | OrlessExpression | "(" ConditionExpression ")"
		public Alternatives getAlternatives() { return cAlternatives; }

		//ConditionElement
		public RuleCall getConditionElementParserRuleCall_0() { return cConditionElementParserRuleCall_0; }

		//OrmoreExpression
		public RuleCall getOrmoreExpressionParserRuleCall_1() { return cOrmoreExpressionParserRuleCall_1; }

		//OrlessExpression
		public RuleCall getOrlessExpressionParserRuleCall_2() { return cOrlessExpressionParserRuleCall_2; }

		//"(" ConditionExpression ")"
		public Group getGroup_3() { return cGroup_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }

		//ConditionExpression
		public RuleCall getConditionExpressionParserRuleCall_3_1() { return cConditionExpressionParserRuleCall_3_1; }

		//")"
		public Keyword getRightParenthesisKeyword_3_2() { return cRightParenthesisKeyword_3_2; }
	}

	public class ConditionElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ConditionElement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIncomingAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cIncomingEventOrPropagationCrossReference_0_0 = (CrossReference)cIncomingAssignment_0.eContents().get(0);
		private final RuleCall cIncomingEventOrPropagationErrorPropagationPointParserRuleCall_0_0_1 = (RuleCall)cIncomingEventOrPropagationCrossReference_0_0.eContents().get(1);
		private final Assignment cConstraintAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cConstraintTypeTokenConstraintNoErrorParserRuleCall_1_0 = (RuleCall)cConstraintAssignment_1.eContents().get(0);
		
		//ConditionElement: // ( subcomponent=[Subcomponent|ID] '.' )* or ?
		// incoming=[EventOrPropagation|ErrorPropagationPoint]
		//
		//	constraint=TypeTokenConstraintNoError?;
		public ParserRule getRule() { return rule; }

		//// ( subcomponent=[Subcomponent|ID] '.' )* or ?
		// incoming=[EventOrPropagation|ErrorPropagationPoint]
		//
		//constraint=TypeTokenConstraintNoError?
		public Group getGroup() { return cGroup; }

		//// ( subcomponent=[Subcomponent|ID] '.' )* or ?
		// incoming=[EventOrPropagation|ErrorPropagationPoint]
		public Assignment getIncomingAssignment_0() { return cIncomingAssignment_0; }

		//[EventOrPropagation|ErrorPropagationPoint]
		public CrossReference getIncomingEventOrPropagationCrossReference_0_0() { return cIncomingEventOrPropagationCrossReference_0_0; }

		//ErrorPropagationPoint
		public RuleCall getIncomingEventOrPropagationErrorPropagationPointParserRuleCall_0_0_1() { return cIncomingEventOrPropagationErrorPropagationPointParserRuleCall_0_0_1; }

		//constraint=TypeTokenConstraintNoError?
		public Assignment getConstraintAssignment_1() { return cConstraintAssignment_1; }

		//TypeTokenConstraintNoError
		public RuleCall getConstraintTypeTokenConstraintNoErrorParserRuleCall_1_0() { return cConstraintTypeTokenConstraintNoErrorParserRuleCall_1_0; }
	}

	public class EventOrPropagationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EventOrPropagation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cErrorBehaviorEventParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cErrorPropagationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EventOrPropagation:
		//
		//	ErrorBehaviorEvent | ErrorPropagation;
		public ParserRule getRule() { return rule; }

		//ErrorBehaviorEvent | ErrorPropagation
		public Alternatives getAlternatives() { return cAlternatives; }

		//ErrorBehaviorEvent
		public RuleCall getErrorBehaviorEventParserRuleCall_0() { return cErrorBehaviorEventParserRuleCall_0; }

		//ErrorPropagation
		public RuleCall getErrorPropagationParserRuleCall_1() { return cErrorPropagationParserRuleCall_1; }
	}

	public class OutgoingPropagationConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OutgoingPropagationCondition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final Keyword cColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Assignment cStateAssignment_1_0_0 = (Assignment)cGroup_1_0.eContents().get(0);
		private final CrossReference cStateErrorBehaviorStateCrossReference_1_0_0_0 = (CrossReference)cStateAssignment_1_0_0.eContents().get(0);
		private final RuleCall cStateErrorBehaviorStateIDTerminalRuleCall_1_0_0_0_1 = (RuleCall)cStateErrorBehaviorStateCrossReference_1_0_0_0.eContents().get(1);
		private final Assignment cTypeTokenConstraintAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cTypeTokenConstraintTypeTokenConstraintParserRuleCall_1_0_1_0 = (RuleCall)cTypeTokenConstraintAssignment_1_0_1.eContents().get(0);
		private final Assignment cAllAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final Keyword cAllAllKeyword_1_1_0 = (Keyword)cAllAssignment_1_1.eContents().get(0);
		private final Keyword cHyphenMinusLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cConditionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cConditionConditionExpressionParserRuleCall_3_0 = (RuleCall)cConditionAssignment_3.eContents().get(0);
		private final Keyword cRightSquareBracketHyphenMinusGreaterThanSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Group cGroup_5_0 = (Group)cAlternatives_5.eContents().get(0);
		private final Assignment cOutgoingAssignment_5_0_0 = (Assignment)cGroup_5_0.eContents().get(0);
		private final CrossReference cOutgoingErrorPropagationCrossReference_5_0_0_0 = (CrossReference)cOutgoingAssignment_5_0_0.eContents().get(0);
		private final RuleCall cOutgoingErrorPropagationErrorPropagationPointParserRuleCall_5_0_0_0_1 = (RuleCall)cOutgoingErrorPropagationCrossReference_5_0_0_0.eContents().get(1);
		private final Assignment cTypeTokenAssignment_5_0_1 = (Assignment)cGroup_5_0.eContents().get(1);
		private final RuleCall cTypeTokenTypeTokenParserRuleCall_5_0_1_0 = (RuleCall)cTypeTokenAssignment_5_0_1.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final Assignment cOutgoingAssignment_5_1_0 = (Assignment)cGroup_5_1.eContents().get(0);
		private final CrossReference cOutgoingErrorPropagationCrossReference_5_1_0_0 = (CrossReference)cOutgoingAssignment_5_1_0.eContents().get(0);
		private final RuleCall cOutgoingErrorPropagationErrorPropagationPointParserRuleCall_5_1_0_0_1 = (RuleCall)cOutgoingErrorPropagationCrossReference_5_1_0_0.eContents().get(1);
		private final Assignment cMaskAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final Keyword cMaskMaskKeyword_5_1_1_0 = (Keyword)cMaskAssignment_5_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//OutgoingPropagationCondition:
		//
		//	(name=ID ":")? (state=[ErrorBehaviorState] typeTokenConstraint=TypeTokenConstraint? | all?="all") "-["
		//
		//	condition=ConditionExpression? "]->" (outgoing=[ErrorPropagation|ErrorPropagationPoint] typeToken=TypeToken? |
		//
		//	outgoing=[ErrorPropagation|ErrorPropagationPoint]? mask?="mask") ";";
		public ParserRule getRule() { return rule; }

		//(name=ID ":")? (state=[ErrorBehaviorState] typeTokenConstraint=TypeTokenConstraint? | all?="all") "-["
		//
		//condition=ConditionExpression? "]->" (outgoing=[ErrorPropagation|ErrorPropagationPoint] typeToken=TypeToken? |
		//
		//outgoing=[ErrorPropagation|ErrorPropagationPoint]? mask?="mask") ";"
		public Group getGroup() { return cGroup; }

		//(name=ID ":")?
		public Group getGroup_0() { return cGroup_0; }

		//name=ID
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0_0() { return cNameIDTerminalRuleCall_0_0_0; }

		//":"
		public Keyword getColonKeyword_0_1() { return cColonKeyword_0_1; }

		//state=[ErrorBehaviorState] typeTokenConstraint=TypeTokenConstraint? | all?="all"
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//state=[ErrorBehaviorState] typeTokenConstraint=TypeTokenConstraint?
		public Group getGroup_1_0() { return cGroup_1_0; }

		//state=[ErrorBehaviorState]
		public Assignment getStateAssignment_1_0_0() { return cStateAssignment_1_0_0; }

		//[ErrorBehaviorState]
		public CrossReference getStateErrorBehaviorStateCrossReference_1_0_0_0() { return cStateErrorBehaviorStateCrossReference_1_0_0_0; }

		//ID
		public RuleCall getStateErrorBehaviorStateIDTerminalRuleCall_1_0_0_0_1() { return cStateErrorBehaviorStateIDTerminalRuleCall_1_0_0_0_1; }

		//typeTokenConstraint=TypeTokenConstraint?
		public Assignment getTypeTokenConstraintAssignment_1_0_1() { return cTypeTokenConstraintAssignment_1_0_1; }

		//TypeTokenConstraint
		public RuleCall getTypeTokenConstraintTypeTokenConstraintParserRuleCall_1_0_1_0() { return cTypeTokenConstraintTypeTokenConstraintParserRuleCall_1_0_1_0; }

		//all?="all"
		public Assignment getAllAssignment_1_1() { return cAllAssignment_1_1; }

		//"all"
		public Keyword getAllAllKeyword_1_1_0() { return cAllAllKeyword_1_1_0; }

		//"-["
		public Keyword getHyphenMinusLeftSquareBracketKeyword_2() { return cHyphenMinusLeftSquareBracketKeyword_2; }

		//condition=ConditionExpression?
		public Assignment getConditionAssignment_3() { return cConditionAssignment_3; }

		//ConditionExpression
		public RuleCall getConditionConditionExpressionParserRuleCall_3_0() { return cConditionConditionExpressionParserRuleCall_3_0; }

		//"]->"
		public Keyword getRightSquareBracketHyphenMinusGreaterThanSignKeyword_4() { return cRightSquareBracketHyphenMinusGreaterThanSignKeyword_4; }

		//outgoing=[ErrorPropagation|ErrorPropagationPoint] typeToken=TypeToken? |
		//
		//outgoing=[ErrorPropagation|ErrorPropagationPoint]? mask?="mask"
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//outgoing=[ErrorPropagation|ErrorPropagationPoint] typeToken=TypeToken?
		public Group getGroup_5_0() { return cGroup_5_0; }

		//outgoing=[ErrorPropagation|ErrorPropagationPoint]
		public Assignment getOutgoingAssignment_5_0_0() { return cOutgoingAssignment_5_0_0; }

		//[ErrorPropagation|ErrorPropagationPoint]
		public CrossReference getOutgoingErrorPropagationCrossReference_5_0_0_0() { return cOutgoingErrorPropagationCrossReference_5_0_0_0; }

		//ErrorPropagationPoint
		public RuleCall getOutgoingErrorPropagationErrorPropagationPointParserRuleCall_5_0_0_0_1() { return cOutgoingErrorPropagationErrorPropagationPointParserRuleCall_5_0_0_0_1; }

		//typeToken=TypeToken?
		public Assignment getTypeTokenAssignment_5_0_1() { return cTypeTokenAssignment_5_0_1; }

		//TypeToken
		public RuleCall getTypeTokenTypeTokenParserRuleCall_5_0_1_0() { return cTypeTokenTypeTokenParserRuleCall_5_0_1_0; }

		//outgoing=[ErrorPropagation|ErrorPropagationPoint]? mask?="mask"
		public Group getGroup_5_1() { return cGroup_5_1; }

		//outgoing=[ErrorPropagation|ErrorPropagationPoint]?
		public Assignment getOutgoingAssignment_5_1_0() { return cOutgoingAssignment_5_1_0; }

		//[ErrorPropagation|ErrorPropagationPoint]
		public CrossReference getOutgoingErrorPropagationCrossReference_5_1_0_0() { return cOutgoingErrorPropagationCrossReference_5_1_0_0; }

		//ErrorPropagationPoint
		public RuleCall getOutgoingErrorPropagationErrorPropagationPointParserRuleCall_5_1_0_0_1() { return cOutgoingErrorPropagationErrorPropagationPointParserRuleCall_5_1_0_0_1; }

		//mask?="mask"
		public Assignment getMaskAssignment_5_1_1() { return cMaskAssignment_5_1_1; }

		//"mask"
		public Keyword getMaskMaskKeyword_5_1_1_0() { return cMaskMaskKeyword_5_1_1_0; }

		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class ErrorDetectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ErrorDetection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final Keyword cColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Assignment cStateAssignment_1_0_0 = (Assignment)cGroup_1_0.eContents().get(0);
		private final CrossReference cStateErrorBehaviorStateCrossReference_1_0_0_0 = (CrossReference)cStateAssignment_1_0_0.eContents().get(0);
		private final RuleCall cStateErrorBehaviorStateIDTerminalRuleCall_1_0_0_0_1 = (RuleCall)cStateErrorBehaviorStateCrossReference_1_0_0_0.eContents().get(1);
		private final Assignment cTypeTokenConstraintAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cTypeTokenConstraintTypeTokenConstraintParserRuleCall_1_0_1_0 = (RuleCall)cTypeTokenConstraintAssignment_1_0_1.eContents().get(0);
		private final Assignment cAllAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final Keyword cAllAllKeyword_1_1_0 = (Keyword)cAllAssignment_1_1.eContents().get(0);
		private final Keyword cHyphenMinusLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cConditionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cConditionConditionExpressionParserRuleCall_3_0 = (RuleCall)cConditionAssignment_3.eContents().get(0);
		private final Keyword cRightSquareBracketHyphenMinusGreaterThanSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cInternalDetectionPortAssignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final RuleCall cInternalDetectionPortInternalPortParserRuleCall_5_0_0 = (RuleCall)cInternalDetectionPortAssignment_5_0.eContents().get(0);
		private final Assignment cDetectionReportingPortAssignment_5_1 = (Assignment)cAlternatives_5.eContents().get(1);
		private final CrossReference cDetectionReportingPortPortCrossReference_5_1_0 = (CrossReference)cDetectionReportingPortAssignment_5_1.eContents().get(0);
		private final RuleCall cDetectionReportingPortPortIDTerminalRuleCall_5_1_0_1 = (RuleCall)cDetectionReportingPortPortCrossReference_5_1_0.eContents().get(1);
		private final Keyword cExclamationMarkKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cErrorCodeAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cErrorCodeErrorCodeValueParserRuleCall_7_0 = (RuleCall)cErrorCodeAssignment_7.eContents().get(0);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//ErrorDetection:
		//
		//	(name=ID ":")? (state=[ErrorBehaviorState] typeTokenConstraint=TypeTokenConstraint? | all?="all") "-["
		//
		//	condition=ConditionExpression? "]->" (internalDetectionPort=InternalPort | detectionReportingPort=[aadl2::Port]) "!"
		//
		//	errorCode=ErrorCodeValue? ";";
		public ParserRule getRule() { return rule; }

		//(name=ID ":")? (state=[ErrorBehaviorState] typeTokenConstraint=TypeTokenConstraint? | all?="all") "-["
		//
		//condition=ConditionExpression? "]->" (internalDetectionPort=InternalPort | detectionReportingPort=[aadl2::Port]) "!"
		//
		//errorCode=ErrorCodeValue? ";"
		public Group getGroup() { return cGroup; }

		//(name=ID ":")?
		public Group getGroup_0() { return cGroup_0; }

		//name=ID
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0_0() { return cNameIDTerminalRuleCall_0_0_0; }

		//":"
		public Keyword getColonKeyword_0_1() { return cColonKeyword_0_1; }

		//state=[ErrorBehaviorState] typeTokenConstraint=TypeTokenConstraint? | all?="all"
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//state=[ErrorBehaviorState] typeTokenConstraint=TypeTokenConstraint?
		public Group getGroup_1_0() { return cGroup_1_0; }

		//state=[ErrorBehaviorState]
		public Assignment getStateAssignment_1_0_0() { return cStateAssignment_1_0_0; }

		//[ErrorBehaviorState]
		public CrossReference getStateErrorBehaviorStateCrossReference_1_0_0_0() { return cStateErrorBehaviorStateCrossReference_1_0_0_0; }

		//ID
		public RuleCall getStateErrorBehaviorStateIDTerminalRuleCall_1_0_0_0_1() { return cStateErrorBehaviorStateIDTerminalRuleCall_1_0_0_0_1; }

		//typeTokenConstraint=TypeTokenConstraint?
		public Assignment getTypeTokenConstraintAssignment_1_0_1() { return cTypeTokenConstraintAssignment_1_0_1; }

		//TypeTokenConstraint
		public RuleCall getTypeTokenConstraintTypeTokenConstraintParserRuleCall_1_0_1_0() { return cTypeTokenConstraintTypeTokenConstraintParserRuleCall_1_0_1_0; }

		//all?="all"
		public Assignment getAllAssignment_1_1() { return cAllAssignment_1_1; }

		//"all"
		public Keyword getAllAllKeyword_1_1_0() { return cAllAllKeyword_1_1_0; }

		//"-["
		public Keyword getHyphenMinusLeftSquareBracketKeyword_2() { return cHyphenMinusLeftSquareBracketKeyword_2; }

		//condition=ConditionExpression?
		public Assignment getConditionAssignment_3() { return cConditionAssignment_3; }

		//ConditionExpression
		public RuleCall getConditionConditionExpressionParserRuleCall_3_0() { return cConditionConditionExpressionParserRuleCall_3_0; }

		//"]->"
		public Keyword getRightSquareBracketHyphenMinusGreaterThanSignKeyword_4() { return cRightSquareBracketHyphenMinusGreaterThanSignKeyword_4; }

		//internalDetectionPort=InternalPort | detectionReportingPort=[aadl2::Port]
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//internalDetectionPort=InternalPort
		public Assignment getInternalDetectionPortAssignment_5_0() { return cInternalDetectionPortAssignment_5_0; }

		//InternalPort
		public RuleCall getInternalDetectionPortInternalPortParserRuleCall_5_0_0() { return cInternalDetectionPortInternalPortParserRuleCall_5_0_0; }

		//detectionReportingPort=[aadl2::Port]
		public Assignment getDetectionReportingPortAssignment_5_1() { return cDetectionReportingPortAssignment_5_1; }

		//[aadl2::Port]
		public CrossReference getDetectionReportingPortPortCrossReference_5_1_0() { return cDetectionReportingPortPortCrossReference_5_1_0; }

		//ID
		public RuleCall getDetectionReportingPortPortIDTerminalRuleCall_5_1_0_1() { return cDetectionReportingPortPortIDTerminalRuleCall_5_1_0_1; }

		//"!"
		public Keyword getExclamationMarkKeyword_6() { return cExclamationMarkKeyword_6; }

		//errorCode=ErrorCodeValue?
		public Assignment getErrorCodeAssignment_7() { return cErrorCodeAssignment_7; }

		//ErrorCodeValue
		public RuleCall getErrorCodeErrorCodeValueParserRuleCall_7_0() { return cErrorCodeErrorCodeValueParserRuleCall_7_0; }

		//";"
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
	}

	public class ErrorCodeValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ErrorCodeValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cIntValueAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cIntValueINTEGER_LITTerminalRuleCall_0_0 = (RuleCall)cIntValueAssignment_0.eContents().get(0);
		private final Assignment cConstantAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final CrossReference cConstantPropertyConstantCrossReference_1_0 = (CrossReference)cConstantAssignment_1.eContents().get(0);
		private final RuleCall cConstantPropertyConstantQPREFParserRuleCall_1_0_1 = (RuleCall)cConstantPropertyConstantCrossReference_1_0.eContents().get(1);
		private final Assignment cEnumLiteralAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cEnumLiteralSTRINGTerminalRuleCall_2_0 = (RuleCall)cEnumLiteralAssignment_2.eContents().get(0);
		
		//ErrorCodeValue:
		//
		//	intValue=INTEGER_LIT | constant=[aadl2::PropertyConstant|QPREF] | enumLiteral=STRING;
		public ParserRule getRule() { return rule; }

		//intValue=INTEGER_LIT | constant=[aadl2::PropertyConstant|QPREF] | enumLiteral=STRING
		public Alternatives getAlternatives() { return cAlternatives; }

		//intValue=INTEGER_LIT
		public Assignment getIntValueAssignment_0() { return cIntValueAssignment_0; }

		//INTEGER_LIT
		public RuleCall getIntValueINTEGER_LITTerminalRuleCall_0_0() { return cIntValueINTEGER_LITTerminalRuleCall_0_0; }

		//constant=[aadl2::PropertyConstant|QPREF]
		public Assignment getConstantAssignment_1() { return cConstantAssignment_1; }

		//[aadl2::PropertyConstant|QPREF]
		public CrossReference getConstantPropertyConstantCrossReference_1_0() { return cConstantPropertyConstantCrossReference_1_0; }

		//QPREF
		public RuleCall getConstantPropertyConstantQPREFParserRuleCall_1_0_1() { return cConstantPropertyConstantQPREFParserRuleCall_1_0_1; }

		//enumLiteral=STRING
		public Assignment getEnumLiteralAssignment_2() { return cEnumLiteralAssignment_2; }

		//STRING
		public RuleCall getEnumLiteralSTRINGTerminalRuleCall_2_0() { return cEnumLiteralSTRINGTerminalRuleCall_2_0; }
	}

	public class ErrorStateToModeMappingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ErrorStateToModeMapping");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cErrorStateAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cErrorStateErrorBehaviorStateCrossReference_0_0 = (CrossReference)cErrorStateAssignment_0.eContents().get(0);
		private final RuleCall cErrorStateErrorBehaviorStateIDTerminalRuleCall_0_0_1 = (RuleCall)cErrorStateErrorBehaviorStateCrossReference_0_0.eContents().get(1);
		private final Keyword cInKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cModesKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMappedModesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cMappedModesModeCrossReference_4_0 = (CrossReference)cMappedModesAssignment_4.eContents().get(0);
		private final RuleCall cMappedModesModeIDTerminalRuleCall_4_0_1 = (RuleCall)cMappedModesModeCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cMappedModesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cMappedModesModeCrossReference_5_1_0 = (CrossReference)cMappedModesAssignment_5_1.eContents().get(0);
		private final RuleCall cMappedModesModeIDTerminalRuleCall_5_1_0_1 = (RuleCall)cMappedModesModeCrossReference_5_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ErrorStateToModeMapping:
		//
		//	errorState=[ErrorBehaviorState] "in" "modes" "(" mappedModes+=[aadl2::Mode] ("," mappedModes+=[aadl2::Mode])* ")"
		//
		//	";";
		public ParserRule getRule() { return rule; }

		//errorState=[ErrorBehaviorState] "in" "modes" "(" mappedModes+=[aadl2::Mode] ("," mappedModes+=[aadl2::Mode])* ")" ";"
		public Group getGroup() { return cGroup; }

		//errorState=[ErrorBehaviorState]
		public Assignment getErrorStateAssignment_0() { return cErrorStateAssignment_0; }

		//[ErrorBehaviorState]
		public CrossReference getErrorStateErrorBehaviorStateCrossReference_0_0() { return cErrorStateErrorBehaviorStateCrossReference_0_0; }

		//ID
		public RuleCall getErrorStateErrorBehaviorStateIDTerminalRuleCall_0_0_1() { return cErrorStateErrorBehaviorStateIDTerminalRuleCall_0_0_1; }

		//"in"
		public Keyword getInKeyword_1() { return cInKeyword_1; }

		//"modes"
		public Keyword getModesKeyword_2() { return cModesKeyword_2; }

		//"("
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }

		//mappedModes+=[aadl2::Mode]
		public Assignment getMappedModesAssignment_4() { return cMappedModesAssignment_4; }

		//[aadl2::Mode]
		public CrossReference getMappedModesModeCrossReference_4_0() { return cMappedModesModeCrossReference_4_0; }

		//ID
		public RuleCall getMappedModesModeIDTerminalRuleCall_4_0_1() { return cMappedModesModeIDTerminalRuleCall_4_0_1; }

		//("," mappedModes+=[aadl2::Mode])*
		public Group getGroup_5() { return cGroup_5; }

		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//mappedModes+=[aadl2::Mode]
		public Assignment getMappedModesAssignment_5_1() { return cMappedModesAssignment_5_1; }

		//[aadl2::Mode]
		public CrossReference getMappedModesModeCrossReference_5_1_0() { return cMappedModesModeCrossReference_5_1_0; }

		//ID
		public RuleCall getMappedModesModeIDTerminalRuleCall_5_1_0_1() { return cMappedModesModeIDTerminalRuleCall_5_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }

		//";"
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}

	public class InternalPortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InternalPort");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSelfKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//InternalPort returns aadl2::InternalEvent:
		//
		//	"self" "." name=ID;
		public ParserRule getRule() { return rule; }

		//"self" "." name=ID
		public Group getGroup() { return cGroup; }

		//"self"
		public Keyword getSelfKeyword_0() { return cSelfKeyword_0; }

		//"."
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}

	public class CompositeErrorBehaviorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CompositeErrorBehavior");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCompositeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cErrorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cBehaviorKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Action cCompositeErrorBehaviorAction_3 = (Action)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cStatesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cStatesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cStatesCompositeStateParserRuleCall_4_1_0 = (RuleCall)cStatesAssignment_4_1.eContents().get(0);
		private final Keyword cEndKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cCompositeKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//CompositeErrorBehavior:
		//
		//	"composite" "error" "behavior" {CompositeErrorBehavior} ("states" states+=CompositeState+)? "end" "composite" ";";
		public ParserRule getRule() { return rule; }

		//"composite" "error" "behavior" {CompositeErrorBehavior} ("states" states+=CompositeState+)? "end" "composite" ";"
		public Group getGroup() { return cGroup; }

		//"composite"
		public Keyword getCompositeKeyword_0() { return cCompositeKeyword_0; }

		//"error"
		public Keyword getErrorKeyword_1() { return cErrorKeyword_1; }

		//"behavior"
		public Keyword getBehaviorKeyword_2() { return cBehaviorKeyword_2; }

		//{CompositeErrorBehavior}
		public Action getCompositeErrorBehaviorAction_3() { return cCompositeErrorBehaviorAction_3; }

		//("states" states+=CompositeState+)?
		public Group getGroup_4() { return cGroup_4; }

		//"states"
		public Keyword getStatesKeyword_4_0() { return cStatesKeyword_4_0; }

		//states+=CompositeState+
		public Assignment getStatesAssignment_4_1() { return cStatesAssignment_4_1; }

		//CompositeState
		public RuleCall getStatesCompositeStateParserRuleCall_4_1_0() { return cStatesCompositeStateParserRuleCall_4_1_0; }

		//"end"
		public Keyword getEndKeyword_5() { return cEndKeyword_5; }

		//"composite"
		public Keyword getCompositeKeyword_6() { return cCompositeKeyword_6; }

		//";"
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}

	public class CompositeStateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CompositeState");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cConditionAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cConditionSConditionExpressionParserRuleCall_1_0_0 = (RuleCall)cConditionAssignment_1_0.eContents().get(0);
		private final Assignment cOthersAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final Keyword cOthersOthersKeyword_1_1_0 = (Keyword)cOthersAssignment_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketHyphenMinusGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cStateAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cStateErrorBehaviorStateCrossReference_3_0 = (CrossReference)cStateAssignment_3.eContents().get(0);
		private final RuleCall cStateErrorBehaviorStateIDTerminalRuleCall_3_0_1 = (RuleCall)cStateErrorBehaviorStateCrossReference_3_0.eContents().get(1);
		private final Assignment cTypedTokenAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypedTokenTypeTokenParserRuleCall_4_0 = (RuleCall)cTypedTokenAssignment_4.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//CompositeState:
		//
		//	"[" (condition=SConditionExpression | others?="others") "]->" state=[ErrorBehaviorState] typedToken=TypeToken? ";";
		public ParserRule getRule() { return rule; }

		//"[" (condition=SConditionExpression | others?="others") "]->" state=[ErrorBehaviorState] typedToken=TypeToken? ";"
		public Group getGroup() { return cGroup; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }

		//condition=SConditionExpression | others?="others"
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//condition=SConditionExpression
		public Assignment getConditionAssignment_1_0() { return cConditionAssignment_1_0; }

		//SConditionExpression
		public RuleCall getConditionSConditionExpressionParserRuleCall_1_0_0() { return cConditionSConditionExpressionParserRuleCall_1_0_0; }

		//others?="others"
		public Assignment getOthersAssignment_1_1() { return cOthersAssignment_1_1; }

		//"others"
		public Keyword getOthersOthersKeyword_1_1_0() { return cOthersOthersKeyword_1_1_0; }

		//"]->"
		public Keyword getRightSquareBracketHyphenMinusGreaterThanSignKeyword_2() { return cRightSquareBracketHyphenMinusGreaterThanSignKeyword_2; }

		//state=[ErrorBehaviorState]
		public Assignment getStateAssignment_3() { return cStateAssignment_3; }

		//[ErrorBehaviorState]
		public CrossReference getStateErrorBehaviorStateCrossReference_3_0() { return cStateErrorBehaviorStateCrossReference_3_0; }

		//ID
		public RuleCall getStateErrorBehaviorStateIDTerminalRuleCall_3_0_1() { return cStateErrorBehaviorStateIDTerminalRuleCall_3_0_1; }

		//typedToken=TypeToken?
		public Assignment getTypedTokenAssignment_4() { return cTypedTokenAssignment_4; }

		//TypeToken
		public RuleCall getTypedTokenTypeTokenParserRuleCall_4_0() { return cTypedTokenTypeTokenParserRuleCall_4_0; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class SConditionExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SConditionExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cSAndExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cSOrExpressionOperandsAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cOrKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cOperandsAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandsSAndExpressionParserRuleCall_1_2_0 = (RuleCall)cOperandsAssignment_1_2.eContents().get(0);
		
		//// condition expressions for composite states
		// // based on states only  
		// SConditionExpression returns
		//
		//ConditionExpression:
		//
		//	SAndExpression ({SOrExpression.operands+=current} "or" operands+=SAndExpression)*;
		public ParserRule getRule() { return rule; }

		//SAndExpression ({SOrExpression.operands+=current} "or" operands+=SAndExpression)*
		public Group getGroup() { return cGroup; }

		//SAndExpression
		public RuleCall getSAndExpressionParserRuleCall_0() { return cSAndExpressionParserRuleCall_0; }

		//({SOrExpression.operands+=current} "or" operands+=SAndExpression)*
		public Group getGroup_1() { return cGroup_1; }

		//{SOrExpression.operands+=current}
		public Action getSOrExpressionOperandsAction_1_0() { return cSOrExpressionOperandsAction_1_0; }

		//"or"
		public Keyword getOrKeyword_1_1() { return cOrKeyword_1_1; }

		//operands+=SAndExpression
		public Assignment getOperandsAssignment_1_2() { return cOperandsAssignment_1_2; }

		//SAndExpression
		public RuleCall getOperandsSAndExpressionParserRuleCall_1_2_0() { return cOperandsSAndExpressionParserRuleCall_1_2_0; }
	}

	public class SAndExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SAndExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cSConditionTermParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cSAndExpressionOperandsAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cAndKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cOperandsAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandsSConditionTermParserRuleCall_1_2_0 = (RuleCall)cOperandsAssignment_1_2.eContents().get(0);
		
		//SAndExpression returns ConditionExpression:
		//
		//	SConditionTerm ({SAndExpression.operands+=current} "and" operands+=SConditionTerm)*;
		public ParserRule getRule() { return rule; }

		//SConditionTerm ({SAndExpression.operands+=current} "and" operands+=SConditionTerm)*
		public Group getGroup() { return cGroup; }

		//SConditionTerm
		public RuleCall getSConditionTermParserRuleCall_0() { return cSConditionTermParserRuleCall_0; }

		//({SAndExpression.operands+=current} "and" operands+=SConditionTerm)*
		public Group getGroup_1() { return cGroup_1; }

		//{SAndExpression.operands+=current}
		public Action getSAndExpressionOperandsAction_1_0() { return cSAndExpressionOperandsAction_1_0; }

		//"and"
		public Keyword getAndKeyword_1_1() { return cAndKeyword_1_1; }

		//operands+=SConditionTerm
		public Assignment getOperandsAssignment_1_2() { return cOperandsAssignment_1_2; }

		//SConditionTerm
		public RuleCall getOperandsSConditionTermParserRuleCall_1_2_0() { return cOperandsSConditionTermParserRuleCall_1_2_0; }
	}

	public class SOrmoreExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SOrmoreExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCountAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCountINTVALUEParserRuleCall_0_0 = (RuleCall)cCountAssignment_0.eContents().get(0);
		private final Keyword cOrmoreKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOperandsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOperandsSConditionElementParserRuleCall_3_0 = (RuleCall)cOperandsAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cOperandsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cOperandsSConditionElementParserRuleCall_4_1_0 = (RuleCall)cOperandsAssignment_4_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//SOrmoreExpression returns OrmoreExpression:
		//
		//	count=INTVALUE "ormore" "(" operands+=SConditionElement ("," operands+=SConditionElement)* ")";
		public ParserRule getRule() { return rule; }

		//count=INTVALUE "ormore" "(" operands+=SConditionElement ("," operands+=SConditionElement)* ")"
		public Group getGroup() { return cGroup; }

		//count=INTVALUE
		public Assignment getCountAssignment_0() { return cCountAssignment_0; }

		//INTVALUE
		public RuleCall getCountINTVALUEParserRuleCall_0_0() { return cCountINTVALUEParserRuleCall_0_0; }

		//"ormore"
		public Keyword getOrmoreKeyword_1() { return cOrmoreKeyword_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//operands+=SConditionElement
		public Assignment getOperandsAssignment_3() { return cOperandsAssignment_3; }

		//SConditionElement
		public RuleCall getOperandsSConditionElementParserRuleCall_3_0() { return cOperandsSConditionElementParserRuleCall_3_0; }

		//("," operands+=SConditionElement)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//operands+=SConditionElement
		public Assignment getOperandsAssignment_4_1() { return cOperandsAssignment_4_1; }

		//SConditionElement
		public RuleCall getOperandsSConditionElementParserRuleCall_4_1_0() { return cOperandsSConditionElementParserRuleCall_4_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}

	public class SOrlessExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SOrlessExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCountAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCountINTVALUEParserRuleCall_0_0 = (RuleCall)cCountAssignment_0.eContents().get(0);
		private final Keyword cOrlessKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOperandsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOperandsSConditionElementParserRuleCall_3_0 = (RuleCall)cOperandsAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cOperandsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cOperandsSConditionElementParserRuleCall_4_1_0 = (RuleCall)cOperandsAssignment_4_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//SOrlessExpression returns OrlessExpression:
		//
		//	count=INTVALUE "orless" "(" operands+=SConditionElement ("," operands+=SConditionElement)* ")";
		public ParserRule getRule() { return rule; }

		//count=INTVALUE "orless" "(" operands+=SConditionElement ("," operands+=SConditionElement)* ")"
		public Group getGroup() { return cGroup; }

		//count=INTVALUE
		public Assignment getCountAssignment_0() { return cCountAssignment_0; }

		//INTVALUE
		public RuleCall getCountINTVALUEParserRuleCall_0_0() { return cCountINTVALUEParserRuleCall_0_0; }

		//"orless"
		public Keyword getOrlessKeyword_1() { return cOrlessKeyword_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//operands+=SConditionElement
		public Assignment getOperandsAssignment_3() { return cOperandsAssignment_3; }

		//SConditionElement
		public RuleCall getOperandsSConditionElementParserRuleCall_3_0() { return cOperandsSConditionElementParserRuleCall_3_0; }

		//("," operands+=SConditionElement)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//operands+=SConditionElement
		public Assignment getOperandsAssignment_4_1() { return cOperandsAssignment_4_1; }

		//SConditionElement
		public RuleCall getOperandsSConditionElementParserRuleCall_4_1_0() { return cOperandsSConditionElementParserRuleCall_4_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}

	public class SConditionTermElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SConditionTerm");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSConditionElementParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSOrmoreExpressionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSOrlessExpressionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final RuleCall cSConditionExpressionParserRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		
		//SConditionTerm returns ConditionExpression:
		//
		//	SConditionElement | SOrmoreExpression | SOrlessExpression | "(" SConditionExpression ")";
		public ParserRule getRule() { return rule; }

		//SConditionElement | SOrmoreExpression | SOrlessExpression | "(" SConditionExpression ")"
		public Alternatives getAlternatives() { return cAlternatives; }

		//SConditionElement
		public RuleCall getSConditionElementParserRuleCall_0() { return cSConditionElementParserRuleCall_0; }

		//SOrmoreExpression
		public RuleCall getSOrmoreExpressionParserRuleCall_1() { return cSOrmoreExpressionParserRuleCall_1; }

		//SOrlessExpression
		public RuleCall getSOrlessExpressionParserRuleCall_2() { return cSOrlessExpressionParserRuleCall_2; }

		//"(" SConditionExpression ")"
		public Group getGroup_3() { return cGroup_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }

		//SConditionExpression
		public RuleCall getSConditionExpressionParserRuleCall_3_1() { return cSConditionExpressionParserRuleCall_3_1; }

		//")"
		public Keyword getRightParenthesisKeyword_3_2() { return cRightParenthesisKeyword_3_2; }
	}

	public class SConditionElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SConditionElement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cSubcomponentsAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cSubcomponentsSubcomponentElementParserRuleCall_0_0_0 = (RuleCall)cSubcomponentsAssignment_0_0.eContents().get(0);
		private final Keyword cFullStopKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cReferenceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cReferenceErrorBehaviorStateCrossReference_1_0 = (CrossReference)cReferenceAssignment_1.eContents().get(0);
		private final RuleCall cReferenceErrorBehaviorStateIDTerminalRuleCall_1_0_1 = (RuleCall)cReferenceErrorBehaviorStateCrossReference_1_0.eContents().get(1);
		private final Assignment cConstraintAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cConstraintTypeTokenConstraintParserRuleCall_2_0 = (RuleCall)cConstraintAssignment_2.eContents().get(0);
		
		//SConditionElement returns ConditionElement:
		//
		//	(subcomponents+=SubcomponentElement ".")+ reference=[ErrorBehaviorState] constraint=TypeTokenConstraint?;
		public ParserRule getRule() { return rule; }

		//(subcomponents+=SubcomponentElement ".")+ reference=[ErrorBehaviorState] constraint=TypeTokenConstraint?
		public Group getGroup() { return cGroup; }

		//(subcomponents+=SubcomponentElement ".")+
		public Group getGroup_0() { return cGroup_0; }

		//subcomponents+=SubcomponentElement
		public Assignment getSubcomponentsAssignment_0_0() { return cSubcomponentsAssignment_0_0; }

		//SubcomponentElement
		public RuleCall getSubcomponentsSubcomponentElementParserRuleCall_0_0_0() { return cSubcomponentsSubcomponentElementParserRuleCall_0_0_0; }

		//"."
		public Keyword getFullStopKeyword_0_1() { return cFullStopKeyword_0_1; }

		//reference=[ErrorBehaviorState]
		public Assignment getReferenceAssignment_1() { return cReferenceAssignment_1; }

		//[ErrorBehaviorState]
		public CrossReference getReferenceErrorBehaviorStateCrossReference_1_0() { return cReferenceErrorBehaviorStateCrossReference_1_0; }

		//ID
		public RuleCall getReferenceErrorBehaviorStateIDTerminalRuleCall_1_0_1() { return cReferenceErrorBehaviorStateIDTerminalRuleCall_1_0_1; }

		//constraint=TypeTokenConstraint?
		public Assignment getConstraintAssignment_2() { return cConstraintAssignment_2; }

		//TypeTokenConstraint
		public RuleCall getConstraintTypeTokenConstraintParserRuleCall_2_0() { return cConstraintTypeTokenConstraintParserRuleCall_2_0; }
	}

	public class SubcomponentElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SubcomponentElement");
		private final Assignment cSubcomponentAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cSubcomponentSubcomponentCrossReference_0 = (CrossReference)cSubcomponentAssignment.eContents().get(0);
		private final RuleCall cSubcomponentSubcomponentIDTerminalRuleCall_0_1 = (RuleCall)cSubcomponentSubcomponentCrossReference_0.eContents().get(1);
		
		//SubcomponentElement:
		//
		//	subcomponent=[aadl2::Subcomponent];
		public ParserRule getRule() { return rule; }

		//subcomponent=[aadl2::Subcomponent]
		public Assignment getSubcomponentAssignment() { return cSubcomponentAssignment; }

		//[aadl2::Subcomponent]
		public CrossReference getSubcomponentSubcomponentCrossReference_0() { return cSubcomponentSubcomponentCrossReference_0; }

		//ID
		public RuleCall getSubcomponentSubcomponentIDTerminalRuleCall_0_1() { return cSubcomponentSubcomponentIDTerminalRuleCall_0_1; }
	}

	public class QEMREFElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QEMREF");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cColonColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		////('.' ID )?;
		// QEMREF:
		//
		//	(ID "::")* ID;
		public ParserRule getRule() { return rule; }

		//(ID "::")* ID
		public Group getGroup() { return cGroup; }

		//(ID "::")*
		public Group getGroup_0() { return cGroup_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_0_0() { return cIDTerminalRuleCall_0_0; }

		//"::"
		public Keyword getColonColonKeyword_0_1() { return cColonColonKeyword_0_1; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	
	
	private ErrorModelGrammarRootElements pErrorModelGrammarRoot;
	private AnnexLibraryElements pAnnexLibrary;
	private AnnexSubclauseElements pAnnexSubclause;
	private NamedElementElements pNamedElement;
	private ModalElementElements pModalElement;
	private ElementElements pElement;
	private ErrorModelSubclauseElements pErrorModelSubclause;
	private ErrorModelLibraryElements pErrorModelLibrary;
	private ErrorTypesElements pErrorTypes;
	private TypeDefinitionElements pTypeDefinition;
	private TypeAliasElements pTypeAlias;
	private TypeSetDefinitionElements pTypeSetDefinition;
	private TypeSetConstructorElements pTypeSetConstructor;
	private TypeSetReferenceElements pTypeSetReference;
	private TypeSetAliasElements pTypeSetAlias;
	private ElementErrorTypeElements pElementErrorType;
	private NoErrorElements pNoError;
	private TypeTokenElements pTypeToken;
	private TypeTokenConstraintElements pTypeTokenConstraint;
	private TypeTokenConstraintNoErrorElements pTypeTokenConstraintNoError;
	private TypeTransformationSetElements pTypeTransformationSet;
	private TypeTransformationElements pTypeTransformation;
	private TypeMappingSetElements pTypeMappingSet;
	private TypeMappingElements pTypeMapping;
	private ErrorPropagationsElements pErrorPropagations;
	private ErrorPropagationElements pErrorPropagation;
	private FeatureReferenceElements pFeatureReference;
	private PropagationDirectionElements pPropagationDirection;
	private PropagationKindElements pPropagationKind;
	private ErrorFlowElements pErrorFlow;
	private ErrorSourceElements pErrorSource;
	private ErrorBehaviorStateOrTypeSetElements pErrorBehaviorStateOrTypeSet;
	private ErrorSinkElements pErrorSink;
	private ErrorPathElements pErrorPath;
	private ErrorPropagationPointElements pErrorPropagationPoint;
	private PropagationPathsElements pPropagationPaths;
	private PropagationPointElements pPropagationPoint;
	private PropagationPointConnectionElements pPropagationPointConnection;
	private QualifiedPropagationPointElements pQualifiedPropagationPoint;
	private ErrorBehaviorStateMachineElements pErrorBehaviorStateMachine;
	private ErrorBehaviorEventElements pErrorBehaviorEvent;
	private ErrorEventElements pErrorEvent;
	private RepairEventElements pRepairEvent;
	private RecoverEventElements pRecoverEvent;
	private ErrorBehaviorStateElements pErrorBehaviorState;
	private ErrorBehaviorTransitionElements pErrorBehaviorTransition;
	private TransitionBranchElements pTransitionBranch;
	private BranchValueElements pBranchValue;
	private ConnectionErrorBehaviorElements pConnectionErrorBehavior;
	private ConnectionErrorSourceElements pConnectionErrorSource;
	private EBSMUseContextElements pEBSMUseContext;
	private TypeUseContextElements pTypeUseContext;
	private ComponentErrorBehaviorElements pComponentErrorBehavior;
	private ConditionExpressionElements pConditionExpression;
	private AndExpressionElements pAndExpression;
	private OrmoreExpressionElements pOrmoreExpression;
	private OrlessExpressionElements pOrlessExpression;
	private ConditionTermElements pConditionTerm;
	private ConditionElementElements pConditionElement;
	private EventOrPropagationElements pEventOrPropagation;
	private OutgoingPropagationConditionElements pOutgoingPropagationCondition;
	private ErrorDetectionElements pErrorDetection;
	private ErrorCodeValueElements pErrorCodeValue;
	private ErrorStateToModeMappingElements pErrorStateToModeMapping;
	private InternalPortElements pInternalPort;
	private CompositeErrorBehaviorElements pCompositeErrorBehavior;
	private CompositeStateElements pCompositeState;
	private SConditionExpressionElements pSConditionExpression;
	private SAndExpressionElements pSAndExpression;
	private SOrmoreExpressionElements pSOrmoreExpression;
	private SOrlessExpressionElements pSOrlessExpression;
	private SConditionTermElements pSConditionTerm;
	private SConditionElementElements pSConditionElement;
	private SubcomponentElementElements pSubcomponentElement;
	private TerminalRule tSL_COMMENT;
	private TerminalRule tINTEGER_LIT;
	private QEMREFElements pQEMREF;
	
	private final Grammar grammar;

	private PropertiesGrammarAccess gaProperties;

	@Inject
	public ErrorModelGrammarAccess(GrammarProvider grammarProvider,
		PropertiesGrammarAccess gaProperties) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaProperties = gaProperties;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.osate.xtext.aadl2.errormodel.ErrorModel".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public PropertiesGrammarAccess getPropertiesGrammarAccess() {
		return gaProperties;
	}

	
	/// *
	// * Note about symbolic labels as values for occurrence probability:
	// * Use property constant. The core allows it instead of an actual number.
	// * The tools generating stochastic models from such specification can interpret the constant name as the desired label.
	// * /
	//
	//// allow either of the two to be the root. Needed dummy 'library' keyword
	// ErrorModelGrammarRoot:
	//
	//	"library" eml=ErrorModelLibrary | emsc=ErrorModelSubclause;
	public ErrorModelGrammarRootElements getErrorModelGrammarRootAccess() {
		return (pErrorModelGrammarRoot != null) ? pErrorModelGrammarRoot : (pErrorModelGrammarRoot = new ErrorModelGrammarRootElements());
	}
	
	public ParserRule getErrorModelGrammarRootRule() {
		return getErrorModelGrammarRootAccess().getRule();
	}

	//AnnexLibrary returns aadl2::AnnexLibrary:
	//
	//	ErrorModelLibrary;
	public AnnexLibraryElements getAnnexLibraryAccess() {
		return (pAnnexLibrary != null) ? pAnnexLibrary : (pAnnexLibrary = new AnnexLibraryElements());
	}
	
	public ParserRule getAnnexLibraryRule() {
		return getAnnexLibraryAccess().getRule();
	}

	//AnnexSubclause returns aadl2::AnnexSubclause:
	//
	//	ErrorModelSubclause;
	public AnnexSubclauseElements getAnnexSubclauseAccess() {
		return (pAnnexSubclause != null) ? pAnnexSubclause : (pAnnexSubclause = new AnnexSubclauseElements());
	}
	
	public ParserRule getAnnexSubclauseRule() {
		return getAnnexSubclauseAccess().getRule();
	}

	//NamedElement returns aadl2::NamedElement:
	//
	//	ErrorModelLibrary | ErrorTypes | ErrorBehaviorEvent | ErrorBehaviorState | ErrorBehaviorTransition | ErrorFlow |
	//
	//	ErrorPropagation | PropagationPointConnection | PropagationPoint | TypeTransformationSet | TypeMappingSet |
	//
	//	ErrorBehaviorStateMachine | ErrorDetection | ErrorPropagations | ConnectionErrorSource;
	public NamedElementElements getNamedElementAccess() {
		return (pNamedElement != null) ? pNamedElement : (pNamedElement = new NamedElementElements());
	}
	
	public ParserRule getNamedElementRule() {
		return getNamedElementAccess().getRule();
	}

	//ModalElement returns aadl2::ModalElement:
	//
	//	ErrorModelSubclause;
	public ModalElementElements getModalElementAccess() {
		return (pModalElement != null) ? pModalElement : (pModalElement = new ModalElementElements());
	}
	
	public ParserRule getModalElementRule() {
		return getModalElementAccess().getRule();
	}

	//Element returns aadl2::Element:
	//
	//	ElementErrorType | TypeToken | TypeTransformation | TypeMapping | PropagationPaths | QualifiedPropagationPoint |
	//
	//	TransitionBranch | ConditionElement | ConnectionErrorBehavior | ComponentErrorBehavior | CompositeErrorBehavior |
	//
	//	ConditionExpression | OrmoreExpression | OrlessExpression | OutgoingPropagationCondition | CompositeState |
	//
	//	ErrorStateToModeMapping | SubcomponentElement | FeatureReference;
	public ElementElements getElementAccess() {
		return (pElement != null) ? pElement : (pElement = new ElementElements());
	}
	
	public ParserRule getElementRule() {
		return getElementAccess().getRule();
	}

	////	'**}'
	// ErrorModelSubclause: //'{**' 
	// {ErrorModelSubclause} ("use" "types" useTypes+=[ErrorModelLibrary|QEMREF] (","
	//
	//	useTypes+=[ErrorModelLibrary|QEMREF])* ";")? ("use" "behavior" useBehavior=[ErrorBehaviorStateMachine|QEMREF] ";")?
	//
	//	errorPropagations=ErrorPropagations? componentBehavior=ComponentErrorBehavior?
	//
	//	compositeBehavior=CompositeErrorBehavior? connectionBehavior=ConnectionErrorBehavior?
	//
	//	propagationPaths=PropagationPaths? ("properties" properties+=ContainedPropertyAssociation+)?;
	public ErrorModelSubclauseElements getErrorModelSubclauseAccess() {
		return (pErrorModelSubclause != null) ? pErrorModelSubclause : (pErrorModelSubclause = new ErrorModelSubclauseElements());
	}
	
	public ParserRule getErrorModelSubclauseRule() {
		return getErrorModelSubclauseAccess().getRule();
	}

	////	'**}'
	// ErrorModelLibrary:
	//
	//	{ErrorModelLibrary} //    '{**' 
	// ("error" "types" ("extends" extends+=[ErrorModelLibrary|QEMREF] (","
	//
	//	extends+=[ErrorModelLibrary|QEMREF])* "with")? types+=ErrorTypes* ("properties"
	//
	//	properties+=ContainedPropertyAssociation+)? "end" "types" ";")? behaviors+=ErrorBehaviorStateMachine*
	//
	//	mappings+=TypeMappingSet* transformations+=TypeTransformationSet*;
	public ErrorModelLibraryElements getErrorModelLibraryAccess() {
		return (pErrorModelLibrary != null) ? pErrorModelLibrary : (pErrorModelLibrary = new ErrorModelLibraryElements());
	}
	
	public ParserRule getErrorModelLibraryRule() {
		return getErrorModelLibraryAccess().getRule();
	}

	//ErrorTypes:
	//
	//	TypeDefinition | TypeSetDefinition | TypeAlias | TypeSetAlias;
	public ErrorTypesElements getErrorTypesAccess() {
		return (pErrorTypes != null) ? pErrorTypes : (pErrorTypes = new ErrorTypesElements());
	}
	
	public ParserRule getErrorTypesRule() {
		return getErrorTypesAccess().getRule();
	}

	//TypeDefinition returns ErrorType:
	//
	//	name=ID ":" "type" ("extends" superType=[ErrorType|QEMREF])? ";";
	public TypeDefinitionElements getTypeDefinitionAccess() {
		return (pTypeDefinition != null) ? pTypeDefinition : (pTypeDefinition = new TypeDefinitionElements());
	}
	
	public ParserRule getTypeDefinitionRule() {
		return getTypeDefinitionAccess().getRule();
	}

	//TypeAlias returns ErrorType:
	//
	//	name=ID "renames" "type" aliasedType=[ErrorType|QEMREF] ";";
	public TypeAliasElements getTypeAliasAccess() {
		return (pTypeAlias != null) ? pTypeAlias : (pTypeAlias = new TypeAliasElements());
	}
	
	public ParserRule getTypeAliasRule() {
		return getTypeAliasAccess().getRule();
	}

	//TypeSetDefinition returns TypeSet:
	//
	//	name=ID ":" "type" "set" "{" elementType+=ElementErrorType ("," elementType+=ElementErrorType)* "}" ";";
	public TypeSetDefinitionElements getTypeSetDefinitionAccess() {
		return (pTypeSetDefinition != null) ? pTypeSetDefinition : (pTypeSetDefinition = new TypeSetDefinitionElements());
	}
	
	public ParserRule getTypeSetDefinitionRule() {
		return getTypeSetDefinitionAccess().getRule();
	}

	//TypeSetConstructor returns TypeSet:
	//
	//	"{" elementType+=ElementErrorType ("," elementType+=ElementErrorType)* "}";
	public TypeSetConstructorElements getTypeSetConstructorAccess() {
		return (pTypeSetConstructor != null) ? pTypeSetConstructor : (pTypeSetConstructor = new TypeSetConstructorElements());
	}
	
	public ParserRule getTypeSetConstructorRule() {
		return getTypeSetConstructorAccess().getRule();
	}

	//TypeSetReference returns TypeSet:
	//
	//	reference=[TypeSet|QEMREF] | TypeSetConstructor;
	public TypeSetReferenceElements getTypeSetReferenceAccess() {
		return (pTypeSetReference != null) ? pTypeSetReference : (pTypeSetReference = new TypeSetReferenceElements());
	}
	
	public ParserRule getTypeSetReferenceRule() {
		return getTypeSetReferenceAccess().getRule();
	}

	//TypeSetAlias returns TypeSet:
	//
	//	name=ID "renames" "type" "set" aliasedType=[TypeSet|QEMREF] ";";
	public TypeSetAliasElements getTypeSetAliasAccess() {
		return (pTypeSetAlias != null) ? pTypeSetAlias : (pTypeSetAlias = new TypeSetAliasElements());
	}
	
	public ParserRule getTypeSetAliasRule() {
		return getTypeSetAliasAccess().getRule();
	}

	//ElementErrorType returns TypeToken:
	//
	//	type+=[ErrorType|QEMREF] ("*" type+=[ErrorType|QEMREF])*;
	public ElementErrorTypeElements getElementErrorTypeAccess() {
		return (pElementErrorType != null) ? pElementErrorType : (pElementErrorType = new ElementErrorTypeElements());
	}
	
	public ParserRule getElementErrorTypeRule() {
		return getElementErrorTypeAccess().getRule();
	}

	//NoError returns TypeSet:
	//
	//	{TypeSet} "{" "noerror" "}";
	public NoErrorElements getNoErrorAccess() {
		return (pNoError != null) ? pNoError : (pNoError = new NoErrorElements());
	}
	
	public ParserRule getNoErrorRule() {
		return getNoErrorAccess().getRule();
	}

	//TypeToken:
	//
	//	{TypeToken} "(" type+=[ErrorType|QEMREF] ("*" type+=[ErrorType|QEMREF])* ")";
	public TypeTokenElements getTypeTokenAccess() {
		return (pTypeToken != null) ? pTypeToken : (pTypeToken = new TypeTokenElements());
	}
	
	public ParserRule getTypeTokenRule() {
		return getTypeTokenAccess().getRule();
	}

	//TypeTokenConstraint returns TypeSet:
	//
	//	TypeSetReference;
	public TypeTokenConstraintElements getTypeTokenConstraintAccess() {
		return (pTypeTokenConstraint != null) ? pTypeTokenConstraint : (pTypeTokenConstraint = new TypeTokenConstraintElements());
	}
	
	public ParserRule getTypeTokenConstraintRule() {
		return getTypeTokenConstraintAccess().getRule();
	}

	//TypeTokenConstraintNoError returns TypeSet:
	//
	//	TypeSetReference | NoError;
	public TypeTokenConstraintNoErrorElements getTypeTokenConstraintNoErrorAccess() {
		return (pTypeTokenConstraintNoError != null) ? pTypeTokenConstraintNoError : (pTypeTokenConstraintNoError = new TypeTokenConstraintNoErrorElements());
	}
	
	public ParserRule getTypeTokenConstraintNoErrorRule() {
		return getTypeTokenConstraintNoErrorAccess().getRule();
	}

	//TypeTransformationSet:
	//
	//	"type" "transformations" name=ID ("use" "types" useTypes+=[ErrorModelLibrary|QEMREF] (","
	//
	//	useTypes+=[ErrorModelLibrary|QEMREF])* ";")? transformation+=TypeTransformation+ "end" "transformations" ";";
	public TypeTransformationSetElements getTypeTransformationSetAccess() {
		return (pTypeTransformationSet != null) ? pTypeTransformationSet : (pTypeTransformationSet = new TypeTransformationSetElements());
	}
	
	public ParserRule getTypeTransformationSetRule() {
		return getTypeTransformationSetAccess().getRule();
	}

	//TypeTransformation:
	//
	//	source=TypeTokenConstraintNoError "-[" contributor=TypeTokenConstraintNoError "]->" target=TypeToken ";";
	public TypeTransformationElements getTypeTransformationAccess() {
		return (pTypeTransformation != null) ? pTypeTransformation : (pTypeTransformation = new TypeTransformationElements());
	}
	
	public ParserRule getTypeTransformationRule() {
		return getTypeTransformationAccess().getRule();
	}

	//TypeMappingSet:
	//
	//	"type" "mappings" name=ID ("use" "types" useTypes+=[ErrorModelLibrary|QEMREF] (","
	//
	//	useTypes+=[ErrorModelLibrary|QEMREF])* ";")? mapping+=TypeMapping+ "end" "mappings" ";";
	public TypeMappingSetElements getTypeMappingSetAccess() {
		return (pTypeMappingSet != null) ? pTypeMappingSet : (pTypeMappingSet = new TypeMappingSetElements());
	}
	
	public ParserRule getTypeMappingSetRule() {
		return getTypeMappingSetAccess().getRule();
	}

	//TypeMapping:
	//
	//	source=TypeTokenConstraint "->" target=TypeToken ";";
	public TypeMappingElements getTypeMappingAccess() {
		return (pTypeMapping != null) ? pTypeMapping : (pTypeMapping = new TypeMappingElements());
	}
	
	public ParserRule getTypeMappingRule() {
		return getTypeMappingAccess().getRule();
	}

	//ErrorPropagations:
	//
	//	"error" "propagations" {ErrorPropagations} propagations+=ErrorPropagation* ("flows" flows+=ErrorFlow+)? "end"
	//
	//	"propagations" ";";
	public ErrorPropagationsElements getErrorPropagationsAccess() {
		return (pErrorPropagations != null) ? pErrorPropagations : (pErrorPropagations = new ErrorPropagationsElements());
	}
	
	public ParserRule getErrorPropagationsRule() {
		return getErrorPropagationsAccess().getRule();
	}

	//ErrorPropagation:
	//
	//	{ErrorPropagation} (kind=PropagationKind | featurerefs+=FeatureReference ("." featurerefs+=FeatureReference)*) ":"
	//
	//	not?="not"? direction=PropagationDirection "propagation" typeSet=TypeSetReference ";";
	public ErrorPropagationElements getErrorPropagationAccess() {
		return (pErrorPropagation != null) ? pErrorPropagation : (pErrorPropagation = new ErrorPropagationElements());
	}
	
	public ParserRule getErrorPropagationRule() {
		return getErrorPropagationAccess().getRule();
	}

	//FeatureReference:
	//
	//	feature=[aadl2::NamedElement];
	public FeatureReferenceElements getFeatureReferenceAccess() {
		return (pFeatureReference != null) ? pFeatureReference : (pFeatureReference = new FeatureReferenceElements());
	}
	
	public ParserRule getFeatureReferenceRule() {
		return getFeatureReferenceAccess().getRule();
	}

	//PropagationDirection returns aadl2::DirectionType:
	//
	//	"in" | "out";
	public PropagationDirectionElements getPropagationDirectionAccess() {
		return (pPropagationDirection != null) ? pPropagationDirection : (pPropagationDirection = new PropagationDirectionElements());
	}
	
	public ParserRule getPropagationDirectionRule() {
		return getPropagationDirectionAccess().getRule();
	}

	//// virtual bus, virtual processor
	// PropagationKind:
	//
	//	"processor" | "memory" | "bus" | "device" | "system" | "virtual" "bus" | "virtual" "processor" | "binding" |
	//
	//	"bindings" | "access";
	public PropagationKindElements getPropagationKindAccess() {
		return (pPropagationKind != null) ? pPropagationKind : (pPropagationKind = new PropagationKindElements());
	}
	
	public ParserRule getPropagationKindRule() {
		return getPropagationKindAccess().getRule();
	}

	//// enum does not work as  
	//
	//
	////enum PropKind : PROCESSOR='processor'|MEMORY='memory'|BUS='bus'|DEVICE='device'|SYSTEM='system'
	//
	//
	////	            |VIRTUALBUS='virtual bus'|VIRTUALPROCESSOR='virtual processor'|BINDING='binding' | BINDINGS='bindings'|ACCESS='access'
	//
	//
	////;
	// ErrorFlow:
	//
	//	ErrorSource | ErrorSink | ErrorPath;
	public ErrorFlowElements getErrorFlowAccess() {
		return (pErrorFlow != null) ? pErrorFlow : (pErrorFlow = new ErrorFlowElements());
	}
	
	public ParserRule getErrorFlowRule() {
		return getErrorFlowAccess().getRule();
	}

	//ErrorSource:
	//
	//	name=ID ":" "error" "source" (outgoing=[ErrorPropagation|ErrorPropagationPoint] | all?="all")
	//
	//	typeTokenConstraint=TypeTokenConstraint? ("when" (failureModeReference=[ErrorBehaviorStateOrTypeSet]
	//
	//	failureModeType=TypeSetConstructor? | failureModeType=TypeSetConstructor))? ";";
	public ErrorSourceElements getErrorSourceAccess() {
		return (pErrorSource != null) ? pErrorSource : (pErrorSource = new ErrorSourceElements());
	}
	
	public ParserRule getErrorSourceRule() {
		return getErrorSourceAccess().getRule();
	}

	//ErrorBehaviorStateOrTypeSet:
	//
	//	ErrorBehaviorState | TypeSetDefinition;
	public ErrorBehaviorStateOrTypeSetElements getErrorBehaviorStateOrTypeSetAccess() {
		return (pErrorBehaviorStateOrTypeSet != null) ? pErrorBehaviorStateOrTypeSet : (pErrorBehaviorStateOrTypeSet = new ErrorBehaviorStateOrTypeSetElements());
	}
	
	public ParserRule getErrorBehaviorStateOrTypeSetRule() {
		return getErrorBehaviorStateOrTypeSetAccess().getRule();
	}

	//ErrorSink:
	//
	//	name=ID ":" "error" "sink" incoming=[ErrorPropagation|ErrorPropagationPoint] typeTokenConstraint=TypeTokenConstraint?
	//
	//	";";
	public ErrorSinkElements getErrorSinkAccess() {
		return (pErrorSink != null) ? pErrorSink : (pErrorSink = new ErrorSinkElements());
	}
	
	public ParserRule getErrorSinkRule() {
		return getErrorSinkAccess().getRule();
	}

	//ErrorPath:
	//
	//	name=ID ":" "error" "path" incoming=[ErrorPropagation|ErrorPropagationPoint] typeTokenConstraint=TypeTokenConstraint?
	//
	//	"->" (outgoing=[ErrorPropagation|ErrorPropagationPoint] | all?="all") (targetToken=TypeToken | "use" "mappings"
	//
	//	typeMappingSet=[TypeMappingSet|QEMREF])? ";";
	public ErrorPathElements getErrorPathAccess() {
		return (pErrorPath != null) ? pErrorPath : (pErrorPath = new ErrorPathElements());
	}
	
	public ParserRule getErrorPathRule() {
		return getErrorPathAccess().getRule();
	}

	//// reference to error propagation  
	// ErrorPropagationPoint:
	//
	//	PropagationKind | ID ("." ID)*;
	public ErrorPropagationPointElements getErrorPropagationPointAccess() {
		return (pErrorPropagationPoint != null) ? pErrorPropagationPoint : (pErrorPropagationPoint = new ErrorPropagationPointElements());
	}
	
	public ParserRule getErrorPropagationPointRule() {
		return getErrorPropagationPointAccess().getRule();
	}

	//PropagationPaths:
	//
	//	"propagation" "paths" points+=PropagationPoint+ ("connections" connections+=PropagationPointConnection+)? "end"
	//
	//	"paths" ";";
	public PropagationPathsElements getPropagationPathsAccess() {
		return (pPropagationPaths != null) ? pPropagationPaths : (pPropagationPaths = new PropagationPathsElements());
	}
	
	public ParserRule getPropagationPathsRule() {
		return getPropagationPathsAccess().getRule();
	}

	//PropagationPoint:
	//
	//	name=ID ":" "propagation" "point" ";";
	public PropagationPointElements getPropagationPointAccess() {
		return (pPropagationPoint != null) ? pPropagationPoint : (pPropagationPoint = new PropagationPointElements());
	}
	
	public ParserRule getPropagationPointRule() {
		return getPropagationPointAccess().getRule();
	}

	//PropagationPointConnection:
	//
	//	name=ID ":" source=QualifiedPropagationPoint "->" target=QualifiedPropagationPoint ";";
	public PropagationPointConnectionElements getPropagationPointConnectionAccess() {
		return (pPropagationPointConnection != null) ? pPropagationPointConnection : (pPropagationPointConnection = new PropagationPointConnectionElements());
	}
	
	public ParserRule getPropagationPointConnectionRule() {
		return getPropagationPointConnectionAccess().getRule();
	}

	//QualifiedPropagationPoint:
	//
	//	(subcomponent=[aadl2::Subcomponent] ".")? propagationPoint=[PropagationPoint];
	public QualifiedPropagationPointElements getQualifiedPropagationPointAccess() {
		return (pQualifiedPropagationPoint != null) ? pQualifiedPropagationPoint : (pQualifiedPropagationPoint = new QualifiedPropagationPointElements());
	}
	
	public ParserRule getQualifiedPropagationPointRule() {
		return getQualifiedPropagationPointAccess().getRule();
	}

	//ErrorBehaviorStateMachine:
	//
	//	"error" "behavior" name=ID ("use" "types" useTypes+=[ErrorModelLibrary|QEMREF] (","
	//
	//	useTypes+=[ErrorModelLibrary|QEMREF])* ";")? ("use" "transformations"
	//
	//	useTransformation+=[TypeTransformationSet|QEMREF] ";")? ("events" events+=ErrorBehaviorEvent+)? ("states"
	//
	//	states+=ErrorBehaviorState+)? ("transitions" transitions+=ErrorBehaviorTransition+)? ("properties"
	//
	//	properties+=ContainedPropertyAssociation+)? "end" "behavior" ";";
	public ErrorBehaviorStateMachineElements getErrorBehaviorStateMachineAccess() {
		return (pErrorBehaviorStateMachine != null) ? pErrorBehaviorStateMachine : (pErrorBehaviorStateMachine = new ErrorBehaviorStateMachineElements());
	}
	
	public ParserRule getErrorBehaviorStateMachineRule() {
		return getErrorBehaviorStateMachineAccess().getRule();
	}

	//ErrorBehaviorEvent:
	//
	//	ErrorEvent | RepairEvent | RecoverEvent;
	public ErrorBehaviorEventElements getErrorBehaviorEventAccess() {
		return (pErrorBehaviorEvent != null) ? pErrorBehaviorEvent : (pErrorBehaviorEvent = new ErrorBehaviorEventElements());
	}
	
	public ParserRule getErrorBehaviorEventRule() {
		return getErrorBehaviorEventAccess().getRule();
	}

	//// add event condition 
	// ErrorEvent:
	//
	//	name=ID ":" "error" "event" typeSet=TypeSetReference? ("when" condition=STRING)? ";";
	public ErrorEventElements getErrorEventAccess() {
		return (pErrorEvent != null) ? pErrorEvent : (pErrorEvent = new ErrorEventElements());
	}
	
	public ParserRule getErrorEventRule() {
		return getErrorEventAccess().getRule();
	}

	////add repair initiator 
	// RepairEvent:
	//
	//	name=ID ":" "repair" "event" ("when" condition=STRING)? ";";
	public RepairEventElements getRepairEventAccess() {
		return (pRepairEvent != null) ? pRepairEvent : (pRepairEvent = new RepairEventElements());
	}
	
	public ParserRule getRepairEventRule() {
		return getRepairEventAccess().getRule();
	}

	////add recover initiator 
	// RecoverEvent:
	//
	//	name=ID ":" "recover" "event" ("when" condition+=[aadl2::NamedElement] ("," condition+=[aadl2::NamedElement])*)? ";";
	public RecoverEventElements getRecoverEventAccess() {
		return (pRecoverEvent != null) ? pRecoverEvent : (pRecoverEvent = new RecoverEventElements());
	}
	
	public ParserRule getRecoverEventRule() {
		return getRecoverEventAccess().getRule();
	}

	//ErrorBehaviorState:
	//
	//	name=ID ":" intial?="initial"? "state" typeSet=TypeSetReference? ";";
	public ErrorBehaviorStateElements getErrorBehaviorStateAccess() {
		return (pErrorBehaviorState != null) ? pErrorBehaviorState : (pErrorBehaviorState = new ErrorBehaviorStateElements());
	}
	
	public ParserRule getErrorBehaviorStateRule() {
		return getErrorBehaviorStateAccess().getRule();
	}

	//ErrorBehaviorTransition:
	//
	//	(name=ID ":")? (source=[ErrorBehaviorState] typeTokenConstraint=TypeTokenConstraint? | all?="all") "-["
	//
	//	condition=ConditionExpression "]->" ((target=[ErrorBehaviorState] targetToken=TypeToken? | mask?="mask") | "("
	//
	//	destinationBranches+=TransitionBranch ("," destinationBranches+=TransitionBranch)+ ")") ";";
	public ErrorBehaviorTransitionElements getErrorBehaviorTransitionAccess() {
		return (pErrorBehaviorTransition != null) ? pErrorBehaviorTransition : (pErrorBehaviorTransition = new ErrorBehaviorTransitionElements());
	}
	
	public ParserRule getErrorBehaviorTransitionRule() {
		return getErrorBehaviorTransitionAccess().getRule();
	}

	//TransitionBranch:
	//
	//	(target=[ErrorBehaviorState] targetToken=TypeToken? | mask?="mask") "with" value=BranchValue;
	public TransitionBranchElements getTransitionBranchAccess() {
		return (pTransitionBranch != null) ? pTransitionBranch : (pTransitionBranch = new TransitionBranchElements());
	}
	
	public ParserRule getTransitionBranchRule() {
		return getTransitionBranchAccess().getRule();
	}

	//// store real literal as integer, ID as reference to property constant
	// BranchValue:
	//
	//	{BranchValue} (realvalue=REAL_LIT | symboliclabel=[aadl2::PropertyConstant|QEMREF] | others?="others");
	public BranchValueElements getBranchValueAccess() {
		return (pBranchValue != null) ? pBranchValue : (pBranchValue = new BranchValueElements());
	}
	
	public ParserRule getBranchValueRule() {
		return getBranchValueAccess().getRule();
	}

	//ConnectionErrorBehavior:
	//
	//	"connection" "error" "behavior" {ConnectionErrorBehavior} ("use" "transformations"
	//
	//	typeTransformationSet=[TypeTransformationSet|QEMREF] ";")? connectionErrorSources+=ConnectionErrorSource* "end"
	//
	//	"connection" ";";
	public ConnectionErrorBehaviorElements getConnectionErrorBehaviorAccess() {
		return (pConnectionErrorBehavior != null) ? pConnectionErrorBehavior : (pConnectionErrorBehavior = new ConnectionErrorBehaviorElements());
	}
	
	public ParserRule getConnectionErrorBehaviorRule() {
		return getConnectionErrorBehaviorAccess().getRule();
	}

	//ConnectionErrorSource:
	//
	//	name=ID ":" "error" "source" (connection=[aadl2::Connection] | all?="all") typeTokenConstraint=TypeTokenConstraint?
	//
	//	("when" failureModeType=TypeSetConstructor)? ";";
	public ConnectionErrorSourceElements getConnectionErrorSourceAccess() {
		return (pConnectionErrorSource != null) ? pConnectionErrorSource : (pConnectionErrorSource = new ConnectionErrorSourceElements());
	}
	
	public ParserRule getConnectionErrorSourceRule() {
		return getConnectionErrorSourceAccess().getRule();
	}

	//EBSMUseContext:
	//
	//	ErrorModelSubclause;
	public EBSMUseContextElements getEBSMUseContextAccess() {
		return (pEBSMUseContext != null) ? pEBSMUseContext : (pEBSMUseContext = new EBSMUseContextElements());
	}
	
	public ParserRule getEBSMUseContextRule() {
		return getEBSMUseContextAccess().getRule();
	}

	//TypeUseContext:
	//
	//	TypeTransformationSet | TypeMappingSet | ErrorBehaviorStateMachine | EBSMUseContext;
	public TypeUseContextElements getTypeUseContextAccess() {
		return (pTypeUseContext != null) ? pTypeUseContext : (pTypeUseContext = new TypeUseContextElements());
	}
	
	public ParserRule getTypeUseContextRule() {
		return getTypeUseContextAccess().getRule();
	}

	//ComponentErrorBehavior:
	//
	//	"component" "error" "behavior" {ComponentErrorBehavior} ("use" "transformations"
	//
	//	useTransformation=[TypeTransformationSet|QEMREF] ";")? ("events" events+=ErrorBehaviorEvent+)? ("transitions"
	//
	//	transitions+=ErrorBehaviorTransition+)? ("propagations"
	//
	//	outgoingPropagationConditions+=OutgoingPropagationCondition+)? ("detections" errorDetections+=ErrorDetection+)?
	//
	//	("mode" "mappings" errorStateToModeMappings+=ErrorStateToModeMapping+)? "end" "component" ";";
	public ComponentErrorBehaviorElements getComponentErrorBehaviorAccess() {
		return (pComponentErrorBehavior != null) ? pComponentErrorBehavior : (pComponentErrorBehavior = new ComponentErrorBehaviorElements());
	}
	
	public ParserRule getComponentErrorBehaviorRule() {
		return getComponentErrorBehaviorAccess().getRule();
	}

	//// condition expression for component specific transitions 
	// // based on error events and incoming propagations
	//
	//
	//ConditionExpression:
	//
	//	AndExpression ({OrExpression.operands+=current} "or" operands+=AndExpression)*;
	public ConditionExpressionElements getConditionExpressionAccess() {
		return (pConditionExpression != null) ? pConditionExpression : (pConditionExpression = new ConditionExpressionElements());
	}
	
	public ParserRule getConditionExpressionRule() {
		return getConditionExpressionAccess().getRule();
	}

	//AndExpression returns ConditionExpression:
	//
	//	ConditionTerm ({AndExpression.operands+=current} "and" operands+=ConditionTerm)*;
	public AndExpressionElements getAndExpressionAccess() {
		return (pAndExpression != null) ? pAndExpression : (pAndExpression = new AndExpressionElements());
	}
	
	public ParserRule getAndExpressionRule() {
		return getAndExpressionAccess().getRule();
	}

	//OrmoreExpression:
	//
	//	count=INTVALUE "ormore" "(" operands+=ConditionElement ("," operands+=ConditionElement)* ")";
	public OrmoreExpressionElements getOrmoreExpressionAccess() {
		return (pOrmoreExpression != null) ? pOrmoreExpression : (pOrmoreExpression = new OrmoreExpressionElements());
	}
	
	public ParserRule getOrmoreExpressionRule() {
		return getOrmoreExpressionAccess().getRule();
	}

	//OrlessExpression:
	//
	//	count=INTVALUE "orless" "(" operands+=ConditionElement ("," operands+=ConditionElement)* ")";
	public OrlessExpressionElements getOrlessExpressionAccess() {
		return (pOrlessExpression != null) ? pOrlessExpression : (pOrlessExpression = new OrlessExpressionElements());
	}
	
	public ParserRule getOrlessExpressionRule() {
		return getOrlessExpressionAccess().getRule();
	}

	//ConditionTerm returns ConditionExpression:
	//
	//	ConditionElement | OrmoreExpression | OrlessExpression | "(" ConditionExpression ")";
	public ConditionTermElements getConditionTermAccess() {
		return (pConditionTerm != null) ? pConditionTerm : (pConditionTerm = new ConditionTermElements());
	}
	
	public ParserRule getConditionTermRule() {
		return getConditionTermAccess().getRule();
	}

	//ConditionElement: // ( subcomponent=[Subcomponent|ID] '.' )* or ?
	// incoming=[EventOrPropagation|ErrorPropagationPoint]
	//
	//	constraint=TypeTokenConstraintNoError?;
	public ConditionElementElements getConditionElementAccess() {
		return (pConditionElement != null) ? pConditionElement : (pConditionElement = new ConditionElementElements());
	}
	
	public ParserRule getConditionElementRule() {
		return getConditionElementAccess().getRule();
	}

	//EventOrPropagation:
	//
	//	ErrorBehaviorEvent | ErrorPropagation;
	public EventOrPropagationElements getEventOrPropagationAccess() {
		return (pEventOrPropagation != null) ? pEventOrPropagation : (pEventOrPropagation = new EventOrPropagationElements());
	}
	
	public ParserRule getEventOrPropagationRule() {
		return getEventOrPropagationAccess().getRule();
	}

	//OutgoingPropagationCondition:
	//
	//	(name=ID ":")? (state=[ErrorBehaviorState] typeTokenConstraint=TypeTokenConstraint? | all?="all") "-["
	//
	//	condition=ConditionExpression? "]->" (outgoing=[ErrorPropagation|ErrorPropagationPoint] typeToken=TypeToken? |
	//
	//	outgoing=[ErrorPropagation|ErrorPropagationPoint]? mask?="mask") ";";
	public OutgoingPropagationConditionElements getOutgoingPropagationConditionAccess() {
		return (pOutgoingPropagationCondition != null) ? pOutgoingPropagationCondition : (pOutgoingPropagationCondition = new OutgoingPropagationConditionElements());
	}
	
	public ParserRule getOutgoingPropagationConditionRule() {
		return getOutgoingPropagationConditionAccess().getRule();
	}

	//ErrorDetection:
	//
	//	(name=ID ":")? (state=[ErrorBehaviorState] typeTokenConstraint=TypeTokenConstraint? | all?="all") "-["
	//
	//	condition=ConditionExpression? "]->" (internalDetectionPort=InternalPort | detectionReportingPort=[aadl2::Port]) "!"
	//
	//	errorCode=ErrorCodeValue? ";";
	public ErrorDetectionElements getErrorDetectionAccess() {
		return (pErrorDetection != null) ? pErrorDetection : (pErrorDetection = new ErrorDetectionElements());
	}
	
	public ParserRule getErrorDetectionRule() {
		return getErrorDetectionAccess().getRule();
	}

	//ErrorCodeValue:
	//
	//	intValue=INTEGER_LIT | constant=[aadl2::PropertyConstant|QPREF] | enumLiteral=STRING;
	public ErrorCodeValueElements getErrorCodeValueAccess() {
		return (pErrorCodeValue != null) ? pErrorCodeValue : (pErrorCodeValue = new ErrorCodeValueElements());
	}
	
	public ParserRule getErrorCodeValueRule() {
		return getErrorCodeValueAccess().getRule();
	}

	//ErrorStateToModeMapping:
	//
	//	errorState=[ErrorBehaviorState] "in" "modes" "(" mappedModes+=[aadl2::Mode] ("," mappedModes+=[aadl2::Mode])* ")"
	//
	//	";";
	public ErrorStateToModeMappingElements getErrorStateToModeMappingAccess() {
		return (pErrorStateToModeMapping != null) ? pErrorStateToModeMapping : (pErrorStateToModeMapping = new ErrorStateToModeMappingElements());
	}
	
	public ParserRule getErrorStateToModeMappingRule() {
		return getErrorStateToModeMappingAccess().getRule();
	}

	//InternalPort returns aadl2::InternalEvent:
	//
	//	"self" "." name=ID;
	public InternalPortElements getInternalPortAccess() {
		return (pInternalPort != null) ? pInternalPort : (pInternalPort = new InternalPortElements());
	}
	
	public ParserRule getInternalPortRule() {
		return getInternalPortAccess().getRule();
	}

	//CompositeErrorBehavior:
	//
	//	"composite" "error" "behavior" {CompositeErrorBehavior} ("states" states+=CompositeState+)? "end" "composite" ";";
	public CompositeErrorBehaviorElements getCompositeErrorBehaviorAccess() {
		return (pCompositeErrorBehavior != null) ? pCompositeErrorBehavior : (pCompositeErrorBehavior = new CompositeErrorBehaviorElements());
	}
	
	public ParserRule getCompositeErrorBehaviorRule() {
		return getCompositeErrorBehaviorAccess().getRule();
	}

	//CompositeState:
	//
	//	"[" (condition=SConditionExpression | others?="others") "]->" state=[ErrorBehaviorState] typedToken=TypeToken? ";";
	public CompositeStateElements getCompositeStateAccess() {
		return (pCompositeState != null) ? pCompositeState : (pCompositeState = new CompositeStateElements());
	}
	
	public ParserRule getCompositeStateRule() {
		return getCompositeStateAccess().getRule();
	}

	//// condition expressions for composite states
	// // based on states only  
	// SConditionExpression returns
	//
	//ConditionExpression:
	//
	//	SAndExpression ({SOrExpression.operands+=current} "or" operands+=SAndExpression)*;
	public SConditionExpressionElements getSConditionExpressionAccess() {
		return (pSConditionExpression != null) ? pSConditionExpression : (pSConditionExpression = new SConditionExpressionElements());
	}
	
	public ParserRule getSConditionExpressionRule() {
		return getSConditionExpressionAccess().getRule();
	}

	//SAndExpression returns ConditionExpression:
	//
	//	SConditionTerm ({SAndExpression.operands+=current} "and" operands+=SConditionTerm)*;
	public SAndExpressionElements getSAndExpressionAccess() {
		return (pSAndExpression != null) ? pSAndExpression : (pSAndExpression = new SAndExpressionElements());
	}
	
	public ParserRule getSAndExpressionRule() {
		return getSAndExpressionAccess().getRule();
	}

	//SOrmoreExpression returns OrmoreExpression:
	//
	//	count=INTVALUE "ormore" "(" operands+=SConditionElement ("," operands+=SConditionElement)* ")";
	public SOrmoreExpressionElements getSOrmoreExpressionAccess() {
		return (pSOrmoreExpression != null) ? pSOrmoreExpression : (pSOrmoreExpression = new SOrmoreExpressionElements());
	}
	
	public ParserRule getSOrmoreExpressionRule() {
		return getSOrmoreExpressionAccess().getRule();
	}

	//SOrlessExpression returns OrlessExpression:
	//
	//	count=INTVALUE "orless" "(" operands+=SConditionElement ("," operands+=SConditionElement)* ")";
	public SOrlessExpressionElements getSOrlessExpressionAccess() {
		return (pSOrlessExpression != null) ? pSOrlessExpression : (pSOrlessExpression = new SOrlessExpressionElements());
	}
	
	public ParserRule getSOrlessExpressionRule() {
		return getSOrlessExpressionAccess().getRule();
	}

	//SConditionTerm returns ConditionExpression:
	//
	//	SConditionElement | SOrmoreExpression | SOrlessExpression | "(" SConditionExpression ")";
	public SConditionTermElements getSConditionTermAccess() {
		return (pSConditionTerm != null) ? pSConditionTerm : (pSConditionTerm = new SConditionTermElements());
	}
	
	public ParserRule getSConditionTermRule() {
		return getSConditionTermAccess().getRule();
	}

	//SConditionElement returns ConditionElement:
	//
	//	(subcomponents+=SubcomponentElement ".")+ reference=[ErrorBehaviorState] constraint=TypeTokenConstraint?;
	public SConditionElementElements getSConditionElementAccess() {
		return (pSConditionElement != null) ? pSConditionElement : (pSConditionElement = new SConditionElementElements());
	}
	
	public ParserRule getSConditionElementRule() {
		return getSConditionElementAccess().getRule();
	}

	//SubcomponentElement:
	//
	//	subcomponent=[aadl2::Subcomponent];
	public SubcomponentElementElements getSubcomponentElementAccess() {
		return (pSubcomponentElement != null) ? pSubcomponentElement : (pSubcomponentElement = new SubcomponentElementElements());
	}
	
	public ParserRule getSubcomponentElementRule() {
		return getSubcomponentElementAccess().getRule();
	}

	//terminal SL_COMMENT:
	//
	//	"--" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return (tSL_COMMENT != null) ? tSL_COMMENT : (tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "SL_COMMENT"));
	} 

	//terminal INTEGER_LIT:
	//
	//	"0".."9"+;
	public TerminalRule getINTEGER_LITRule() {
		return (tINTEGER_LIT != null) ? tINTEGER_LIT : (tINTEGER_LIT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "INTEGER_LIT"));
	} 

	////('.' ID )?;
	// QEMREF:
	//
	//	(ID "::")* ID;
	public QEMREFElements getQEMREFAccess() {
		return (pQEMREF != null) ? pQEMREF : (pQEMREF = new QEMREFElements());
	}
	
	public ParserRule getQEMREFRule() {
		return getQEMREFAccess().getRule();
	}

	//PModel returns aadl2::Element: //| BasicPropertyAssociation | PropertyAssociation
	// ContainedPropertyAssociation;
	public PropertiesGrammarAccess.PModelElements getPModelAccess() {
		return gaProperties.getPModelAccess();
	}
	
	public ParserRule getPModelRule() {
		return getPModelAccess().getRule();
	}

	//// Properties
	// ContainedPropertyAssociation returns aadl2::PropertyAssociation:
	//
	//	property=[aadl2::Property|QPREF] ("=>" | append?="+=>") constant?="constant"? (ownedValue+=OptionalModalPropertyValue
	//
	//	("," ownedValue+=OptionalModalPropertyValue)*) ("applies" "to" appliesTo+=ContainmentPath (","
	//
	//	appliesTo+=ContainmentPath)*)? ("in" "binding" "(" inBinding+=[aadl2::Classifier|QCREF] ")")? ";";
	public PropertiesGrammarAccess.ContainedPropertyAssociationElements getContainedPropertyAssociationAccess() {
		return gaProperties.getContainedPropertyAssociationAccess();
	}
	
	public ParserRule getContainedPropertyAssociationRule() {
		return getContainedPropertyAssociationAccess().getRule();
	}

	//PropertyAssociation returns aadl2::PropertyAssociation:
	//
	//	property=[aadl2::Property|QPREF] ("=>" | append?="+=>") constant?="constant"? (ownedValue+=OptionalModalPropertyValue
	//
	//	("," ownedValue+=OptionalModalPropertyValue)*) ("in" "binding" "(" inBinding+=[aadl2::Classifier|QCREF] ")")? ";";
	public PropertiesGrammarAccess.PropertyAssociationElements getPropertyAssociationAccess() {
		return gaProperties.getPropertyAssociationAccess();
	}
	
	public ParserRule getPropertyAssociationRule() {
		return getPropertyAssociationAccess().getRule();
	}

	//BasicPropertyAssociation returns aadl2::PropertyAssociation:
	//
	//	property=[aadl2::Property|QPREF] "=>" ownedValue+=PropertyValue ";";
	public PropertiesGrammarAccess.BasicPropertyAssociationElements getBasicPropertyAssociationAccess() {
		return gaProperties.getBasicPropertyAssociationAccess();
	}
	
	public ParserRule getBasicPropertyAssociationRule() {
		return getBasicPropertyAssociationAccess().getRule();
	}

	////	( 'annex' containmentPathElement+=AnnexPath )?
	// ContainmentPath returns aadl2::ContainedNamedElement:
	//
	//	{aadl2::ContainedNamedElement} containmentPathElement+=ContainmentPathElement ("."
	//
	//	containmentPathElement+=ContainmentPathElement)*;
	public PropertiesGrammarAccess.ContainmentPathElements getContainmentPathAccess() {
		return gaProperties.getContainmentPathAccess();
	}
	
	public ParserRule getContainmentPathRule() {
		return getContainmentPathAccess().getRule();
	}

	////AnnexPath returns aadl2::ContainmentPathElement:
	// //	 namedElement=[aadl2::NamedElement|IDANNEXTEXT];
	//
	//
	//ModalPropertyValue returns aadl2::ModalPropertyValue:
	//
	//	ownedValue=PropertyExpression "in" "modes" "(" inMode+=[aadl2::Mode] ("," inMode+=[aadl2::Mode])* ")";
	public PropertiesGrammarAccess.ModalPropertyValueElements getModalPropertyValueAccess() {
		return gaProperties.getModalPropertyValueAccess();
	}
	
	public ParserRule getModalPropertyValueRule() {
		return getModalPropertyValueAccess().getRule();
	}

	//OptionalModalPropertyValue returns aadl2::ModalPropertyValue:
	//
	//	ownedValue=PropertyExpression // phf made this optional: need to check separately that only the last one is optional
	//
	//
	//	("in" "modes" "(" inMode+=[aadl2::Mode] ("," inMode+=[aadl2::Mode])* ")")?;
	public PropertiesGrammarAccess.OptionalModalPropertyValueElements getOptionalModalPropertyValueAccess() {
		return gaProperties.getOptionalModalPropertyValueAccess();
	}
	
	public ParserRule getOptionalModalPropertyValueRule() {
		return getOptionalModalPropertyValueAccess().getRule();
	}

	//// &&&&&&&&&& handling of in binding
	// PropertyValue returns aadl2::ModalPropertyValue:
	//
	//	ownedValue=PropertyExpression;
	public PropertiesGrammarAccess.PropertyValueElements getPropertyValueAccess() {
		return gaProperties.getPropertyValueAccess();
	}
	
	public ParserRule getPropertyValueRule() {
		return getPropertyValueAccess().getRule();
	}

	//PropertyExpression returns aadl2::PropertyExpression: //	OldRecordTerm |
	// RecordTerm | ReferenceTerm |
	//
	//	ComponentClassifierTerm | ComputedTerm | StringTerm | NumericRangeTerm | RealTerm | IntegerTerm | ListTerm |
	//
	//	BooleanLiteral | LiteralorReferenceTerm;
	public PropertiesGrammarAccess.PropertyExpressionElements getPropertyExpressionAccess() {
		return gaProperties.getPropertyExpressionAccess();
	}
	
	public ParserRule getPropertyExpressionRule() {
		return getPropertyExpressionAccess().getRule();
	}

	//LiteralorReferenceTerm returns aadl2::NamedValue:
	//
	//	namedValue=[aadl2::AbstractNamedValue|QPREF];
	public PropertiesGrammarAccess.LiteralorReferenceTermElements getLiteralorReferenceTermAccess() {
		return gaProperties.getLiteralorReferenceTermAccess();
	}
	
	public ParserRule getLiteralorReferenceTermRule() {
		return getLiteralorReferenceTermAccess().getRule();
	}

	//BooleanLiteral returns aadl2::BooleanLiteral:
	//
	//	{aadl2::BooleanLiteral} (value?="true" | "false");
	public PropertiesGrammarAccess.BooleanLiteralElements getBooleanLiteralAccess() {
		return gaProperties.getBooleanLiteralAccess();
	}
	
	public ParserRule getBooleanLiteralRule() {
		return getBooleanLiteralAccess().getRule();
	}

	//ConstantValue returns aadl2::NamedValue:
	//
	//	namedValue=[aadl2::PropertyConstant|QPREF];
	public PropertiesGrammarAccess.ConstantValueElements getConstantValueAccess() {
		return gaProperties.getConstantValueAccess();
	}
	
	public ParserRule getConstantValueRule() {
		return getConstantValueAccess().getRule();
	}

	//ReferenceTerm returns aadl2::ReferenceValue:
	//
	//	"reference" "(" containmentPathElement+=ContainmentPathElement ("." containmentPathElement+=ContainmentPathElement)*
	//
	//	//	( 'annex' ID '{**' 
	// //	containmentPathElement+=ContainmentPathElement
	//
	//
	//	//	( '.' containmentPathElement+=ContainmentPathElement)*
	// //	'**}')?
	// ")";
	public PropertiesGrammarAccess.ReferenceTermElements getReferenceTermAccess() {
		return gaProperties.getReferenceTermAccess();
	}
	
	public ParserRule getReferenceTermRule() {
		return getReferenceTermAccess().getRule();
	}

	//RecordTerm returns aadl2::RecordValue:
	//
	//	"[" ownedFieldValue+=FieldPropertyAssociation+ "]";
	public PropertiesGrammarAccess.RecordTermElements getRecordTermAccess() {
		return gaProperties.getRecordTermAccess();
	}
	
	public ParserRule getRecordTermRule() {
		return getRecordTermAccess().getRule();
	}

	//OldRecordTerm returns aadl2::RecordValue:
	//
	//	"(" ownedFieldValue+=FieldPropertyAssociation+ ")";
	public PropertiesGrammarAccess.OldRecordTermElements getOldRecordTermAccess() {
		return gaProperties.getOldRecordTermAccess();
	}
	
	public ParserRule getOldRecordTermRule() {
		return getOldRecordTermAccess().getRule();
	}

	//ComputedTerm returns aadl2::ComputedValue:
	//
	//	"compute" "(" function=ID ")";
	public PropertiesGrammarAccess.ComputedTermElements getComputedTermAccess() {
		return gaProperties.getComputedTermAccess();
	}
	
	public ParserRule getComputedTermRule() {
		return getComputedTermAccess().getRule();
	}

	//ComponentClassifierTerm returns aadl2::ClassifierValue:
	//
	//	"classifier" "(" classifier=[aadl2::ComponentClassifier|QCREF] ")";
	public PropertiesGrammarAccess.ComponentClassifierTermElements getComponentClassifierTermAccess() {
		return gaProperties.getComponentClassifierTermAccess();
	}
	
	public ParserRule getComponentClassifierTermRule() {
		return getComponentClassifierTermAccess().getRule();
	}

	//ListTerm returns aadl2::ListValue:
	//
	//	{aadl2::ListValue} "(" (ownedListElement+=PropertyExpression ("," ownedListElement+=PropertyExpression)*)? ")";
	public PropertiesGrammarAccess.ListTermElements getListTermAccess() {
		return gaProperties.getListTermAccess();
	}
	
	public ParserRule getListTermRule() {
		return getListTermAccess().getRule();
	}

	//FieldPropertyAssociation returns aadl2::BasicPropertyAssociation:
	//
	//	property=[aadl2::BasicProperty] "=>" ownedValue=PropertyExpression ";";
	public PropertiesGrammarAccess.FieldPropertyAssociationElements getFieldPropertyAssociationAccess() {
		return gaProperties.getFieldPropertyAssociationAccess();
	}
	
	public ParserRule getFieldPropertyAssociationRule() {
		return getFieldPropertyAssociationAccess().getRule();
	}

	//// from AADL2
	// // need to add annex path element
	// //	 | 	 'annex' namedElement=[aadl2::NamedElement|ID]
	//
	//
	//ContainmentPathElement returns aadl2::ContainmentPathElement:
	//
	//	namedElement=[aadl2::NamedElement] arrayRange+=ArrayRange?;
	public PropertiesGrammarAccess.ContainmentPathElementElements getContainmentPathElementAccess() {
		return gaProperties.getContainmentPathElementAccess();
	}
	
	public ParserRule getContainmentPathElementRule() {
		return getContainmentPathElementAccess().getRule();
	}

	//ANNEXREF: // check what values are ok inside ** **
	// "{" STAR STAR ID STAR STAR "}";
	public PropertiesGrammarAccess.ANNEXREFElements getANNEXREFAccess() {
		return gaProperties.getANNEXREFAccess();
	}
	
	public ParserRule getANNEXREFRule() {
		return getANNEXREFAccess().getRule();
	}

	//PlusMinus returns aadl2::OperationKind:
	//
	//	"+" | "-";
	public PropertiesGrammarAccess.PlusMinusElements getPlusMinusAccess() {
		return gaProperties.getPlusMinusAccess();
	}
	
	public ParserRule getPlusMinusRule() {
		return getPlusMinusAccess().getRule();
	}

	//StringTerm returns aadl2::StringLiteral:
	//
	//	value=NoQuoteString;
	public PropertiesGrammarAccess.StringTermElements getStringTermAccess() {
		return gaProperties.getStringTermAccess();
	}
	
	public ParserRule getStringTermRule() {
		return getStringTermAccess().getRule();
	}

	//NoQuoteString: // remove quotes from string in ValueConverter
	// STRING;
	public PropertiesGrammarAccess.NoQuoteStringElements getNoQuoteStringAccess() {
		return gaProperties.getNoQuoteStringAccess();
	}
	
	public ParserRule getNoQuoteStringRule() {
		return getNoQuoteStringAccess().getRule();
	}

	//ArrayRange returns aadl2::ArrayRange:
	//
	//	{aadl2::ArrayRange} "[" lowerBound=INTVALUE (".." upperBound=INTVALUE)? "]";
	public PropertiesGrammarAccess.ArrayRangeElements getArrayRangeAccess() {
		return gaProperties.getArrayRangeAccess();
	}
	
	public ParserRule getArrayRangeRule() {
		return getArrayRangeAccess().getRule();
	}

	//SignedConstant returns aadl2::Operation:
	//
	//	op=PlusMinus ownedPropertyExpression+=ConstantValue;
	public PropertiesGrammarAccess.SignedConstantElements getSignedConstantAccess() {
		return gaProperties.getSignedConstantAccess();
	}
	
	public ParserRule getSignedConstantRule() {
		return getSignedConstantAccess().getRule();
	}

	//IntegerTerm returns aadl2::IntegerLiteral:
	//
	//	value=SignedInt unit=[aadl2::UnitLiteral]?;
	public PropertiesGrammarAccess.IntegerTermElements getIntegerTermAccess() {
		return gaProperties.getIntegerTermAccess();
	}
	
	public ParserRule getIntegerTermRule() {
		return getIntegerTermAccess().getRule();
	}

	//SignedInt returns aadl2::Integer:
	//
	//	("+" | "-")? INTEGER_LIT;
	public PropertiesGrammarAccess.SignedIntElements getSignedIntAccess() {
		return gaProperties.getSignedIntAccess();
	}
	
	public ParserRule getSignedIntRule() {
		return getSignedIntAccess().getRule();
	}

	//RealTerm returns aadl2::RealLiteral:
	//
	//	value=SignedReal unit=[aadl2::UnitLiteral]?;
	public PropertiesGrammarAccess.RealTermElements getRealTermAccess() {
		return gaProperties.getRealTermAccess();
	}
	
	public ParserRule getRealTermRule() {
		return getRealTermAccess().getRule();
	}

	//SignedReal returns aadl2::Real:
	//
	//	("+" | "-")? REAL_LIT;
	public PropertiesGrammarAccess.SignedRealElements getSignedRealAccess() {
		return gaProperties.getSignedRealAccess();
	}
	
	public ParserRule getSignedRealRule() {
		return getSignedRealAccess().getRule();
	}

	//NumericRangeTerm returns aadl2::RangeValue:
	//
	//	minimum= //(RealTerm|IntegerTerm| SignedConstant | ConstantValue)  
	// NumAlt ".." maximum=
	//
	//	//(RealTerm|IntegerTerm| SignedConstant | ConstantValue)
	// NumAlt ("delta" delta=
	//
	//	//(RealTerm|IntegerTerm| SignedConstant | ConstantValue)
	// NumAlt)?;
	public PropertiesGrammarAccess.NumericRangeTermElements getNumericRangeTermAccess() {
		return gaProperties.getNumericRangeTermAccess();
	}
	
	public ParserRule getNumericRangeTermRule() {
		return getNumericRangeTermAccess().getRule();
	}

	//NumAlt returns aadl2::PropertyExpression:
	//
	//	RealTerm | IntegerTerm | SignedConstant | ConstantValue;
	public PropertiesGrammarAccess.NumAltElements getNumAltAccess() {
		return gaProperties.getNumAltAccess();
	}
	
	public ParserRule getNumAltRule() {
		return getNumAltAccess().getRule();
	}

	//INTVALUE returns aadl2::Integer: //NUMERAL 	
	// INTEGER_LIT;
	public PropertiesGrammarAccess.INTVALUEElements getINTVALUEAccess() {
		return gaProperties.getINTVALUEAccess();
	}
	
	public ParserRule getINTVALUERule() {
		return getINTVALUEAccess().getRule();
	}

	////terminal NUMERAL:
	// //	(DIGIT)+('_' (DIGIT)+)*
	// //;
	// //terminal INT returns ecore::EInt: (DIGIT)+('_' (DIGIT)+)*;
	//
	//
	//terminal fragment EXPONENT:
	//
	//	("e" | "E") ("+" | "-")? DIGIT+;
	public TerminalRule getEXPONENTRule() {
		return gaProperties.getEXPONENTRule();
	} 

	//terminal fragment INT_EXPONENT:
	//
	//	("e" | "E") "+"? DIGIT+;
	public TerminalRule getINT_EXPONENTRule() {
		return gaProperties.getINT_EXPONENTRule();
	} 

	//terminal REAL_LIT:
	//
	//	DIGIT+ ("_" DIGIT+)* ("." DIGIT+ ("_" DIGIT+)* EXPONENT?);
	public TerminalRule getREAL_LITRule() {
		return gaProperties.getREAL_LITRule();
	} 

	//terminal fragment DIGIT:
	//
	//	"0".."9";
	public TerminalRule getDIGITRule() {
		return gaProperties.getDIGITRule();
	} 

	//terminal fragment EXTENDED_DIGIT:
	//
	//	"0".."9" | "a".."f" | "A".."F";
	public TerminalRule getEXTENDED_DIGITRule() {
		return gaProperties.getEXTENDED_DIGITRule();
	} 

	//terminal fragment BASED_INTEGER:
	//
	//	EXTENDED_DIGIT ("_"? EXTENDED_DIGIT)*;
	public TerminalRule getBASED_INTEGERRule() {
		return gaProperties.getBASED_INTEGERRule();
	} 

	//QPREF:
	//
	//	ID ("::" ID)?;
	public PropertiesGrammarAccess.QPREFElements getQPREFAccess() {
		return gaProperties.getQPREFAccess();
	}
	
	public ParserRule getQPREFRule() {
		return getQPREFAccess().getRule();
	}

	//QCREF:
	//
	//	(ID "::")* ID ("." ID)?;
	public PropertiesGrammarAccess.QCREFElements getQCREFAccess() {
		return gaProperties.getQCREFAccess();
	}
	
	public ParserRule getQCREFRule() {
		return getQCREFAccess().getRule();
	}

	//STAR:
	//
	//	"*";
	public PropertiesGrammarAccess.STARElements getSTARAccess() {
		return gaProperties.getSTARAccess();
	}
	
	public ParserRule getSTARRule() {
		return getSTARAccess().getRule();
	}

	////terminal IDANNEXTEXT: ID ANNEXTEXT;
	// terminal ANNEXTEXT:
	//
	//	"{**"->"**}";
	public TerminalRule getANNEXTEXTRule() {
		return gaProperties.getANNEXTEXTRule();
	} 

	//terminal STRING:
	//
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaProperties.getSTRINGRule();
	} 

	////terminal ID  		: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	// terminal ID:
	//
	//	("a".."z" | "A".."Z") ("_"? ("a".."z" | "A".."Z" | "0".."9"))*;
	public TerminalRule getIDRule() {
		return gaProperties.getIDRule();
	} 

	//terminal WS:
	//
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaProperties.getWSRule();
	} 
}
